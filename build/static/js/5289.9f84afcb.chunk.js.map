{"version":3,"file":"static/js/5289.9f84afcb.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","components/VerticalForm.js","components/FormInput.js","pages/account/AccountLayout.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","// @flow\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\ntype VerticalFromProps = {\r\n    defaultValues?: Object,\r\n    resolver?: any,\r\n    children?: any,\r\n    onSubmit?: (value: any) => void,\r\n    formClass?: string,\r\n};\r\n\r\nconst VerticalForm = ({\r\n    defaultValues,\r\n    resolver,\r\n    children,\r\n    onSubmit,\r\n    formClass,\r\n}: VerticalFromProps): React$Element<any> => {\r\n    /*\r\n     * form methods\r\n     */\r\n    const methods = useForm({ defaultValues, resolver });\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        control,\r\n        formState: { errors },\r\n    } = methods;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\r\n            {Array.isArray(children)\r\n                ? children.map((child) => {\r\n                      return child.props && child.props.name\r\n                          ? React.createElement(child.type, {\r\n                                ...{\r\n                                    ...child.props,\r\n                                    register,\r\n                                    key: child.props.name,\r\n                                    errors,\r\n                                    control,\r\n                                },\r\n                            })\r\n                          : child;\r\n                  })\r\n                : children}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default VerticalForm;\r\n","// @flow\r\nimport React, { useState } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n/* Password Input */\r\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mb-0\">\r\n                <Form.Control\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder={placeholder}\r\n                    name={name}\r\n                    id={name}\r\n                    as=\"input\"\r\n                    ref={(r) => {\r\n                        if (refCallback) refCallback(r);\r\n                    }}\r\n                    className={className}\r\n                    isInvalid={errors && errors[name] ? true : false}\r\n                    {...(register ? register(name) : {})}\r\n                    autoComplete={name}\r\n                />\r\n                <div\r\n                    className={classNames('input-group-text', 'input-group-password', {\r\n                        'show-password': showPassword,\r\n                    })}\r\n                    data-password={showPassword ? 'true' : 'false'}>\r\n                    <span\r\n                        className=\"password-eye\"\r\n                        onClick={() => {\r\n                            setShowPassword(!showPassword);\r\n                        }}></span>\r\n                </div>\r\n            </InputGroup>\r\n        </>\r\n    );\r\n};\r\n\r\ntype FormInputProps = {\r\n    label?: string,\r\n    type?: string,\r\n    name?: string,\r\n    placeholder?: string,\r\n    register?: any,\r\n    errors?: any,\r\n    className?: string,\r\n    labelClassName?: string,\r\n    containerClass?: string,\r\n    refCallback?: any,\r\n    children?: any,\r\n};\r\n\r\nconst FormInput = ({\r\n    label,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    className,\r\n    labelClassName,\r\n    containerClass,\r\n    refCallback,\r\n    children,\r\n    ...otherProps\r\n}: FormInputProps): React$Element<React$FragmentType> => {\r\n    // handle input type\r\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\r\n\r\n    return (\r\n        <>\r\n            {type === 'hidden' ? (\r\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\r\n            ) : (\r\n                <>\r\n                    {type === 'password' ? (\r\n                        <>\r\n                            <Form.Group className={containerClass}>\r\n                                {label ? (\r\n                                    <>\r\n                                        {' '}\r\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\r\n                                    </>\r\n                                ) : null}\r\n                                <PasswordInput\r\n                                    name={name}\r\n                                    placeholder={placeholder}\r\n                                    refCallback={refCallback}\r\n                                    errors={errors}\r\n                                    register={register}\r\n                                    className={className}\r\n                                />\r\n\r\n                                {errors && errors[name] ? (\r\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\r\n                                        {errors[name]['message']}\r\n                                    </Form.Control.Feedback>\r\n                                ) : null}\r\n                            </Form.Group>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {type === 'select' ? (\r\n                                <>\r\n                                    <Form.Group className={containerClass}>\r\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\r\n\r\n                                        <Form.Select\r\n                                            type={type}\r\n                                            label={label}\r\n                                            name={name}\r\n                                            id={name}\r\n                                            ref={(r) => {\r\n                                                if (refCallback) refCallback(r);\r\n                                            }}\r\n                                            comp={comp}\r\n                                            className={className}\r\n                                            isInvalid={errors && errors[name] ? true : false}\r\n                                            {...(register ? register(name) : {})}\r\n                                            {...otherProps}>\r\n                                            {children}\r\n                                        </Form.Select>\r\n\r\n                                        {errors && errors[name] ? (\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {errors[name]['message']}\r\n                                            </Form.Control.Feedback>\r\n                                        ) : null}\r\n                                    </Form.Group>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {type === 'checkbox' || type === 'radio' ? (\r\n                                        <>\r\n                                            <Form.Group className={containerClass}>\r\n                                                <Form.Check\r\n                                                    type={type}\r\n                                                    label={label}\r\n                                                    name={name}\r\n                                                    id={name}\r\n                                                    ref={(r) => {\r\n                                                        if (refCallback) refCallback(r);\r\n                                                    }}\r\n                                                    className={className}\r\n                                                    isInvalid={errors && errors[name] ? true : false}\r\n                                                    {...(register ? register(name) : {})}\r\n                                                    {...otherProps}\r\n                                                />\r\n\r\n                                                {errors && errors[name] ? (\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors[name]['message']}\r\n                                                    </Form.Control.Feedback>\r\n                                                ) : null}\r\n                                            </Form.Group>\r\n                                        </>\r\n                                    ) : (\r\n                                        <Form.Group className={containerClass}>\r\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\r\n\r\n                                            <Form.Control\r\n                                                type={type}\r\n                                                placeholder={placeholder}\r\n                                                name={name}\r\n                                                id={name}\r\n                                                as={comp}\r\n                                                ref={(r) => {\r\n                                                    if (refCallback) refCallback(r);\r\n                                                }}\r\n                                                className={className}\r\n                                                isInvalid={errors && errors[name] ? true : false}\r\n                                                {...(register ? register(name) : {})}\r\n                                                {...otherProps}\r\n                                                autoComplete={name}>\r\n                                                {children ? children : null}\r\n                                            </Form.Control>\r\n\r\n                                            {errors && errors[name] ? (\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors[name]['message']}\r\n                                                </Form.Control.Feedback>\r\n                                            ) : null}\r\n                                        </Form.Group>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n","// @flow\r\nimport React, { useEffect } from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// images\r\nimport { Logo } from '../../helpers/image';\r\n\r\ntype AccountLayoutProps = {\r\n    bottomLinks?: React$Element<any>,\r\n    children?: any,\r\n};\r\n\r\nconst AccountLayout = ({ bottomLinks, children }: AccountLayoutProps): React$Element<any> => {\r\n    const { t } = useTranslation();\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    useEffect(() => {\r\n        if (document.body) document.body.classList.add('authentication-bg');\r\n\r\n        return () => {\r\n            if (document.body) document.body.classList.remove('authentication-bg');\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"account-pages pt-2 pt-sm-5 pb-4 pb-sm-5\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md={8} lg={6} xl={5} xxl={4}>\r\n                            <Card>\r\n                                {/* logo */}\r\n                                <Card.Header className=\" text-center\" style={{ backgroundColor: '#008003' }}>\r\n                                    <Link to=\"/\">\r\n                                        <span>\r\n                                            <img src={Logo} alt=\"\" height=\"70\" className='bg-light rounded-pill px-3' />\r\n                                        </span>\r\n                                    </Link>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"p-4\">{children}</Card.Body>\r\n                            </Card>\r\n\r\n                            {/* bottom links */}\r\n                            {bottomLinks}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <footer className=\"footer footer-alt\">{currentYear} © BMG - <a href=\"https://rowthtech.com/\" className='text-muted'><u>rowthtech.com</u></a></footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountLayout;\r\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture = false) {\n  const handler = useEventCallback(listener);\n  useEffect(() => {\n    const target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return () => target.removeEventListener(event, handler, capture);\n  }, [eventTarget]);\n}"],"names":["DivStyledAsH4","divWithClassName","displayName","AlertHeading","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","AlertLink","Anchor","Alert","uncontrolledProps","show","closeLabel","closeVariant","children","variant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","formState","errors","noValidate","Array","isArray","map","child","name","type","key","PasswordInput","placeholder","refCallback","showPassword","setShowPassword","useState","_Fragment","InputGroup","Form","Control","id","r","isInvalid","autoComplete","_ref2","label","labelClassName","containerClass","otherProps","comp","Group","Label","Feedback","Select","Check","bottomLinks","t","useTranslation","currentYear","Date","getFullYear","useEffect","document","body","classList","add","remove","Container","Row","Col","md","lg","xl","xxl","Card","Header","style","backgroundColor","to","src","Logo","alt","height","Body","href","WeakMap","_excluded","onKeyDown","n","hasOwnProperty","call","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","tagName","handleKeyDown","trim","useEventListener","eventTarget","event","listener","capture","arguments","length","handler","target","addEventListener","removeEventListener"],"sourceRoot":""}
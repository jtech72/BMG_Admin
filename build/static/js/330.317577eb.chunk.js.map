{"version":3,"file":"static/js/330.317577eb.chunk.js","mappings":"qRAoCA,MAwFA,EAxFcA,KACV,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MACXC,EAAcF,EAASG,OAASH,EAASG,MAAMC,KAAOJ,EAASG,MAAMC,KAAKC,SAAW,KAE3FC,EAAAA,EAAAA,WAAU,KACNR,GAASS,EAAAA,EAAAA,OACV,CAACT,IAEJ,MAAM,QAAEU,EAAO,aAAEC,EAAY,KAAEC,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,IAAaT,IAAK,CAC7DK,QAASL,EAAMU,KAAKL,QACpBE,KAAMP,EAAMU,KAAKH,KACjBC,MAAOR,EAAMU,KAAKF,MAClBF,aAAcN,EAAMU,KAAKJ,gBAMvBK,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,MAAOF,EAAAA,KAAaG,SAASvB,EAAE,uBAC/BwB,SAAUJ,EAAAA,KAAaG,SAASvB,EAAE,6BAW1C,OACIyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACMd,GAAgBC,KAASc,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAIxB,EAAayB,SAAO,KAG7DN,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAAAL,SAAA,EACVF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,0BAAyBN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,wCAAuCN,SAAE3B,EAAE,aACzD4B,EAAAA,EAAAA,KAAA,KAAGK,UAAU,kBAAiBN,SACzB3B,EAAE,qEAIVe,IACGa,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACC,QAAQ,SAASF,UAAU,OAAMN,SACnCZ,KAITU,EAAAA,EAAAA,MAACW,EAAAA,EAAY,CACTC,SAxBEC,IACdpC,GAASqC,EAAAA,EAAAA,IAAUD,EAAgB,MAAGA,EAAmB,YAwB7CE,SAAUtB,EACdS,SAAA,EAEIC,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACNC,MAAO1C,EAAE,SACT2C,KAAK,OACLC,KAAK,QACLC,YAAa7C,EAAE,oBACf8C,eAAgB,UAEpBlB,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACNC,MAAO1C,EAAE,YACT2C,KAAK,WACLC,KAAK,WACLC,YAAa7C,EAAE,uBACf8C,eAAgB,UAMpBlB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wBAAuBN,UAClCC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACC,MAAO,CAAEC,gBAAiB,WAAaN,KAAK,SAASO,SAAUtC,EAAQe,SACzEf,GAAkCgB,EAAAA,EAAAA,KAACuB,EAAAA,GAAa,KAArCvB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAG3B,EAAE,yB","sources":["pages/account/Login.js"],"sourcesContent":["// @flow\r\nimport React, { useEffect } from 'react';\r\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\r\nimport { Link, Navigate, useLocation } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Logo } from '../../helpers/image';\r\n//actions\r\nimport { resetAuth, loginUser } from '../../redux/actions';\r\n\r\n// components\r\nimport { VerticalForm, FormInput } from '../../components/';\r\n\r\nimport AccountLayout from './AccountLayout';\r\nimport { ButtonLoading } from '../../helpers/loader/Loading';\r\n\r\n/* bottom link of account pages */\r\n// const BottomLink = () => {\r\n//     const { t } = useTranslation();\r\n\r\n//     return (\r\n//         <Row className=\"mt-3\">\r\n//             <Col className=\"text-center\">\r\n//                 <p className=\"text-muted\">\r\n//                     {t(\"Don't have an account?\")}{' '}\r\n//                     <Link to={'/account/register'} className=\"text-muted ms-1\">\r\n//                         <b>{t('Sign Up')}</b>\r\n//                     </Link>\r\n//                 </p>\r\n//             </Col>\r\n//         </Row>\r\n//     );\r\n// };\r\n\r\nconst Login = (): React$Element<any> => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const location = useLocation();\r\n    const redirectUrl = location.state && location.state.from ? location.state.from.pathname : '/';\r\n\r\n    useEffect(() => {\r\n        dispatch(resetAuth());\r\n    }, [dispatch]);\r\n\r\n    const { loading, userLoggedIn, user, error } = useSelector((state) => ({\r\n        loading: state.Auth.loading,\r\n        user: state.Auth.user,\r\n        error: state.Auth.error,\r\n        userLoggedIn: state.Auth.userLoggedIn,\r\n    }));\r\n\r\n    /*\r\n    form validation schema\r\n    */\r\n    const schemaResolver = yupResolver(\r\n        yup.object().shape({\r\n            email: yup.string().required(t('Please enter email')),\r\n            password: yup.string().required(t('Please enter Password')),\r\n        })\r\n    );\r\n\r\n    /*\r\n    handle form submission\r\n    */\r\n    const onSubmit = (formData) => {\r\n        dispatch(loginUser(formData['email'], formData['password']));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {(userLoggedIn || user) && <Navigate to={redirectUrl} replace />}\r\n\r\n            {/* <AccountLayout bottomLinks={<BottomLink />}> */}\r\n            <AccountLayout>\r\n                <div className=\"text-center w-75 m-auto\">\r\n                    <h4 className=\"text-dark-50 text-center mt-0 fw-bold\">{t('Log In')}</h4>\r\n                    <p className=\"text-muted mb-4\">\r\n                        {t('Enter your email address and password to access admin panel.')}\r\n                    </p>\r\n                </div>\r\n\r\n                {error && (\r\n                    <Alert variant=\"danger\" className=\"my-2\">\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                <VerticalForm\r\n                    onSubmit={onSubmit}\r\n                    resolver={schemaResolver}\r\n                //  defaultValues={{ email: 'test', password: 'test' }}\r\n                >\r\n                    <FormInput\r\n                        label={t('Email')}\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        placeholder={t('Enter your email')}\r\n                        containerClass={'mb-3'}\r\n                    />\r\n                    <FormInput\r\n                        label={t('Password')}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder={t('Enter your password')}\r\n                        containerClass={'mb-3'}>\r\n                        {/* <Link to=\"/account/forget-password\" className=\"text-muted float-end\">\r\n                            <small>{t('Forgot your password?')}</small>\r\n                        </Link> */}\r\n                    </FormInput>\r\n\r\n                    <div className=\"mb-3 mb-0 text-center\">\r\n                        <Button style={{ backgroundColor: '#008003' }} type=\"submit\" disabled={loading}>\r\n                            {!loading ? (<>{t('Log In')}</>) : (<ButtonLoading />)}\r\n                        </Button>\r\n                    </div>\r\n                </VerticalForm>\r\n            </AccountLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","t","useTranslation","dispatch","useDispatch","location","useLocation","redirectUrl","state","from","pathname","useEffect","resetAuth","loading","userLoggedIn","user","error","useSelector","Auth","schemaResolver","yupResolver","yup","shape","email","required","password","_jsxs","_Fragment","children","_jsx","Navigate","to","replace","AccountLayout","className","Alert","variant","VerticalForm","onSubmit","formData","loginUser","resolver","FormInput","label","type","name","placeholder","containerClass","Button","style","backgroundColor","disabled","ButtonLoading"],"sourceRoot":""}
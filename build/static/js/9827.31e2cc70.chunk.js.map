{"version":3,"file":"static/js/9827.31e2cc70.chunk.js","mappings":"4JAGA,MAgHA,EAhHmBA,IAA0E,IAAzE,UAAEC,EAAS,SAAEC,EAAQ,WAAEC,EAAU,aAAEC,EAAY,iBAAEC,GAAkBL,EAQnF,OAPAM,EAAAA,EAAAA,WAAU,KAEFL,EAAYE,GACZC,EAAaG,KAAKC,IAAI,EAAGL,KAE9B,CAACF,EAAWE,EAAYC,KAGvBK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qDAAoDC,SAAA,EAE/DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,OAAMC,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UACIC,MAAOX,EACPY,SAAWC,IACP,MAAMC,EAAUC,OAAOF,EAAEG,OAAOL,OAChCR,EAAiBW,GACjBZ,EAAa,IAEjBM,UAAU,oCAAmCC,SAC5C,CAAC,GAAI,GAAI,GAAI,KAAKQ,IAAKC,IACpBR,EAAAA,EAAAA,KAAA,UAAmBC,MAAOO,EAAKT,SAC1BS,GADQA,UAQzBX,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMC,SAAA,CAAC,OACd,KACLF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CACKV,EAAU,OAAKE,SAKxBS,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SACIS,KAAK,SACLC,YAAW,GAAAC,OAAKtB,GAChBuB,IAAI,IACJhB,IAAKL,EACLW,SAAWC,IACP,MAAMU,EAAcR,OAAOF,EAAEG,OAAOL,OAChCY,GAAe,GAAKA,GAAetB,GACnCC,EAAaqB,IAGrBf,UAAU,mCACVgB,MAAO,CAAEC,MAAO,WAIpBlB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kFAAiFC,SAAA,CAE1FV,EAAY,IACTW,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAYkB,QAASA,IAAMxB,EAAaH,EAAY,GAAGU,UACjEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,IAAIpB,UAAU,YAAWC,SAAC,eAO1CoB,MAAMC,KAAK,CAAEC,OAAQ9B,IAAcgB,IAAI,CAACe,EAAGC,KACxC,MAAMC,EAAOD,EAAI,EACXE,EAAgBD,IAASnC,EAI/B,OAAIE,GAAc,GAHIiC,GAAQnC,EAAY,GAAKmC,GAAQnC,EAAY,IACvC,IAATmC,GAAcA,IAASjC,IAIlCS,EAAAA,EAAAA,KAAA,MAEIF,UAAS,aAAAa,OAAec,EAAgB,SAAW,IACnDT,QAASA,IAAMxB,EAAagC,GAAMzB,UAClCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,IAAIpB,UAAU,YAAWC,SAC7ByB,KAJAA,GASH,IAATA,GAAcnC,GAAa,GAC3BmC,IAASjC,EAAa,GAAKF,GAAaE,EAAa,GAGlDS,EAAAA,EAAAA,KAAA,MAAeF,UAAU,qBAAoBC,UACzCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,IAAIpB,UAAU,iBAAgBC,SAAC,SADnCyB,GAQV,OAIVnC,EAAYE,IACTS,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAYkB,QAASA,IAAMxB,EAAaH,EAAY,GAAGU,UACjEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,IAAIpB,UAAU,YAAWC,SAAC,iB,qFCvF3D,MA4BA,EA5BmB2B,IAEX1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAAA5B,UACAC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAAA7B,UACAF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,UAAW,CAAEhC,UAAW,OAAQC,SAEvC2B,EAAMK,gBAAgBxB,IAAI,CAACyB,EAAMC,IACvBD,EAAKE,QACRlC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAWM,KAAI,CAACD,QAAM,EAAAnC,UACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEiC,EAAKI,SADZH,IAI7BjC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAWM,KAAI,CAAaE,KAAML,EAAKM,KAAKvC,UACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEiC,EAAKI,SADnBH,SAOtCjC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAE2B,EAAMa,c,4ECPnE,QAVA,SAAyBC,EAAIC,GAC3B,MAAMC,GAAUC,EAAAA,EAAAA,SAAO,IACvBjD,EAAAA,EAAAA,WAAU,KACR,IAAIgD,EAAQE,QAIZ,OAAOJ,IAHLE,EAAQE,SAAU,GAInBH,EACL,E,kFC/Ba,MAAAI,EAAA,8BAMPC,EAA+BC,EAAAA,WAAiB,CAAA3D,EAKnD4D,KAAQ,IAL4C,UACrDlD,EAAS,SACTmD,EACAC,GAAIC,EAAY,OAEjB/D,EADIsC,GAAK0B,EAAAA,EAAAA,GAAAhE,EAAAyD,GAGR,OADAI,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,qBACpBjD,EAAAA,EAAAA,KAAKmD,GAASG,EAAAA,EAAAA,GAAA,CAChCN,IAAKA,EACLlD,UAAWyD,IAAWzD,EAAWmD,IAC9BvB,MAGPoB,EAAgBU,YAAc,kBAC9B,UCpBaX,EAAA,8BAMPY,EAA4BV,EAAAA,WAAiB,CAAA3D,EAMhD4D,KAAQ,IAJTE,GAAIC,EAAY,MAAK,SACrBF,EAAQ,UACRnD,GAEDV,EADIsC,GAAK0B,EAAAA,EAAAA,GAAAhE,EAAAyD,GAER,MAAMa,EAAiBH,IAAWzD,GAAWuD,EAAAA,EAAAA,IAAmBJ,EAAU,kBAC1E,OAAoBjD,EAAAA,EAAAA,KAAKmD,GAASG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAChCN,IAAKA,GACFtB,GAAK,IACR5B,UAAW4D,OAGfD,EAAaD,YAAc,eAC3B,U,4CCrBa,MAAAX,EAAA,uBAAAc,EAAA,oUA6Bb,MAAMC,EAGNb,EAAAA,WAAiB,CAAAc,EAGdb,KAAQ,IAHO,mBAChBc,EAAqB,GAEtBD,EADIE,GAAiBX,EAAAA,EAAAA,GAAAS,EAAAhB,GAEpB,MAAAmB,GAsCIC,EAAAA,EAAAA,KAAeX,EAAAA,EAAAA,GAAC,CAClBQ,sBACGC,GACF,CACDG,YAAa,cAxCbhB,GAAIC,EAAY,MAAK,SACrBF,EAAQ,MACRkB,GAAQ,EAAI,KACZC,GAAO,EAAK,SACZC,GAAW,EAAI,WACfC,GAAa,EAAI,gBACjBC,EAAkB,GAAE,YACpBL,EAAW,SACXM,EAAQ,QACRC,EAAO,OACPC,EAAM,SACNC,EAAW,IAAI,SACfC,GAAW,EAAI,UACfC,EAAS,MACTC,EAAQ,QAAO,YACfC,EAAW,WACXC,EAAU,KACVC,GAAO,EAAI,MACXC,GAAQ,EAAI,aACZC,EAAY,YACZC,EAAW,WACXC,EAAU,SACVC,GAAwBtF,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfF,UAAW,+BACX,UACFyF,EAAY,WAAU,SACtBC,GAAwBxF,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfF,UAAW,+BACX,UACF2F,EAAY,OAAM,QAClBC,EAAO,UACP5F,EAAS,SACTC,GAEDiE,EADItC,GAAK0B,EAAAA,EAAAA,GAAAY,EAAAL,GAOJgC,GAAStC,EAAAA,EAAAA,IAAmBJ,EAAU,YACtC2C,IAAQC,EAAAA,EAAAA,MACRC,IAAmBnD,EAAAA,EAAAA,QAAO,OACzBoD,GAAWC,KAAgBC,EAAAA,EAAAA,UAAS,SACpCC,GAAQC,KAAaF,EAAAA,EAAAA,WAAS,IAC9BG,GAAWC,KAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,GAAqBC,KAA0BN,EAAAA,EAAAA,UAAS/B,GAAe,IAC9ExE,EAAAA,EAAAA,WAAU,KACH0G,IAAalC,IAAgBoC,KAC5BR,GAAiBlD,QACnBoD,GAAaF,GAAiBlD,SAE9BoD,IAAc9B,GAAe,GAAKoC,GAAsB,OAAS,QAE/DnC,GACFkC,IAAa,GAEfE,GAAuBrC,GAAe,KAEvC,CAACA,EAAakC,GAAWE,GAAqBnC,KACjDzE,EAAAA,EAAAA,WAAU,KACJoG,GAAiBlD,UACnBkD,GAAiBlD,QAAU,QAG/B,IACI4D,GADAC,GAAc,GAKlBC,EAAAA,EAAAA,IAAQ3G,EAAU,CAAC4G,EAAO1E,OACtBwE,GACExE,IAAUiC,IACZsC,GAAsBG,EAAMjF,MAAMiD,YAGtC,MAAMiC,IAAyBC,EAAAA,EAAAA,GAAgBL,IACzCM,IAAOC,EAAAA,EAAAA,aAAYC,IACvB,GAAIZ,GACF,OAEF,IAAIa,EAAkBX,GAAsB,EAC5C,GAAIW,EAAkB,EAAG,CACvB,IAAKhC,EACH,OAEFgC,EAAkBR,GAAc,CAClC,CACAX,GAAiBlD,QAAU,OACf,MAAZ4B,GAAoBA,EAASyC,EAAiBD,IAC7C,CAACZ,GAAWE,GAAqB9B,EAAUS,EAAMwB,KAG9CS,IAAOC,EAAAA,EAAAA,GAAiBH,IAC5B,GAAIZ,GACF,OAEF,IAAIa,EAAkBX,GAAsB,EAC5C,GAAIW,GAAmBR,GAAa,CAClC,IAAKxB,EACH,OAEFgC,EAAkB,CACpB,CACAnB,GAAiBlD,QAAU,OACf,MAAZ4B,GAAoBA,EAASyC,EAAiBD,KAE1CI,IAAazE,EAAAA,EAAAA,WACnB0E,EAAAA,EAAAA,qBAAoBrE,EAAK,KAAM,CAC7BsE,QAASF,GAAWxE,QACpBkE,QACAI,WAIF,MAAMK,IAAkBJ,EAAAA,EAAAA,GAAiB,MAClCK,SAASC,QAtIlB,SAAmBH,GACjB,IAAKA,IAAYA,EAAQxG,QAAUwG,EAAQI,aAAeJ,EAAQI,WAAW5G,MAC3E,OAAO,EAET,MAAM6G,EAAeC,iBAAiBN,GACtC,MAAgC,SAAzBK,EAAaE,SAAkD,WAA5BF,EAAaG,YAA4E,SAAjDF,iBAAiBN,EAAQI,YAAYG,OACzH,CAgI4BE,CAAUX,GAAWxE,WACvCgD,GACFkB,KAEAI,QAIAc,GAA+B,SAAdjC,GAAuB,QAAU,MACxDkC,EAAgB,KACV9D,IAIO,MAAXM,GAAmBA,EAAQ6B,GAAqB0B,IACtC,MAAVtD,GAAkBA,EAAO4B,GAAqB0B,MAC7C,CAAC1B,KACJ,MAAM4B,GAAiB,GAAHvH,OAAMgF,EAAM,UAAAhF,OAASoF,IACnCoC,GAAuB,GAAHxH,OAAMgF,EAAM,UAAAhF,OAASqH,IACzCI,IAAcrB,EAAAA,EAAAA,aAAYsB,KAC9BC,EAAAA,EAAAA,GAAqBD,GACV,MAAX5D,GAAmBA,EAAQ6B,GAAqB0B,KAC/C,CAACvD,EAAS6B,GAAqB0B,KAC5BO,IAAgBxB,EAAAA,EAAAA,aAAY,KAChCV,IAAa,GACH,MAAV3B,GAAkBA,EAAO4B,GAAqB0B,KAC7C,CAACtD,EAAQ4B,GAAqB0B,KAC3BQ,IAAgBzB,EAAAA,EAAAA,aAAYC,IAChC,GAAIpC,IAAa,kBAAkB6D,KAAKzB,EAAM1G,OAAOoI,SACnD,OAAQ1B,EAAM2B,KACZ,IAAK,YAOH,OANA3B,EAAM4B,sBACFhD,GACFsB,GAAKF,GAELF,GAAKE,IAGT,IAAK,aAOH,OANAA,EAAM4B,sBACFhD,GACFkB,GAAKE,GAELE,GAAKF,IAMA,MAAbnC,GAAqBA,EAAUmC,IAC9B,CAACpC,EAAUC,EAAWiC,GAAMI,GAAMtB,KAC/BiD,IAAkB9B,EAAAA,EAAAA,aAAYC,IACpB,UAAVlC,GACFqB,IAAU,GAEG,MAAfpB,GAAuBA,EAAYiC,IAClC,CAAClC,EAAOC,IACL+D,IAAiB/B,EAAAA,EAAAA,aAAYC,IACjCb,IAAU,GACI,MAAdnB,GAAsBA,EAAWgC,IAChC,CAAChC,IACE+D,IAAiBpG,EAAAA,EAAAA,QAAO,GACxBqG,IAAiBrG,EAAAA,EAAAA,QAAO,GACxBsG,IAAsBC,EAAAA,EAAAA,KACtBC,IAAmBpC,EAAAA,EAAAA,aAAYC,IACnC+B,GAAenG,QAAUoE,EAAMoC,QAAQ,GAAGC,QAC1CL,GAAepG,QAAU,EACX,UAAVkC,GACFqB,IAAU,GAEI,MAAhBhB,GAAwBA,EAAa6B,IACpC,CAAClC,EAAOK,IACLmE,IAAkBvC,EAAAA,EAAAA,aAAYC,IAC9BA,EAAMoC,SAAWpC,EAAMoC,QAAQ/H,OAAS,EAC1C2H,GAAepG,QAAU,EAEzBoG,GAAepG,QAAUoE,EAAMoC,QAAQ,GAAGC,QAAUN,GAAenG,QAEtD,MAAfwC,GAAuBA,EAAY4B,IAClC,CAAC5B,IACEmE,IAAiBxC,EAAAA,EAAAA,aAAYC,IACjC,GAAI9B,EAAO,CACT,MAAMsE,EAAcR,GAAepG,QAC/BjD,KAAK8J,IAAID,GA1NK,KA2NZA,EAAc,EAChB1C,GAAKE,GAELE,GAAKF,GAGX,CACc,UAAVlC,GACFmE,GAAoBS,IAAI,KACtBvD,IAAU,IACTxB,QAAYgF,GAEH,MAAdtE,GAAsBA,EAAW2B,IAChC,CAAC9B,EAAOJ,EAAOgC,GAAMI,GAAM+B,GAAqBtE,EAAUU,IACvDuE,GAAyB,MAAZjF,IAAqBuB,KAAWE,GAC7CyD,IAAoBlH,EAAAA,EAAAA,WAC1BjD,EAAAA,EAAAA,WAAU,KACR,IAAIN,EAAM0K,EACV,IAAKF,GACH,OAEF,MAAMG,EAAWnE,GAAQkB,GAAOI,GAEhC,OADA2C,GAAkBjH,QAAUoH,OAAOC,YAAYzC,SAAS0C,gBAAkB3C,GAAkBwC,EAA0H,OAA/G3K,EAAmE,OAA3D0K,EAAwBlD,GAAuBhE,SAAmBkH,EAAwBnF,GAAoBvF,OAAOuK,GAC7N,KAC6B,OAA9BE,GAAkBjH,SACpBuH,cAAcN,GAAkBjH,WAGnC,CAACgH,GAAY9C,GAAMI,GAAMN,GAAwBjC,EAAU4C,GAAiB3B,KAC/E,MAAMwE,IAAoBC,EAAAA,EAAAA,SAAQ,IAAM/F,GAAcnD,MAAMC,KAAK,CAC/DC,OAAQoF,IACP,CAACnF,EAAGW,IAAU+E,IACH,MAAZxC,GAAoBA,EAASvC,EAAO+E,KAClC,CAAC1C,EAAYmC,GAAajC,IAC9B,OAAoB3E,EAAAA,EAAAA,MAAMsD,GAASG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACjCN,IAAKoE,IACF1F,GAAK,IACRmD,UAAW2D,GACXzD,YAAa8D,GACb7D,WAAY8D,GACZ3D,aAAcgE,GACd/D,YAAakE,GACbjE,WAAYkE,GACZzJ,UAAWyD,IAAWzD,EAAW6F,EAAQxB,GAAS,QAASC,GAAQ,GAAJzD,OAAOgF,EAAM,SAASD,GAAW,GAAJ/E,OAAOgF,EAAM,KAAAhF,OAAI+E,IAC7G3F,SAAU,CAACuE,IAA2BtE,EAAAA,EAAAA,KAAK,MAAO,CAChDF,UAAW,GAAFa,OAAKgF,EAAM,eACpB5F,UAAUQ,EAAAA,EAAAA,IAAIR,EAAU,CAACuB,EAAGW,KAAuBjC,EAAAA,EAAAA,KAAK,SAAU,CAChES,KAAM,SACN,iBAAkB,GAElB,aAAiC,MAAnB8D,GAA2BA,EAAgBlD,OAASkD,EAAgBtC,GAAS,SAAHtB,OAAYsB,EAAQ,GAC5GnC,UAAWmC,IAAUqE,GAAsB,cAAWqD,EACtD3I,QAASoJ,GAAoBA,GAAkBnI,QAAS0H,EACxD,eAAgB1H,IAAUqE,IACzBrE,OACYjC,EAAAA,EAAAA,KAAK,MAAO,CAC3BF,UAAW,GAAFa,OAAKgF,EAAM,UACpB5F,UAAUQ,EAAAA,EAAAA,IAAIR,EAAU,CAAC4G,EAAO1E,KAC9B,MAAMqI,EAAWrI,IAAUqE,GAC3B,OAAOnC,GAAqBnE,EAAAA,EAAAA,KAAKuK,EAAAA,EAAmB,CAClDC,GAAIF,EACJG,QAASH,EAAWlC,QAAcuB,EAClCe,UAAWJ,EAAW/B,QAAgBoB,EACtCgB,eAAgBC,EAAAA,EAChB7K,SAAUA,CAAC8K,EAAQC,IAA4B/H,EAAAA,aAAmB4D,GAAKrD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClEwH,GAAU,IACbhL,UAAWyD,IAAWoD,EAAMjF,MAAM5B,UAAWwK,GAAuB,YAAXO,GAAwB3C,IAA4B,YAAX2C,GAAmC,YAAXA,IAAyB,UAAsB,aAAXA,GAAoC,YAAXA,IAAyB1C,SAEhMpF,EAAAA,aAAmB4D,EAAO,CAC5C7G,UAAWyD,IAAWoD,EAAMjF,MAAM5B,UAAWwK,GAAY,gBAG3DjG,IAAyBxE,EAAAA,EAAAA,MAAMkL,EAAAA,SAAW,CAC5ChL,SAAU,EAAEkF,GAAwB,IAAhBf,KAAmCrE,EAAAA,EAAAA,MAAMmL,EAAAA,EAAQ,CACnElL,UAAW,GAAFa,OAAKgF,EAAM,iBACpB3E,QAAS8F,GACT/G,SAAU,CAACuF,EAAUC,IAA0BvF,EAAAA,EAAAA,KAAK,OAAQ,CAC1DF,UAAW,kBACXC,SAAUwF,QAETN,GAAQf,IAAgBuC,GAAc,KAAmB5G,EAAAA,EAAAA,MAAMmL,EAAAA,EAAQ,CAC1ElL,UAAW,GAAFa,OAAKgF,EAAM,iBACpB3E,QAASkG,GACTnH,SAAU,CAACyF,EAAUC,IAA0BzF,EAAAA,EAAAA,KAAK,OAAQ,CAC1DF,UAAW,kBACXC,SAAU0F,gBAMpB7B,EAASJ,YAAc,WACvB,QAAeyH,OAAOC,OAAOtH,EAAU,CACrCuH,QAASrI,EACTX,KAAMsB,G,gNCtUR,MA+WA,EA/WqB2H,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACvB,MAAMC,GAAQC,EAAAA,EAAAA,IAAaC,GAAUA,GAC/BC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAajG,EAAAA,EAAAA,UAAS,IAC/BkG,EAAuB,OAALP,QAAK,IAALA,GAA6B,QAAxBP,EAALO,EAAOQ,8BAAsB,IAAAf,GAAU,QAAVC,EAA7BD,EAA+BgB,gBAAQ,IAAAf,OAAlC,EAALA,EAAyCgB,KAC3DC,EAA0B,OAALX,QAAK,IAALA,GAA6B,QAAxBL,EAALK,EAAOQ,8BAAsB,IAAAb,OAAxB,EAALA,EAA+BiB,QACpDC,GAAoB,OAALb,QAAK,IAALA,GAA6B,QAAxBJ,EAALI,EAAOQ,8BAAsB,IAAAZ,GAAU,QAAVC,EAA7BD,EAA+Ba,gBAAQ,IAAAZ,GAAY,QAAZC,EAAvCD,EAAyCiB,kBAAU,IAAAhB,OAA9C,EAALA,EAAqDiB,eAAgB,GACnFtN,EAAWG,IAAgByG,EAAAA,EAAAA,UAAS,IACpC3G,EAAUsN,IAAe3G,EAAAA,EAAAA,UAAS,KAClC1G,EAAYsN,IAAiB5G,EAAAA,EAAAA,UAAStG,KAAKmN,KAAKL,EAAenN,IAChEyN,GAAWC,EAAAA,EAAAA,OAEjBtN,EAAAA,EAAAA,WAAU,KACNmN,EAAclN,KAAKmN,KAAKL,EAAenN,KACxC,CAACmN,EAAcnN,KAElBI,EAAAA,EAAAA,WAAU,KACNqM,GAASkB,EAAAA,EAAAA,IAA0B,CAAEhB,OAAQA,EAAQiB,MAAO5N,EAAUkC,KAAMnC,EAAW8N,YAAY,MACpG,CAACpB,EAAU1M,EAAWC,EAAU2M,IAEnC,MAAOmB,EAAWC,IAAgBpH,EAAAA,EAAAA,WAAS,IACpCqH,EAAiBC,IAAsBtH,EAAAA,EAAAA,UAAS,MAUjDuH,EAAa7E,IACf,OAAQA,GACJ,IAAK,aACD,MAAO,gBACX,IAAK,gBACD,MAAO,mBAEX,QAEI,OAAOA,EACF8E,QAAQ,WAAY,OACpBA,QAAQ,QAAS,KACjBA,QAAQ,QAAUC,GAAMA,EAAEC,iBAgBrCC,EAAcA,CAAC3N,EAAO0I,KAExB,GAAY,eAARA,GAAgC,kBAARA,EACxB,OAAY,OAAL1I,QAAK,IAALA,OAAK,EAALA,EAAO4N,QAAa,OAAL5N,QAAK,IAALA,OAAK,EAALA,EAAO6N,kBAAmB,MAGpD,GAAqB,kBAAV7N,GAAgC,OAAVA,EAC7B,OACID,EAAAA,EAAAA,KAAA,OAAKc,MAAO,CAAEiN,YAAa,OAAQC,WAAY,kBAAmBjO,SAC7DkL,OAAOgD,QAAQhO,GAAOM,IAAInB,IAAA,IAAE8O,EAAQC,GAAS/O,EAAA,OAC1CS,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAASyN,EAAUU,GAAQ,OAAU,IAAEN,EAAYO,EAAUD,KADvDA,OAS1B,GA7BkBjO,IACG,kBAAVA,GAGU,mDACDwI,KAAKxI,GAwBrBmO,CAAanO,GAAQ,CAErB,OADiB,IAAIoO,KAAKpO,GAAOqO,cAAcC,MAAM,KAAK,EAE9D,CAEA,OAAOtO,GAELuO,EAAe,CACjB,MACA,YACA,YACA,QACA,SACA,SACA,UACA,aACA,oBACA,iBACA,mBACA,WAwBJ,OACI3O,EAAAA,EAAAA,MAAAkL,EAAAA,SAAA,CAAAhL,SAAA,EACIC,EAAAA,EAAAA,KAACyO,EAAAA,EAAS,CACN1M,gBAAiB,CACb,CACIK,MAAO,aACPE,KAAM,kBACNJ,QAAQ,IAGhBK,MAAK,gBAETvC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAAA5B,UACAC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAAC8M,GAAI,GAAG3O,UACRC,EAAAA,EAAAA,KAAC2O,EAAAA,EAAI,CACD7N,MAAO,CACH8N,UACI,sIACN7O,UACFF,EAAAA,EAAAA,MAAC8O,EAAAA,EAAKE,KAAI,CAAC/O,UAAU,cAAaC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACnEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uCAAsCC,SAAA,CAAC,mBAClC0M,MAErBzM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAkBlByM,GACGvM,EAAAA,EAAAA,KAAA+K,EAAAA,SAAA,CAAAhL,UACIC,EAAAA,EAAAA,KAAC8O,EAAAA,GAAO,OAGZ9O,EAAAA,EAAAA,KAAA+K,EAAAA,SAAA,CAAAhL,SACKoM,IAAkC,OAAfA,QAAe,IAAfA,OAAe,EAAfA,EAAiB9K,QAAS,GAC1CrB,EAAAA,EAAAA,KAAA+K,EAAAA,SAAA,CAAAhL,UACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,UACXC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAEjBE,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,SAAC,gBAChBC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,SAAC,kBAChBC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,SAAC,WAChBC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,SAAC,eAChBC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,SAAC,eAChBC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,SAAC,qBAIxBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SACT,OAAfoM,QAAe,IAAfA,OAAe,EAAfA,EAAiB5L,IAAI,CAAC+L,EAAMrK,KAAK,IAAA+M,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC9B3P,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,gCAA+BC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAI+O,MAAM,MAAKhP,UAAGV,EAAY,GAAKC,EAAW2C,EAAQ,KACtDjC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAC7B,OAAJuM,QAAI,IAAJA,GAAAA,EAAMmD,WACH5P,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,IAAM,OAAJuM,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,UAAU,QAExBzP,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,WAMxDC,EAAAA,EAAAA,KAAA,MACIF,UAAU,yBACVgB,MAAO,CACH4O,OAAQ,WAShB3P,UAEIC,EAAAA,EAAAA,KAAC2P,EAAAA,EAAc,CACXC,UAAU,OACVC,SACI7P,EAAAA,EAAAA,KAAC8P,EAAAA,EAAO,CAACC,GAAG,kBAAiBhQ,SAAC,kBAGjCA,UACDC,EAAAA,EAAAA,KAAA,KAAAD,SACS,OAAJuM,QAAI,IAAJA,GAAAA,EAAM0D,aACHnQ,EAAAA,EAAAA,MAAA,QACImB,QAASA,KAAO,IAADiP,EACXlD,EAAS,cAADpM,OACc,OAAJ2L,QAAI,IAAJA,GAAe,QAAX2D,EAAJ3D,EAAM4D,iBAAS,IAAAD,OAAX,EAAJA,EAAiBE,KAC/B,CACIrE,MAAO,CACHsE,QACQ,OAAJ9D,QAAI,IAAJA,OAAI,EAAJA,EAAM8D,YAIxBrQ,SAAA,EACG,OAAJuM,QAAI,IAAJA,GAAiB,QAAb0C,EAAJ1C,EAAM0D,mBAAW,IAAAhB,OAAb,EAAJA,EAAmBqB,MAAM,EAAG,KACzB,MAAO,QAGfrQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,eAOhEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAC7B,OAAJuM,QAAI,IAAJA,GAAe,QAAX2C,EAAJ3C,EAAM4D,iBAAS,IAAAjB,GAAfA,EAAiBqB,OACdzQ,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAW,OAAJuM,QAAI,IAAJA,GAAe,QAAX4C,EAAJ5C,EAAM4D,iBAAS,IAAAhB,OAAX,EAAJA,EAAiBoB,MAAM,QAE9BtQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,WAKxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAC7B,OAAJuM,QAAI,IAAJA,GAAe,QAAX6C,EAAJ7C,EAAM4D,iBAAS,IAAAf,GAAfA,EAAiBoB,WACd1Q,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,KAAO,OAAJuM,QAAI,IAAJA,GAAe,QAAX8C,EAAJ9C,EAAM4D,iBAAS,IAAAd,OAAX,EAAJA,EAAiBmB,UAAU,QAEpCvQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,WAMxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SACd,OAAJuM,QAAI,IAAJA,GAAAA,EAAMkE,QACHxQ,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SACxB,GAAAY,QAAO,OAAJ2L,QAAI,IAAJA,GAAY,QAAR+C,EAAJ/C,EAAMkE,cAAM,IAAAnB,OAAR,EAAJA,EAAcxB,OAAQ,GAAE,KAAAlN,QAAQ,OAAJ2L,QAAI,IAAJA,GAAY,QAARgD,EAAJhD,EAAMkE,cAAM,IAAAlB,OAAR,EAAJA,EAAcmB,WAAY,IACnDC,QAAU,SAGrB1Q,EAAAA,EAAAA,KAAA,QAAMF,UAAU,GAAEC,SAAC,WAG3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,WAAUC,SACf,OAAJuM,QAAI,IAAJA,GAAY,QAARiD,EAAJjD,EAAMkE,cAAM,IAAAjB,GAAZA,EAAcoB,OACX9Q,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAW,OAAJuM,QAAI,IAAJA,GAAY,QAARkD,EAAJlD,EAAMkE,cAAM,IAAAhB,OAAR,EAAJA,EAAcmB,MAAM,QAE3B3Q,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,YA3FnDkC,eAuG7BjC,EAAAA,EAAAA,KAAA,OACIF,UAAU,+DACVgB,MAAO,CAAE8P,OAAQ,QAAS7Q,UAC1BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,2BAKtC0M,EAAe,KACZzM,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAU,CACPxR,UAAWA,EACXC,SAAUA,EACVC,WAAYA,EACZC,aAAcA,EACdC,iBAAkBmN,cAQ1C/M,EAAAA,EAAAA,MAACiR,EAAAA,EAAK,CAACC,KAAM3D,EAAW4D,OAAQA,IAAM3D,GAAa,GAAQ4D,UAAQ,EAACzQ,KAAK,KAAIT,SAAA,EACzEF,EAAAA,EAAAA,MAACiR,EAAAA,EAAMI,OAAM,CAACpR,UAAU,uBAAuBgB,MAAO,CAAEqQ,gBAAiB,WAAYpR,SAAA,EACjFC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAMM,MAAK,CAACtR,UAAU,cAAaC,SAAC,qBACrCC,EAAAA,EAAAA,KAAA,KACIF,UAAU,qBACVkB,QAASA,IAAMqM,GAAa,GAC5BvM,MAAO,CAAE4O,OAAQ,iBAEzB1P,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAMjC,KAAI,CAAA9O,SACNuN,IACGzN,EAAAA,EAAAA,MAACwR,EAAAA,EAAS,CAAAtR,SAAA,EAEgB,QAArB4L,EAAA2B,EAAgBgE,aAAK,IAAA3F,OAAA,EAArBA,EAAuBtK,QAAS,IAC7BrB,EAAAA,EAAAA,KAAC4D,EAAAA,EAAQ,CAACe,SAAU,IAAM7E,UAAU,yBAAwBC,SACvDuN,EAAgBgE,MAAM/Q,IAAI,CAACgR,EAAKtP,KAC7BjC,EAAAA,EAAAA,KAAC4D,EAAAA,EAASzB,KAAI,CAAApC,UACVC,EAAAA,EAAAA,KAAA,OACIwR,IAAKD,EACLE,IAAG,SAAA9Q,OAAWsB,GACdnC,UAAU,wBACVgB,MAAO,CACH4Q,UAAW,QACXC,UAAW,UACX/C,UAAW,mCARH3M,OAgBhCjC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAAC7B,UAAU,8BAA6BC,SACvCkL,OAAOgD,QAAQX,GACXsE,OAAO/N,IAAA,IAAE8E,EAAK1I,GAAM4D,EAAA,OAAM2K,EAAaqD,SAASlJ,IAAQ1I,IACxDM,IAAIuR,IAAA,IAAEnJ,EAAK1I,GAAM6R,EAAA,OACd9R,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAACmQ,GAAI,EAAajS,UAAU,OAAMC,UAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAiBC,SAAEyN,EAAU7E,MAC/C3I,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUgB,MAAO,CAAEkR,UAAW,cAAejS,SACvD6N,EAAY3N,EAAO0I,SAJfA,kB","sources":["helpers/Pagination.js","helpers/PageTitle.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","pages/bmg/soldProducts/SoldProducts.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel =\n/*#__PURE__*/\n// eslint-disable-next-line react/display-name\nReact.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getSoldProductDataActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst SoldProducts = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const SoldAuctionData = store?.soldProductDataReducer?.leadData?.data;\r\n    const SoldAuctionLoading = store?.soldProductDataReducer?.loading;\r\n    const TotalRecords = store?.soldProductDataReducer?.leadData?.pagination?.totalRecords || 0;\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSoldProductDataActions({ search: search, limit: pageSize, page: pageIndex, soldStatus: true }));\r\n    }, [dispatch, pageIndex, pageSize, search]);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Function to format keys into human-readable format\r\n    const formatKey = (key) => {\r\n        switch (key) {\r\n            case 'categoryId':\r\n                return 'Category Name';\r\n            case 'subCategoryId':\r\n                return 'Subcategory Name';\r\n            // Add more custom labels if needed\r\n            default:\r\n                // Convert camelCase or snake_case to readable words\r\n                return key\r\n                    .replace(/([A-Z])/g, ' $1')\r\n                    .replace(/[_-]/g, ' ')\r\n                    .replace(/\\b\\w/g, (c) => c.toUpperCase());\r\n        }\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates\r\n    // Function to check if a string is a valid date\r\n    const isDateString = (value) => {\r\n        if (typeof value !== 'string') return false;\r\n\r\n        // Regex to match ISO date strings (e.g., \"2025-03-28T00:00:00.000Z\")\r\n        const isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/;\r\n        return isoDateRegex.test(value);\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates)\r\n    // Function to format values (including nested objects and dates)\r\n    const formatValue = (value, key) => {\r\n        // Handle categoryId and subCategoryId specifically\r\n        if (key === 'categoryId' || key === 'subCategoryId') {\r\n            return value?.name || value?.subCategoryName || 'N/A'; // Display the name or \"N/A\" if not available\r\n        }\r\n\r\n        if (typeof value === 'object' && value !== null) {\r\n            return (\r\n                <div style={{ paddingLeft: '20px', borderLeft: '2px solid #ddd' }}>\r\n                    {Object.entries(value).map(([subKey, subValue]) => (\r\n                        <div key={subKey}>\r\n                            <strong>{formatKey(subKey)}:</strong> {formatValue(subValue, subKey)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Check if the value is a valid date string\r\n        if (isDateString(value)) {\r\n            const dateOnly = new Date(value).toISOString().split('T')[0];\r\n            return dateOnly;\r\n        }\r\n\r\n        return value;\r\n    };\r\n    const excludedKeys = [\r\n        '_id',\r\n        'createdAt',\r\n        'updatedAt',\r\n        'image',\r\n        'status',\r\n        'userId',\r\n        'publish',\r\n        'negotiable',\r\n        'productGenerateId',\r\n        'endBidDateTime',\r\n        'startBidDateTime',\r\n        'buyerId',\r\n    ];\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString('en-US', {\r\n            weekday: 'short', // \"Thu\"\r\n            month: 'short', // \"Feb\"\r\n            day: '2-digit', // \"27\"\r\n            year: 'numeric', // \"2025\"\r\n            hour: '2-digit', // \"12\"\r\n            minute: '2-digit', // \"00\"\r\n            hour12: true, // \"AM/PM\"\r\n        });\r\n    };\r\n    const isValidISODate = (value) => {\r\n        if (typeof value !== 'string') return false; // Ensure it's a string before calling includes()\r\n\r\n        const date = new Date(value);\r\n        return !isNaN(date.getTime()) && value.includes('T');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    {\r\n                        label: 'Sold Items',\r\n                        path: '/bmg/sold-items',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={`Sold Items`}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{\r\n                            boxShadow:\r\n                                'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                        }}>\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Products: {TotalRecords}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    {/* <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline fs-3\"\r\n                                            onClick={() => setSearch(\"\")}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></i>\r\n                                    )} */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {SoldAuctionLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {SoldAuctionData && SoldAuctionData?.length > 0 ? (\r\n                                        <>\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-hover bg-white\">\r\n                                                    <thead className=\"text-start\">\r\n                                                        <tr className=\"text-nowrap\">\r\n                                                            <th scope=\"col\">\r\n                                                                <i className=\"mdi mdi-merge\"></i>\r\n                                                            </th>\r\n                                                            <th scope=\"col\">Product Id</th>\r\n                                                            <th scope=\"col\">Product Name</th>\r\n                                                            <th scope=\"col\">Brand</th>\r\n                                                            <th scope=\"col\">Ask Price</th>\r\n                                                            <th scope=\"col\">User Name</th>\r\n                                                            <th scope=\"col\">User Email</th>\r\n                                                            {/* <th scope=\"col\">User Verified</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody className=\"text-start\">\r\n                                                        {SoldAuctionData?.map((data, index) => (\r\n                                                            <tr key={index} className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{(pageIndex - 1) * pageSize + index + 1}</th>\r\n                                                                <td className=\"text-uppercase fw-bold\">\r\n                                                                    {data?.paymentId ? (\r\n                                                                        <span>#{data?.paymentId} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td\r\n                                                                    className=\"text-uppercase fw-bold\"\r\n                                                                    style={{\r\n                                                                        cursor: 'pointer',\r\n                                                                        // color: 'crimson',\r\n                                                                        // transition: 'color 0.3s ease-in-out',\r\n                                                                    }}\r\n                                                                // onMouseOver={(e) =>\r\n                                                                //     (e.target.style.color = 'rgb(10 207 151)')\r\n                                                                // }\r\n                                                                // onMouseOut={(e) =>\r\n                                                                //     (e.target.style.color = 'crimson')\r\n                                                                // }\r\n                                                                >\r\n                                                                    <OverlayTrigger\r\n                                                                        placement=\"left\"\r\n                                                                        overlay={\r\n                                                                            <Tooltip id=\"overlay-example\">\r\n                                                                                View Detail's\r\n                                                                            </Tooltip>\r\n                                                                        }>\r\n                                                                        <b>\r\n                                                                            {data?.productName ? (\r\n                                                                                <span\r\n                                                                                    onClick={() => {\r\n                                                                                        navigate(\r\n                                                                                            `/bmg/items/${data?.productId?._id}`,\r\n                                                                                            {\r\n                                                                                                state: {\r\n                                                                                                    product:\r\n                                                                                                        data?.product,\r\n                                                                                                },\r\n                                                                                            }\r\n                                                                                        );\r\n                                                                                    }}>\r\n                                                                                    {data?.productName?.slice(0, 30) +\r\n                                                                                        '...'}{' '}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </b>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                <td className=\"text-uppercase fw-bold\">\r\n                                                                    {data?.productId?.Brand ? (\r\n                                                                        <span>{data?.productId?.Brand} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className=\"text-uppercase fw-bold\">\r\n                                                                    {data?.productId?.Ask_Price ? (\r\n                                                                        <span>$ {data?.productId?.Ask_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td className=\"fw-bold\">\r\n                                                                    {data?.userId ? (\r\n                                                                        <span className=\"fw-semibold\">\r\n                                                                            {`${data?.userId?.name || ''} ${data?.userId?.lastName || ''\r\n                                                                                }`.trim() || 'N/A'}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"\">N/A</span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className=\"fw-bold \">\r\n                                                                    {data?.userId?.email ? (\r\n                                                                        <span>{data?.userId?.email} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">No Products found.</code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            {TotalRecords > 20 && (\r\n                                <Pagination\r\n                                    pageIndex={pageIndex}\r\n                                    pageSize={pageSize}\r\n                                    totalPages={totalPages}\r\n                                    setPageIndex={setPageIndex}\r\n                                    onChangePageSize={setPageSize}\r\n                                />\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className=\"px-2 py-1 text-light\" style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i\r\n                        className=\"mdi mdi-close fs-3\"\r\n                        onClick={() => setShowModal(false)}\r\n                        style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={5000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: '400px',\r\n                                                    objectFit: 'contain',\r\n                                                    boxShadow: '0px 4px 10px rgba(0,0,0,0.2)',\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) => !excludedKeys.includes(key) && value) // Exclude unnecessary fields\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <div className=\"d-flex flex-column\">\r\n                                                <strong className=\"text-muted mb-1\">{formatKey(key)}</strong>\r\n                                                <div className=\"fw-bold\" style={{ wordBreak: 'break-word' }}>\r\n                                                    {formatValue(value, key)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SoldProducts;\r\n"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","concat","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","breadCrumbItems","item","index","active","Item","label","href","path","title","fn","deps","isFirst","useRef","current","_excluded","CarouselCaption","React","ref","bsPrefix","as","Component","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","displayName","CarouselItem","finalClassName","_excluded2","Carousel","_ref2","defaultActiveIndex","uncontrolledProps","_useUncontrolled","useUncontrolled","activeIndex","slide","fade","controls","indicators","indicatorLabels","onSelect","onSlide","onSlid","interval","keyboard","onKeyDown","pause","onMouseOver","onMouseOut","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","useState","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Object","assign","Caption","SoldProducts","_store$soldProductDat","_store$soldProductDat2","_store$soldProductDat3","_store$soldProductDat4","_store$soldProductDat5","_store$soldProductDat6","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","SoldAuctionData","soldProductDataReducer","leadData","data","SoldAuctionLoading","loading","TotalRecords","pagination","totalRecords","setPageSize","setTotalPages","ceil","navigate","useNavigate","getSoldProductDataActions","limit","soldStatus","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","replace","c","toUpperCase","formatValue","name","subCategoryName","paddingLeft","borderLeft","entries","subKey","subValue","isDateString","Date","toISOString","split","excludedKeys","PageTitle","xs","Card","boxShadow","Body","Loading","scope","_data$productName","_data$productId2","_data$productId3","_data$productId4","_data$productId5","_data$userId","_data$userId2","_data$userId3","_data$userId4","paymentId","cursor","OverlayTrigger","placement","overlay","Tooltip","id","productName","_data$productId","productId","_id","product","slice","Brand","Ask_Price","userId","lastName","trim","email","height","Pagination","Modal","show","onHide","centered","Header","backgroundColor","Title","Container","image","img","src","alt","maxHeight","objectFit","filter","includes","_ref3","md","wordBreak"],"sourceRoot":""}
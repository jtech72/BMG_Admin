{"version":3,"file":"static/js/3601.fe37ca43.chunk.js","mappings":"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","sources":["pages/bmg/Buyer/Buyer.js","helpers/Pagination.js","helpers/PageTitle.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getBuyerSellerActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nconst Buyer_Seller = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const UserData = store?.userDataReducer?.userData?.users;\r\n    const UserLoading = store?.userDataReducer?.loading;\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const location = useLocation();\r\n    const TotalRecords = store?.userDataReducer?.userData?.totalRecords;\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        setPageIndex(1);\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getBuyerSellerActions({\r\n                search: search,\r\n                limit: pageSize,\r\n                page: pageIndex,\r\n                type: 'buyer',\r\n            })\r\n        );\r\n    }, [dispatch, pageSize, search, pageIndex]);\r\n    const navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Buyer', path: '/bmg/buyers' },\r\n                    {\r\n                        label: 'Buyer',\r\n                        path: '/bmg/buyers',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={'Buyer'}\r\n            />\r\n            <Row>\r\n                <div>\r\n                    {activeTab === 0 ? (\r\n                        <Col xs={12}>\r\n                            <Card\r\n                                style={{\r\n                                    boxShadow:\r\n                                        'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                                }}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                        <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                            Total Buyers: {TotalRecords || 0}\r\n                                        </span>\r\n                                        <div className=\"d-flex\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control w-auto me-1\"\r\n                                                placeholder=\"Search...\"\r\n                                                value={search}\r\n                                                onChange={(e) => setSearch(e.target.value)}\r\n                                            />\r\n                                            {search && (\r\n                                                <i\r\n                                                    className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                                    onClick={() => setSearch('')}\r\n                                                    style={{ cursor: 'pointer' }}></i>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {UserLoading ? (\r\n                                        <>\r\n                                            <Loading />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            {UserData && UserData.length > 0 ? (\r\n                                                <>\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <table className=\"table bg-white table-hover\">\r\n                                                            <thead>\r\n                                                                <tr className=\"text-start\">\r\n                                                                    <th scope=\"col\">\r\n                                                                        <i className=\"mdi mdi-merge\"></i>\r\n                                                                    </th>\r\n                                                                    <th scope=\"col\">Name</th>\r\n                                                                    <th scope=\"col\">Email</th>\r\n                                                                    <th scope=\"col\">Contact No</th>\r\n                                                                    <th scope=\"col\">Location</th>\r\n                                                                    {/* <th scope=\"col\">Verified</th> */}\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {UserData?.map((data, index) => (\r\n                                                                    <tr\r\n                                                                        onClick={() =>\r\n                                                                            navigate(`order-history/${data?._id}`)\r\n                                                                        }\r\n                                                                        key={index}\r\n                                                                        className=\"text-dark fw-bold text-nowrap text-start\"\r\n                                                                        style={{ cursor: 'pointer' }} // optional: adds pointer cursor for UX clarity\r\n                                                                    >\r\n                                                                        <th scope=\"row\">\r\n                                                                            {(pageIndex - 1) * pageSize + index + 1}\r\n                                                                        </th>\r\n                                                                        <td className=\"fw-bold\">\r\n                                                                            {data?.name || data?.lastName ? (\r\n                                                                                <span>\r\n                                                                                    {`${data?.name\r\n                                                                                        ?.charAt(0)\r\n                                                                                        .toUpperCase() || ''\r\n                                                                                        }${data?.name?.slice(1) || ''} ${data?.lastName\r\n                                                                                            ?.charAt(0)\r\n                                                                                            .toUpperCase() || ''\r\n                                                                                        }${data?.lastName?.slice(1) || ''\r\n                                                                                        }`.trim()}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"\">N/A</span>\r\n                                                                            )}\r\n                                                                        </td>\r\n\r\n                                                                        <td className=\"fw-bold\">\r\n                                                                            {data?.email ? (\r\n                                                                                <span>{data?.email}</span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"\">N/A</span>\r\n                                                                            )}\r\n                                                                        </td>\r\n\r\n                                                                        <td className=\"fw-bold\">\r\n                                                                            {data?.phoneNumber ? (\r\n                                                                                <span>+1{data?.phoneNumber}</span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"\">N/A</span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td\r\n                                                                            className=\"fw-bold\"\r\n                                                                            title={data?.address || 'N/A'}>\r\n                                                                            {data?.address\r\n                                                                                ? data.address.length > 20\r\n                                                                                    ? `${data.address.slice(0, 20)}...`\r\n                                                                                    : data.address\r\n                                                                                : 'N/A'}\r\n                                                                        </td>\r\n                                                                        {/* <td className=\"fw-bold\">\r\n                                                                            {data ? (\r\n                                                                                <span\r\n                                                                                    className={`badge ${\r\n                                                                                        data?.isVerified\r\n                                                                                            ? 'bg-success'\r\n                                                                                            : 'bg-danger'\r\n                                                                                    } px-2 py-1`}>\r\n                                                                                    {data?.isVerified\r\n                                                                                        ? '✅ Verified'\r\n                                                                                        : '❌ Not Verified'}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"badge bg-secondary px-2 py-1\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td> */}\r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </>\r\n                                            ) : (\r\n                                                <div\r\n                                                    className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                                    style={{ height: '30vh' }}>\r\n                                                    <code className=\"fs-4\">No Buyer's found.</code>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                    <Pagination\r\n                                        pageIndex={pageIndex}\r\n                                        pageSize={pageSize}\r\n                                        totalPages={totalPages}\r\n                                        setPageIndex={setPageIndex}\r\n                                        onChangePageSize={setPageSize}\r\n                                    />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ) : activeTab === 1 ? (\r\n                        <Col xs={12}>\r\n                            <Card\r\n                                style={{\r\n                                    boxShadow:\r\n                                        'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                                }}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                        <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                            Total Seller's: {UserData?.length || 0}\r\n                                        </span>\r\n                                        <div className=\"d-flex\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control w-auto me-1\"\r\n                                                placeholder=\"Search...\"\r\n                                                value={search}\r\n                                                onChange={(e) => setSearch(e.target.value)}\r\n                                            />\r\n                                            {search && (\r\n                                                <i\r\n                                                    className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                                    onClick={() => setSearch('')}\r\n                                                    style={{ cursor: 'pointer' }}></i>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {UserLoading ? (\r\n                                        <>\r\n                                            <Loading />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            {UserData && UserData?.length > 0 ? (\r\n                                                <>\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <table className=\"table table-hover bg-white\">\r\n                                                            <thead>\r\n                                                                <tr className=\"\" style={{ color: '#703133' }}>\r\n                                                                    <th scope=\"col\">\r\n                                                                        <i className=\"mdi mdi-merge\"></i>\r\n                                                                    </th>\r\n                                                                    <th scope=\"col\">Name</th>\r\n                                                                    <th scope=\"col\">Email</th>\r\n                                                                    <th scope=\"col\">Contact No</th>\r\n                                                                    <th scope=\"col\">Location</th>\r\n                                                                    <th scope=\"col\">Verified</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {UserData?.map((data, index) => (\r\n                                                                    <tr\r\n                                                                        key={index}\r\n                                                                        className=\"text-dark fw-bold text-nowrap\">\r\n                                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                                        <td className=\"fw-bold text-info\">\r\n                                                                            {data?.name || data?.lastName ? (\r\n                                                                                <span>\r\n                                                                                    {`${data?.name\r\n                                                                                        ?.charAt(0)\r\n                                                                                        .toUpperCase() || ''\r\n                                                                                        }${data?.name?.slice(1) || ''} \r\n                                                                                          ${data?.lastName\r\n                                                                                            ?.charAt(0)\r\n                                                                                            .toUpperCase() || ''\r\n                                                                                        }${data?.lastName?.slice(1) || ''\r\n                                                                                        }`}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n\r\n                                                                        <td className=\"fw-bold text-success\">\r\n                                                                            {data?.email ? (\r\n                                                                                <span>{data?.email} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td className=\"fw-bold\">\r\n                                                                            {data?.phoneNumber ? (\r\n                                                                                <span>{data?.phoneNumber} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td\r\n                                                                            className=\"fw-bold\"\r\n                                                                            title={data?.address || 'N/A'}>\r\n                                                                            {data?.address\r\n                                                                                ? data.address.length > 20\r\n                                                                                    ? `${data.address.slice(0, 20)}...`\r\n                                                                                    : data.address\r\n                                                                                : 'N/A'}\r\n                                                                        </td>\r\n\r\n                                                                        <td className=\"text-uppercase fw-bold\">\r\n                                                                            {data ? (\r\n                                                                                <span\r\n                                                                                    className={`badge ${data?.isVerified\r\n                                                                                        ? 'bg-success'\r\n                                                                                        : 'bg-danger'\r\n                                                                                        } px-2 py-1`}>\r\n                                                                                    {data?.isVerified\r\n                                                                                        ? '✅ Verified'\r\n                                                                                        : '❌ Not Verified'}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"badge bg-secondary px-2 py-1\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </>\r\n                                            ) : (\r\n                                                <div\r\n                                                    className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                                    style={{ height: '30vh' }}>\r\n                                                    <code className=\"fs-4\">No Seller's found.</code>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                    {TotalRecords > 20 && (\r\n                                        <Pagination\r\n                                            pageIndex={pageIndex}\r\n                                            pageSize={pageSize}\r\n                                            totalPages={totalPages}\r\n                                            setPageIndex={setPageIndex}\r\n                                            onChangePageSize={setPageSize}\r\n                                        />\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ) : null}\r\n                </div>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Buyer_Seller;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"names":["Buyer_Seller","_store$userDataReduce","_store$userDataReduce2","_store$userDataReduce3","_store$userDataReduce4","_store$userDataReduce5","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","UserData","userDataReducer","userData","users","UserLoading","loading","activeTab","setActiveTab","location","useLocation","TotalRecords","totalRecords","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","useEffect","pathname","getBuyerSellerActions","limit","page","type","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","style","boxShadow","Body","className","placeholder","value","onChange","e","target","onClick","cursor","Loading","length","scope","map","data","index","_data$name","_data$name2","_data$lastName","_data$lastName2","_id","name","lastName","charAt","toUpperCase","slice","trim","email","phoneNumber","address","height","Pagination","onChangePageSize","color","_data$name3","_data$name4","_data$lastName3","_data$lastName4","isVerified","_ref","max","newSize","Number","size","min","enteredPage","width","Link","to","Array","from","_","i","isCurrentPage","props","Breadcrumb","listProps","item","Item","href"],"sourceRoot":""}
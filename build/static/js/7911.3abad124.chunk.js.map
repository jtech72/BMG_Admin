{"version":3,"file":"static/js/7911.3abad124.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","pages/bmg/products/Products.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getProductActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Products = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const [type, setType] = useState('Auction');\r\n    const [productType, setProductType] = useState('ongoing');\r\n    const ProductsData = store?.productDataReducer?.productData?.result;\r\n    const ProductsLoading = store?.productDataReducer?.loading;\r\n    const TotalRecords = store?.productDataReducer?.productData?.totalRecords || 0;\r\n    const auctionCounts = store?.productDataReducer?.productData?.auctionCounts || {};\r\n    const saleCounts = store?.productDataReducer?.productData?.saleCounts || {};\r\n    const DraftCount = store?.productDataReducer?.productData?.totalDraftCount || 0;\r\n    const navigate = useNavigate();\r\n\r\n    const {\r\n        total: AuctionCounts,\r\n        ongoing: ongoingCounts,\r\n        upcoming: upcomingCounts,\r\n        sold: soldCounts,\r\n        unsold: unSoldCounts,\r\n    } = auctionCounts;\r\n\r\n    const { total: SaleCounts, sold: soldSaleCounts, unsold: unsoldSaleCounts } = saleCounts || {};\r\n\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n    useEffect(() => {\r\n        dispatch(\r\n            getProductActions({\r\n                search: search,\r\n                limit: pageSize,\r\n                page: pageIndex,\r\n                type: type == 'Direct Sale' ? 'Sale' : type,\r\n                productType: type !== 'Draft' ? productType : '',\r\n                publish: type !== 'Draft' ? true : false,\r\n            })\r\n        );\r\n    }, [dispatch, pageIndex, pageSize, search, type, productType]);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Function to format keys into human-readable format\r\n    const formatKey = (key) => {\r\n        switch (key) {\r\n            case 'categoryId':\r\n                return 'Category Name';\r\n            case 'subCategoryId':\r\n                return 'Subcategory Name';\r\n            // Add more custom labels if needed\r\n            default:\r\n                // Convert camelCase or snake_case to readable words\r\n                return key\r\n                    .replace(/([A-Z])/g, ' $1')\r\n                    .replace(/[_-]/g, ' ')\r\n                    .replace(/\\b\\w/g, (c) => c.toUpperCase());\r\n        }\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates\r\n    // Function to check if a string is a valid date\r\n    const isDateString = (value) => {\r\n        if (typeof value !== 'string') return false;\r\n\r\n        // Regex to match ISO date strings (e.g., \"2025-03-28T00:00:00.000Z\")\r\n        const isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/;\r\n        return isoDateRegex.test(value);\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates)\r\n    // Function to format values (including nested objects and dates)\r\n    const formatValue = (value, key) => {\r\n        // Handle categoryId and subCategoryId specifically\r\n        if (key === 'categoryId' || key === 'subCategoryId') {\r\n            return value?.name || value?.subCategoryName || 'N/A'; // Display the name or \"N/A\" if not available\r\n        }\r\n\r\n        if (typeof value === 'object' && value !== null) {\r\n            return (\r\n                <div style={{ paddingLeft: '20px', borderLeft: '2px solid #ddd' }}>\r\n                    {Object.entries(value).map(([subKey, subValue]) => (\r\n                        <div key={subKey}>\r\n                            <strong>{formatKey(subKey)}:</strong> {formatValue(subValue, subKey)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Check if the value is a valid date string\r\n        if (isDateString(value)) {\r\n            const dateOnly = new Date(value).toISOString().split('T')[0];\r\n            return dateOnly;\r\n        }\r\n\r\n        return value;\r\n    };\r\n    const excludedKeys = [\r\n        '_id',\r\n        'createdAt',\r\n        'updatedAt',\r\n        'image',\r\n        'categoryId',\r\n        'subCategoryId',\r\n        'soldStatus',\r\n        'status',\r\n        'userId',\r\n        'publish',\r\n        'negotiable',\r\n        'productGenerateId',\r\n        'endBidDateTime',\r\n        'startBidDateTime',\r\n        'buyerId',\r\n    ];\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString('en-US', {\r\n            weekday: 'short', // \"Thu\"\r\n            month: 'short', // \"Feb\"\r\n            day: '2-digit', // \"27\"\r\n            year: 'numeric', // \"2025\"\r\n            hour: '2-digit', // \"12\"\r\n            minute: '2-digit', // \"00\"\r\n            hour12: true, // \"AM/PM\"\r\n        });\r\n    };\r\n    const isValidISODate = (value) => {\r\n        if (typeof value !== 'string') return false; // Ensure it's a string before calling includes()\r\n\r\n        const date = new Date(value);\r\n        return !isNaN(date.getTime()) && value.includes('T');\r\n    };\r\n    const types = ['Auction', 'Direct Sale'];\r\n    // const types = ['Auction', 'Sale', 'Draft'];\r\n    const productTypes = ['ongoing', 'upcoming', 'sold', 'unsold'];\r\n\r\n    useEffect(() => {\r\n        if (type === 'Auction') {\r\n            setProductType('ongoing');\r\n        } else if (type === 'Direct Sale') {\r\n            setProductType('sold');\r\n        }\r\n    }, [type]);\r\n\r\n    return (\r\n        <>\r\n            {/* <PageTitle\r\n                breadCrumbItems={[\r\n                    {\r\n                        label: 'Item',\r\n                        path: '/bmg/items',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={'Item'}\r\n            /> */}\r\n            <Row className=\"mb-2 ms-1 border-bottom pb-1\">\r\n                {types?.map((item) => {\r\n                    let count = '';\r\n                    if (item === 'Auction') count = AuctionCounts ?? '';\r\n                    if (item === 'Direct Sale') count = SaleCounts ?? '';\r\n                    if (item === 'Draft') count = DraftCount ?? '';\r\n\r\n                    return (\r\n                        <Col\r\n                            sm=\"auto\"\r\n                            key={item}\r\n                            className={`text-center me-3 px-3 py-1 rounded`}\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                color: type === item ? '#fff' : '#333',\r\n                                backgroundColor: type === item ? '#008003' : '#f1f1f1',\r\n                                fontSize: '1rem',\r\n                                fontWeight: '600',\r\n                            }}\r\n                            onClick={() => setType(item)}>\r\n                            {item.charAt(0).toUpperCase() + item.slice(1)}{' '}\r\n                            {count !== '' && <span className=\"badge bg-secondary text-light ms-1\">{count}</span>}\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n\r\n            {type !== 'Draft' && (\r\n                <Row className=\"mb-3 ms-1 py-1 px-2 rounded\" style={{ backgroundColor: '#f8f9fa' }}>\r\n                    {productTypes.map((item) => {\r\n                        if (type === 'Direct Sale' && item !== 'sold' && item !== 'unsold') return null;\r\n\r\n                        let count = '';\r\n                        if (type === 'Auction') {\r\n                            if (item === 'ongoing') count = ongoingCounts ?? '';\r\n                            if (item === 'upcoming') count = upcomingCounts ?? '';\r\n                            if (item === 'sold') count = soldCounts ?? '';\r\n                            if (item === 'unsold') count = unSoldCounts ?? '';\r\n                        } else if (type === 'Direct Sale') {\r\n                            if (item === 'sold') count = soldSaleCounts ?? '';\r\n                            if (item === 'unsold') count = unsoldSaleCounts ?? '';\r\n                        }\r\n\r\n                        return (\r\n                            <Col\r\n                                sm=\"auto\"\r\n                                key={item}\r\n                                className={`text-center me-2 px-3 py-1`}\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    color: productType === item ? '#fff' : '#333',\r\n                                    backgroundColor: productType === item ? '#008003' : '#e9ecef',\r\n                                    fontSize: '0.9rem',\r\n                                    fontWeight: '500',\r\n                                    borderRadius: '20px',\r\n                                }}\r\n                                onClick={() => setProductType(item)}>\r\n                                {item.charAt(0).toUpperCase() + item.slice(1)}{' '}\r\n                                {count !== '' && <span className=\"badge bg-secondary ms-1\">{count}</span>}\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            )}\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{\r\n                            boxShadow:\r\n                                'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                        }}>\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Products: {TotalRecords}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch('')}\r\n                                            style={{ cursor: 'pointer' }}></i>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {ProductsLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {ProductsData && ProductsData.length > 0 ? (\r\n                                        <>\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-striped bg-white \">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\r\n                                                            <th scope=\"col\">\r\n                                                                <i className=\"mdi mdi-merge\"></i>\r\n                                                            </th>\r\n                                                            <th scope=\"col\">Product Id</th>\r\n                                                            <th scope=\"col\">Serial No</th>\r\n                                                            <th scope=\"col\">Product Name</th>\r\n                                                            <th scope=\"col\">Brand</th>\r\n                                                            <th scope=\"col\">Ask Price</th>\r\n                                                            {type === 'Auction' && <th scope=\"col\">Bidding Amount</th>}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {ProductsData?.map((data, index) => (\r\n                                                            <tr key={index} className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td className=\"text-uppercase fw-bold\">\r\n                                                                    {data?.productGenerateId ? (\r\n                                                                        <span>{data?.productGenerateId} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className=\"text-uppercase fw-bold text-info\">\r\n                                                                    {data?.Serial_No ? (\r\n                                                                        <span>{data?.Serial_No} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td\r\n                                                                    className=\"text-uppercase fw-bold\"\r\n                                                                    style={{\r\n                                                                        cursor: 'pointer',\r\n                                                                        color: 'crimson',\r\n                                                                        transition: 'color 0.3s ease-in-out',\r\n                                                                    }}\r\n                                                                    onMouseOver={(e) =>\r\n                                                                        (e.target.style.color = 'rgb(10 207 151)')\r\n                                                                    }\r\n                                                                    onMouseOut={(e) =>\r\n                                                                        (e.target.style.color = 'crimson')\r\n                                                                    }>\r\n                                                                    <OverlayTrigger\r\n                                                                        placement=\"left\"\r\n                                                                        overlay={\r\n                                                                            <Tooltip id=\"overlay-example\">\r\n                                                                                View Detail's\r\n                                                                            </Tooltip>\r\n                                                                        }>\r\n                                                                        <b>\r\n                                                                            {data?.Product_Name ? (\r\n                                                                                <span\r\n                                                                                    // onClick={() =>\r\n                                                                                    //     handleProductClick(data)\r\n                                                                                    // }\r\n                                                                                    onClick={() => {\r\n                                                                                        navigate(\r\n                                                                                            `/bmg/items/${data?._id}`,\r\n                                                                                            {\r\n                                                                                                state: { product: data?.product },\r\n                                                                                            }\r\n                                                                                        );\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    {data?.Product_Name?.slice(0, 30) +\r\n                                                                                        '...'}{' '}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </b>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                <td className=\"text-uppercase fw-bold text-primary\">\r\n                                                                    {data?.Brand ? (\r\n                                                                        <span>{data?.Brand} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className=\"text-uppercase fw-bold text-success\">\r\n                                                                    {data?.Ask_Price ? (\r\n                                                                        <span>$ {data?.Ask_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                {type === 'Auction' && (\r\n                                                                    <td className=\"text-uppercase fw-bold text-success\">\r\n                                                                        {data?.Start_Bid_Price ? (\r\n                                                                            <span>$ {data?.Start_Bid_Price} </span>\r\n                                                                        ) : (\r\n                                                                            <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                N/A\r\n                                                                            </span>\r\n                                                                        )}\r\n                                                                    </td>\r\n                                                                )}\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">No Product's found.</code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <Pagination\r\n                                pageIndex={pageIndex}\r\n                                pageSize={pageSize}\r\n                                totalPages={totalPages}\r\n                                setPageIndex={setPageIndex}\r\n                                onChangePageSize={setPageSize}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className=\"px-2 py-1 text-light\" style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i\r\n                        className=\"mdi mdi-close fs-3\"\r\n                        onClick={() => setShowModal(false)}\r\n                        style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={5000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: '400px',\r\n                                                    objectFit: 'contain',\r\n                                                    boxShadow: '0px 4px 10px rgba(0,0,0,0.2)',\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) => !excludedKeys.includes(key) && value) // Exclude unnecessary fields\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <div className=\"d-flex flex-column\">\r\n                                                <strong className=\"text-muted mb-1\">{formatKey(key)}</strong>\r\n                                                <div className=\"fw-bold\" style={{ wordBreak: 'break-word' }}>\r\n                                                    {formatValue(value, key)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel =\n/*#__PURE__*/\n// eslint-disable-next-line react/display-name\nReact.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","concat","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Products","_store$productDataRed","_store$productDataRed2","_store$productDataRed3","_store$productDataRed4","_store$productDataRed5","_store$productDataRed6","_store$productDataRed7","_store$productDataRed8","_store$productDataRed9","_store$productDataRed0","_store$productDataRed1","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","setType","productType","setProductType","ProductsData","productDataReducer","productData","result","ProductsLoading","loading","TotalRecords","totalRecords","auctionCounts","saleCounts","DraftCount","totalDraftCount","navigate","useNavigate","total","AuctionCounts","ongoing","ongoingCounts","upcoming","upcomingCounts","sold","soldCounts","unsold","unSoldCounts","SaleCounts","soldSaleCounts","unsoldSaleCounts","setPageSize","setTotalPages","ceil","getProductActions","limit","publish","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","key","replace","c","toUpperCase","formatValue","name","subCategoryName","paddingLeft","borderLeft","Object","entries","subKey","subValue","test","isDateString","Date","toISOString","split","excludedKeys","types","_Fragment","count","sm","cursor","backgroundColor","fontSize","fontWeight","charAt","slice","borderRadius","xs","Card","boxShadow","Body","Loading","scope","data","_data$Product_Name","productGenerateId","Serial_No","transition","onMouseOver","onMouseOut","OverlayTrigger","placement","overlay","Tooltip","id","Product_Name","_id","product","Brand","Ask_Price","Start_Bid_Price","height","Pagination","Modal","show","onHide","centered","Header","Title","Container","image","Carousel","interval","img","src","alt","maxHeight","objectFit","filter","_ref2","includes","_ref3","md","wordBreak","fn","deps","isFirst","useRef","current","_excluded","CarouselCaption","React","ref","bsPrefix","as","Component","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","displayName","CarouselItem","finalClassName","_excluded2","defaultActiveIndex","uncontrolledProps","_useUncontrolled","useUncontrolled","activeIndex","slide","fade","controls","indicators","indicatorLabels","onSelect","onSlide","onSlid","keyboard","onKeyDown","pause","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","tagName","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","Anchor","assign","Caption"],"sourceRoot":""}
{"version":3,"file":"static/js/1673.9e1db7a3.chunk.js","mappings":"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","sources":["pages/bmg/dashboard/Dashboard.js","helpers/Pagination.js","helpers/PageTitle.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Row, Col, Card, Table } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PageTitle from '../../../helpers/PageTitle';\nimport { getDashboardActions, getRecentRegistrationsForDashboardActions } from '../../../redux/actions';\nimport { FaUsers, FaLayerGroup, FaTags, FaUserShield, FaGavel, FaMoneyBillWave } from 'react-icons/fa';\nimport { Loading } from '../../../helpers/loader/Loading';\nimport { AiOutlineLineChart } from 'react-icons/ai';\nimport Pagination from '../../../helpers/Pagination';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n    const store = useSelector((state) => state);\n    const dashboardData = store?.dashboardDataReducer?.dashboardData;\n    const getRecentRegistrationsForDashboard = store?.getRecentRegistrationsForDashboardReducer;\n\n    const dashboardLoading = store?.dashboardDataReducer?.loading;\n    const dispatch = useDispatch();\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState(5);\n    useEffect(() => {\n        dispatch(getDashboardActions());\n        dispatch(\n            getRecentRegistrationsForDashboardActions({\n                page,\n                limit,\n            })\n        );\n    }, [dispatch, page]);\n\n    const dashboardItems = [\n        { title: 'Total Users', value: dashboardData?.totalUser, icon: <FaUsers />, color: '' },\n        { title: 'Total Categories', value: dashboardData?.totalCategory, icon: <FaLayerGroup />, color: '' },\n        { title: 'Total Sub-Categories', value: dashboardData?.totalSubCategory, icon: <FaTags />, color: '' },\n        { title: 'Total Admins', value: dashboardData?.totalAdmin, icon: <FaUserShield />, color: '' },\n        { title: 'Auction', value: dashboardData?.totalLiveAuction, icon: <FaGavel />, color: '' },\n        { title: 'Sales', value: dashboardData?.totalUpComingAuction, icon: <AiOutlineLineChart />, color: '' },\n    ];\n    const navigate = useNavigate();\n    console.log(getRecentRegistrationsForDashboard?.dashboardData, 'getRecentRegistrationsForDashboard?.dashboardData');\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'BMG Dashboard', path: '/bmg/dashboard' },\n                    { label: 'Dashboard', path: '/bmg/dashboard', active: true },\n                ]}\n                title={'Dashboard'}\n            />\n            {dashboardLoading ? (\n                <Loading />\n            ) : (\n                <Row className=\"g-4\">\n                    {dashboardItems?.map((item, index) => (\n                        <Col key={index} md={6} lg={4}>\n                            <Card className={`shadow border-0 bg-${item.color} text-dark`}>\n                                <Card.Body className=\"d-flex align-items-center justify-content-between\">\n                                    <div>\n                                        <h6 className=\"fw-semibold\">{item.title}</h6>\n                                        <h2 className=\"fw-bold\">{item.value}</h2>\n                                    </div>\n                                    <div className=\"fs-1\">{item.icon}</div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    ))}\n                    <div className=\"table-responsive\">\n                        <Table bordered hover className=\"bg-white text-center\">\n                            <thead className=\"\">\n                                <tr className=\"text-nowrap text-secondary\">\n                                    <th>\n                                        <i className=\"mdi mdi-merge\"></i>\n                                    </th>\n                                    <th>Name</th>\n                                    <th>Email</th>\n                                    <th>Phone Number</th>\n                                    <th>Role</th>\n                                    {/* <th>Action</th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {getRecentRegistrationsForDashboard?.dashboardData?.allUsers?.map((data, index) => (\n                                    <tr\n                                        style={{\n                                            cursor: 'pointer',\n                                        }}\n                                        key={data._id || index}\n                                        // onClick={() => navigate(`/bmg/users/${data?._id}`)}\n                                        className=\"fw-bold\">\n                                        <td>{(page - 1) * limit + index + 1}</td>\n\n                                        <td>{data?.name ? `${data?.name} ${data?.lastName || ''}` : 'N/A'}</td>\n                                        <td>{data?.email ? `${data?.email}` : 'N/A'}</td>\n                                        <td>{data?.phoneNumber ? `${data?.phoneNumber}` : 'N/A'}</td>\n                                        <td>\n                                            <span className={`text-capitalize px-2 py-1`}>{data?.role}</span>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                        <Pagination\n                            pageIndex={page}\n                            pageSize={limit}\n                            totalPages={getRecentRegistrationsForDashboard?.dashboardData?.totalPages}\n                            setPageIndex={setPage}\n                            onChangePageSize={setLimit}\n                        />\n                    </div>\n                </Row>\n            )}\n        </>\n    );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\n\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\n    useEffect(() => {\n        // Ensure pageIndex stays within bounds when totalPages changes\n        if (pageIndex > totalPages) {\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\n        }\n    }, [pageIndex, totalPages, setPageIndex]);\n\n    return (\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\n            {/* Page Size Selection */}\n            <div className=\"d-inline-block me-3\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={pageSize}\n                    onChange={(e) => {\n                        const newSize = Number(e.target.value);\n                        onChangePageSize(newSize);\n                        setPageIndex(1); // Reset to first page\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {[10, 20, 50, 100].map((size) => (\n                        <option key={size} value={size}>\n                            {size}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Page Info */}\n            <span className=\"me-3\">\n                Page{' '}\n                <strong>\n                    {pageIndex} of {totalPages}\n                </strong>\n            </span>\n\n            {/* Go to Page Input */}\n            <label>Go to page: </label>\n            <input\n                type=\"number\"\n                placeholder={`${pageIndex}`}\n                min=\"1\"\n                max={totalPages}\n                onChange={(e) => {\n                    const enteredPage = Number(e.target.value);\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\n                        setPageIndex(enteredPage);\n                    }\n                }}\n                className=\"form-control ms-1 d-inline-block\"\n                style={{ width: '80px' }}\n            />\n\n            {/* Pagination Controls */}\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\n                {/* Previous Button */}\n                {pageIndex > 1 && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Previous\n                        </Link>\n                    </li>\n                )}\n\n                {/* Page Number Buttons */}\n                {Array.from({ length: totalPages }).map((_, i) => {\n                    const page = i + 1; // Adjust index to start from 1\n                    const isCurrentPage = page === pageIndex;\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\n                    const isEdgePage = page === 1 || page === totalPages;\n\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\n                        return (\n                            <li\n                                key={page}\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\n                                onClick={() => setPageIndex(page)}>\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        );\n                    } else if (\n                        (page === 2 && pageIndex >= 5) ||\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\n                    ) {\n                        return (\n                            <li key={page} className=\"page-item disabled\">\n                                <Link to=\"#\" className=\"page-link px-0\">\n                                    ...\n                                </Link>\n                            </li>\n                        );\n                    }\n\n                    return null;\n                })}\n\n                {/* Next Button */}\n                {pageIndex < totalPages && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Next\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path} >\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"names":["Dashboard","_store$dashboardDataR","_store$dashboardDataR2","_getRecentRegistratio","_getRecentRegistratio2","_getRecentRegistratio3","store","useSelector","state","dashboardData","dashboardDataReducer","getRecentRegistrationsForDashboard","getRecentRegistrationsForDashboardReducer","dashboardLoading","loading","dispatch","useDispatch","page","setPage","useState","limit","setLimit","useEffect","getDashboardActions","getRecentRegistrationsForDashboardActions","dashboardItems","title","value","totalUser","icon","_jsx","FaUsers","color","totalCategory","FaLayerGroup","totalSubCategory","FaTags","totalAdmin","FaUserShield","totalLiveAuction","FaGavel","totalUpComingAuction","AiOutlineLineChart","useNavigate","console","log","_jsxs","_Fragment","children","PageTitle","breadCrumbItems","label","path","active","Loading","Row","className","map","item","index","Col","md","lg","Card","Body","Table","bordered","hover","allUsers","data","style","cursor","name","lastName","email","phoneNumber","role","_id","Pagination","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","_ref","Math","max","onChange","e","newSize","Number","target","size","type","placeholder","min","enteredPage","width","onClick","Link","to","Array","from","length","_","i","isCurrentPage","props","Breadcrumb","listProps","Item","href"],"sourceRoot":""}
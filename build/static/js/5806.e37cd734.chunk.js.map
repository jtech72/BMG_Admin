{"version":3,"file":"static/js/5806.e37cd734.chunk.js","mappings":"iSAkBA,MAAMA,EAAaA,KACf,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KAEd,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,OAAMC,UACjBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACF,UAAU,cAAaC,UACxBE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,aAAYC,SAAA,CACpBL,EAAE,yBAA0B,KAC7BE,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,iBAAkBL,UAAU,kBAAiBC,UACnDH,EAAAA,EAAAA,KAAA,KAAAG,SAAIL,EAAE,oBAIhB,EA8Fd,EA1FiBU,KACb,MAAM,EAAEV,IAAMC,EAAAA,EAAAA,KACRU,GAAWC,EAAAA,EAAAA,OAEX,QAAEC,EAAO,WAAEC,EAAU,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,IAAK,CACrDJ,QAASI,EAAMC,KAAKL,QACpBE,MAAOE,EAAMC,KAAKH,MAClBD,WAAYG,EAAMC,KAAKJ,gBAG3BK,EAAAA,EAAAA,YAAU,KACNR,GAASS,EAAAA,EAAAA,KAAY,GACtB,CAACT,IAKJ,MAAMU,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,SAAUF,EAAAA,KAAaG,SAAS1B,EAAE,0BAClC2B,MAAOJ,EAAAA,KAAaG,SAAS,sBAAsBC,MAAM,4BACzDC,SAAUL,EAAAA,KAAaG,SAAS1B,EAAE,6BAW1C,OACIO,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAxB,SAAA,CACKS,GAAaZ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAQ,CAACrB,GAAI,qBAAyB,MAErDF,EAAAA,EAAAA,MAACwB,EAAAA,EAAa,CAACC,aAAa9B,EAAAA,EAAAA,KAACH,EAAU,IAAIM,SAAA,EACvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0BAAyBC,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wCAAuCC,SAAEL,EAAE,mBACzDE,EAAAA,EAAAA,KAAA,KAAGE,UAAU,kBAAiBC,SACzBL,EAAE,iFAIVe,IACGb,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CAACC,QAAQ,SAAS9B,UAAU,OAAMC,SACnCU,KAITR,EAAAA,EAAAA,MAAC4B,EAAAA,EAAY,CAACC,SAtBRC,IACd1B,GAAS2B,EAAAA,EAAAA,IAAWD,EAAmB,SAAGA,EAAgB,MAAGA,EAAmB,UAAG,EAqBzCE,SAAUlB,EAAgBmB,cAAe,CAAC,EAAEnC,SAAA,EAC1EH,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,aACT2C,KAAK,OACLC,KAAK,WACLC,YAAa7C,EAAE,mBACf8C,eAAgB,UAEpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,iBACT2C,KAAK,QACLC,KAAK,QACLC,YAAa7C,EAAE,oBACf8C,eAAgB,UAEpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,YACT2C,KAAK,WACLC,KAAK,WACLC,YAAa7C,EAAE,uBACf8C,eAAgB,UAEpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,iCACT2C,KAAK,WACLC,KAAK,iBACLE,eAAgB,qBAGpB5C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBC,UAClCH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACb,QAAQ,UAAUS,KAAK,SAASK,SAAUnC,EAAQR,SACrDL,EAAE,uBAKpB,C","sources":["pages/account/Register.js"],"sourcesContent":["// @flow\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate, Link } from 'react-router-dom';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n//actions\nimport { resetAuth, signupUser } from '../../redux/actions';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/';\n\nimport AccountLayout from './AccountLayout';\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Row className=\"mt-3\">\n            <Col className=\"text-center\">\n                <p className=\"text-muted\">\n                    {t('Already have account?')}{' '}\n                    <Link to={'/account/login'} className=\"text-muted ms-1\">\n                        <b>{t('Log In')}</b>\n                    </Link>\n                </p>\n            </Col>\n        </Row>\n    );\n};\n\nconst Register = (): React$Element<React$FragmentType> => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const { loading, userSignUp, error } = useSelector((state) => ({\n        loading: state.Auth.loading,\n        error: state.Auth.error,\n        userSignUp: state.Auth.userSignUp,\n    }));\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            fullname: yup.string().required(t('Please enter Fullname')),\n            email: yup.string().required('Please enter Email').email('Please enter valid Email'),\n            password: yup.string().required(t('Please enter Password')),\n        })\n    );\n\n    /*\n     * handle form submission\n     */\n    const onSubmit = (formData) => {\n        dispatch(signupUser(formData['fullname'], formData['email'], formData['password']));\n    };\n\n    return (\n        <>\n            {userSignUp ? <Navigate to={'/account/confirm'} /> : null}\n\n            <AccountLayout bottomLinks={<BottomLink />}>\n                <div className=\"text-center w-75 m-auto\">\n                    <h4 className=\"text-dark-50 text-center mt-0 fw-bold\">{t('Free Sign Up')}</h4>\n                    <p className=\"text-muted mb-4\">\n                        {t(\"Don't have an account? Create your account, it takes less than a minute.\")}\n                    </p>\n                </div>\n\n                {error && (\n                    <Alert variant=\"danger\" className=\"my-2\">\n                        {error}\n                    </Alert>\n                )}\n\n                <VerticalForm onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n                    <FormInput\n                        label={t('Full Name')}\n                        type=\"text\"\n                        name=\"fullname\"\n                        placeholder={t('Enter your name')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('Email address')}\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder={t('Enter your email')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('Password')}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder={t('Enter your password')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('I accept Terms and Conditions')}\n                        type=\"checkbox\"\n                        name=\"checkboxsignup\"\n                        containerClass={'mb-3 text-muted'}\n                    />\n\n                    <div className=\"mb-3 mb-0 text-center\">\n                        <Button variant=\"success\" type=\"submit\" disabled={loading}>\n                            {t('Sign Up')}\n                        </Button>\n                    </div>\n                </VerticalForm>\n            </AccountLayout>\n        </>\n    );\n};\n\nexport default Register;\n"],"names":["BottomLink","t","useTranslation","_jsx","Row","className","children","Col","_jsxs","Link","to","Register","dispatch","useDispatch","loading","userSignUp","error","useSelector","state","Auth","useEffect","resetAuth","schemaResolver","yupResolver","yup","shape","fullname","required","email","password","_Fragment","Navigate","AccountLayout","bottomLinks","Alert","variant","VerticalForm","onSubmit","formData","signupUser","resolver","defaultValues","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}
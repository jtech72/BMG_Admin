{"version":3,"file":"static/js/2689.02ddf074.chunk.js","mappings":"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","sources":["pages/bmg/auctionLead/AuctionLead.js","helpers/Pagination.js","helpers/PageTitle.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getLeadActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuctionLead = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const LeadsData = store?.leadDataReducer?.leadData?.data;\r\n    const navigate = useNavigate();\r\n    const LeadsLoading = store?.leadDataReducer?.loading;\r\n    const TotalRecords = store?.leadDataReducer?.leadData?.totalRecords;\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            dispatch(getLeadActions({ search, limit: pageSize, page: pageIndex }));\r\n        }, 500); // 500ms debounce\r\n\r\n        return () => clearTimeout(handler); // Cleanup on unmount or dependency change\r\n    }, [search, pageIndex, pageSize, dispatch]);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Format keys: Remove underscores, convert camelCase to words\r\n    const formatKey = (key) => {\r\n        return key\r\n            .replace(/_/g, ' ') // Replace underscores\r\n            .replace(/([a-z])([A-Z])/g, '$1 $2') // Convert camelCase\r\n            .replace(/\\b\\w/g, (char) => char.toUpperCase()); // Capitalize first letter\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString('en-US', {\r\n            weekday: 'short', // \"Thu\"\r\n            month: 'short', // \"Feb\"\r\n            day: '2-digit', // \"27\"\r\n            year: 'numeric', // \"2025\"\r\n            hour: '2-digit', // \"12\"\r\n            minute: '2-digit', // \"00\"\r\n            hour12: true, // \"AM/PM\"\r\n        });\r\n    };\r\n    const isValidISODate = (value) => {\r\n        if (typeof value !== 'string') return false; // Ensure it's a string before calling includes()\r\n\r\n        const date = new Date(value);\r\n        return !isNaN(date.getTime()) && value.includes('T');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    {\r\n                        label: `Auction Lead's`,\r\n                        path: '/bmg/leads',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={`Auction Leads under 50,000`}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{\r\n                            boxShadow:\r\n                                'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                        }}>\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Lead's: {TotalRecords || 0}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch('')}\r\n                                            style={{ cursor: 'pointer' }}></i>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {LeadsLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {LeadsData && LeadsData?.length > 0 ? (\r\n                                        <>\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-hover bg-white\">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap text-dark\">\r\n                                                            <th scope=\"col\">\r\n                                                                <i className=\"mdi mdi-merge\"></i>\r\n                                                            </th>\r\n                                                            <th scope=\"col\" className=\"text-start\">\r\n                                                                Product Id\r\n                                                            </th>\r\n                                                            <th scope=\"col\" className=\"text-start\">\r\n                                                                Product Name\r\n                                                            </th>\r\n                                                            <th scope=\"col\" className=\"text-start\">\r\n                                                                Brand\r\n                                                            </th>\r\n                                                            <th scope=\"col\" className=\"text-start\">\r\n                                                                Ask Price\r\n                                                            </th>\r\n                                                            <th scope=\"col\" className=\"text-start\">\r\n                                                                User Name\r\n                                                            </th>\r\n                                                            <th scope=\"col\" className=\"text-start\">\r\n                                                                User Email\r\n                                                            </th>\r\n                                                            {/* <th scope=\"col\">User Verified</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {LeadsData?.map((data, index) => (\r\n                                                            <tr\r\n                                                                style={{ cursor: 'pointer' }}\r\n                                                                // onClick={() => handleProductClick(data?.productId)}\r\n                                                                onClick={() =>\r\n                                                                    navigate(\r\n                                                                        `/bmg/items/${data?.productId?._id}`,\r\n                                                                        {\r\n                                                                            state: { product: data?.product },\r\n                                                                        }\r\n                                                                    )\r\n                                                                }\r\n                                                                key={index}\r\n                                                                className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{(pageIndex - 1) * pageSize + index + 1}</th>\r\n                                                                <td className=\"text-uppercase fw-bold text-start\">\r\n                                                                    {data?.productId?.productGenerateId ? (\r\n                                                                        <span>\r\n                                                                            #{data?.productId?.productGenerateId}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td className=\"text-uppercase fw-bold text-start\">\r\n                                                                    <b title={data?.productId?.Product_Name || 'N/A'}>\r\n                                                                        {data?.productId?.Product_Name ? (\r\n                                                                            <span>\r\n                                                                                {data?.productId?.Product_Name.length >\r\n                                                                                    20\r\n                                                                                    ? data?.productId?.Product_Name.substring(\r\n                                                                                        0,\r\n                                                                                        20\r\n                                                                                    ) + '...'\r\n                                                                                    : data?.productId?.Product_Name}\r\n                                                                            </span>\r\n                                                                        ) : (\r\n                                                                            <span className=\"d-flex justify-content-center\">\r\n                                                                                N/A\r\n                                                                            </span>\r\n                                                                        )}\r\n                                                                    </b>\r\n                                                                </td>\r\n\r\n                                                                <td className=\"text-uppercase fw-bold text-start\">\r\n                                                                    <span title={data?.productId?.Brand || 'N/A'}>\r\n                                                                        {data?.productId?.Brand ? (\r\n                                                                            <span>\r\n                                                                                {data?.productId?.Brand.length > 20\r\n                                                                                    ? data?.productId?.Brand.substring(\r\n                                                                                        0,\r\n                                                                                        20\r\n                                                                                    ) + '...'\r\n                                                                                    : data?.productId?.Brand}\r\n                                                                            </span>\r\n                                                                        ) : (\r\n                                                                            <span className=\"d-flex justify-content-center\">\r\n                                                                                N/A\r\n                                                                            </span>\r\n                                                                        )}\r\n                                                                    </span>\r\n                                                                </td>\r\n\r\n                                                                <td className=\"text-uppercase fw-bold text-start\">\r\n                                                                    {data?.productId?.Ask_Price ? (\r\n                                                                        <span>$ {data?.productId?.Ask_Price}</span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td className=\"fw-bold text-start\">\r\n                                                                    {data?.userId ? (\r\n                                                                        <span className=\"fw-semibold\">\r\n                                                                            {`${data?.userId?.name || ''} ${data?.userId?.lastName || ''\r\n                                                                                }`.trim() || 'N/A'}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span>N/A</span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td className=\"fw-bold text-start\">\r\n                                                                    {data?.userId?.email ? (\r\n                                                                        <span>{data?.userId?.email}</span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">No Lead's found.</code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            {TotalRecords > 20 && (\r\n                                <Pagination\r\n                                    pageIndex={pageIndex}\r\n                                    pageSize={pageSize}\r\n                                    totalPages={totalPages}\r\n                                    setPageIndex={setPageIndex}\r\n                                    onChangePageSize={setPageSize}\r\n                                />\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className=\"px-2 py-1 text-light\" style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i\r\n                        className=\"mdi mdi-close fs-3\"\r\n                        onClick={() => setShowModal(false)}\r\n                        style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={5000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: '400px',\r\n                                                    objectFit: 'contain',\r\n                                                    boxShadow: '0px 4px 10px rgba(0,0,0,0.2)',\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(\r\n                                        ([key, value]) =>\r\n                                            !['_id', 'createdAt', 'updatedAt', 'image', 'status'].includes(key) && // Remove unnecessary fields\r\n                                            !(typeof value === 'string' && /^[0-9a-fA-F]{24}$/.test(value)) && // Remove any 24-char hex ID\r\n                                            value // Ensure it's not empty\r\n                                    )\r\n                                    .map(([key, value]) => {\r\n                                        let displayValue;\r\n\r\n                                        if (Array.isArray(value)) {\r\n                                            displayValue = (\r\n                                                <ul className=\"mb-0\">\r\n                                                    {value\r\n                                                        .filter(\r\n                                                            (item) =>\r\n                                                                !(\r\n                                                                    typeof item === 'string' &&\r\n                                                                    /^[0-9a-fA-F]{24}$/.test(item)\r\n                                                                )\r\n                                                        ) // Remove ID-like values inside arrays\r\n                                                        .map((item, index) => (\r\n                                                            <li key={index}>\r\n                                                                {typeof item === 'object'\r\n                                                                    ? JSON.stringify(item, null, 2)\r\n                                                                    : item}\r\n                                                            </li>\r\n                                                        ))}\r\n                                                </ul>\r\n                                            );\r\n                                        } else if (typeof value === 'object' && value !== null) {\r\n                                            displayValue = (\r\n                                                <ul className=\"mb-0\">\r\n                                                    {Object.entries(value)\r\n                                                        .filter(\r\n                                                            ([subKey, subValue]) =>\r\n                                                                ![\r\n                                                                    '_id',\r\n                                                                    'createdAt',\r\n                                                                    'updatedAt',\r\n                                                                    'status',\r\n                                                                    'image',\r\n                                                                ].includes(subKey) &&\r\n                                                                !(\r\n                                                                    typeof subValue === 'string' &&\r\n                                                                    /^[0-9a-fA-F]{24}$/.test(subValue)\r\n                                                                )\r\n                                                        )\r\n                                                        .map(([subKey, subValue]) => (\r\n                                                            <li key={subKey}>\r\n                                                                <strong>{formatKey(subKey)}:</strong>{' '}\r\n                                                                {isValidISODate(subValue)\r\n                                                                    ? formatDate(subValue)\r\n                                                                    : subValue}\r\n                                                            </li>\r\n                                                        ))}\r\n                                                </ul>\r\n                                            );\r\n                                        } else if (typeof value === 'string' && isValidISODate(value)) {\r\n                                            displayValue = formatDate(value);\r\n                                        } else {\r\n                                            displayValue = value;\r\n                                        }\r\n\r\n                                        return (\r\n                                            <Col md={6} key={key} className=\"mb-3\">\r\n                                                <strong className=\"text-muted\">{formatKey(key)}</strong>\r\n                                                <div className=\"fw-bold\">{displayValue}</div>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                            </Row>\r\n                            {/* Product Details */}\r\n                            {/* <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) =>\r\n                                        ![\"_id\", \"createdAt\", \"updatedAt\", \"image\"].includes(key) &&\r\n                                        !/^[0-9a-fA-F]{24}$/.test(value) && value // Remove ID fields & empty values\r\n                                    )\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <strong className=\"text-muted\">{formatKey(key)}</strong>\r\n                                            <div className=\"fw-bold\">{typeof value === \"object\" ? JSON.stringify(value) : value}</div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row> */}\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuctionLead;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["AuctionLead","_store$leadDataReduce","_store$leadDataReduce2","_store$leadDataReduce3","_store$leadDataReduce4","_store$leadDataReduce5","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","LeadsData","leadDataReducer","leadData","data","navigate","useNavigate","LeadsLoading","loading","TotalRecords","totalRecords","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","useEffect","handler","setTimeout","getLeadActions","limit","page","clearTimeout","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","key","replace","char","toUpperCase","formatDate","dateString","Date","toLocaleString","weekday","month","day","year","hour","minute","hour12","isValidISODate","value","date","isNaN","getTime","includes","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","style","boxShadow","Body","className","type","placeholder","onChange","e","target","onClick","cursor","Loading","length","scope","map","index","_data$productId2","_data$productId3","_data$productId4","_data$productId5","_data$productId6","_data$productId7","_data$productId8","_data$productId9","_data$productId10","_data$productId11","_data$productId12","_data$productId13","_data$productId14","_data$productId15","_data$userId","_data$userId2","_data$userId3","_data$userId4","_data$productId","productId","_id","product","productGenerateId","Product_Name","substring","Brand","Ask_Price","userId","name","lastName","trim","email","height","Pagination","onChangePageSize","Modal","show","onHide","centered","size","Header","backgroundColor","Title","Container","image","Carousel","interval","img","Item","src","alt","maxHeight","objectFit","Object","entries","filter","_ref","test","_ref2","displayValue","Array","isArray","item","JSON","stringify","_ref3","subKey","subValue","_ref4","md","max","newSize","Number","min","enteredPage","width","Link","to","from","_","i","isCurrentPage","props","Breadcrumb","listProps","href","fn","deps","isFirst","useRef","current","CarouselCaption","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CarouselItem","finalClassName","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","keyboard","onKeyDown","pause","onMouseOver","onMouseOut","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","tagName","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","Anchor","assign","Caption"],"sourceRoot":""}
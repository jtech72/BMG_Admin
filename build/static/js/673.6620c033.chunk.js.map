{"version":3,"file":"static/js/673.6620c033.chunk.js","mappings":"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","sources":["pages/bmg/dashboard/Dashboard.js","helpers/PageTitle.js","helpers/loader/Loading.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PageTitle from \"../../../helpers/PageTitle\";\nimport { getDashboardActions } from \"../../../redux/actions\";\nimport { FaUsers, FaLayerGroup, FaTags, FaUserShield } from \"react-icons/fa\";\nimport { Loading } from \"../../../helpers/loader/Loading\";\n\nconst Dashboard = () => {\n  const store = useSelector((state) => state);\n  const dashboardData = store?.dashboardDataReducer?.dashboardData;\n  const dashboardLoading = store?.dashboardDataReducer?.loading;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDashboardActions());\n  }, [dispatch]);\n\n  const dashboardItems = [\n    { title: \"Total Users\", value: dashboardData?.totalUser, icon: <FaUsers />, color: \"primary\" },\n    { title: \"Total Categories\", value: dashboardData?.totalCategory, icon: <FaLayerGroup />, color: \"success\" },\n    { title: \"Total Sub-Categories\", value: dashboardData?.totalSubCategory, icon: <FaTags />, color: \"info\" },\n    { title: \"Total Admins\", value: dashboardData?.totalAdmin, icon: <FaUserShield />, color: \"danger\" },\n  ];\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"BMG Dashboard\", path: \"/bmg/dashboard\" },\n          { label: \"Dashboard\", path: \"/bmg/dashboard\", active: true },\n        ]}\n        title={\"Dashboard\"}\n      />\n{dashboardLoading?<Loading/>:\n  <Row className=\"g-4 mt-3\">\n  {dashboardItems?.map((item, index) => (\n    <Col key={index} md={6} lg={3}>\n      <Card className={`shadow border-0 bg-${item.color} text-white`}>\n        <Card.Body className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <h6 className=\"fw-semibold\">{item.title}</h6>\n            <h2 className=\"fw-bold\">{item.value}</h2>\n          </div>\n          <div className=\"fs-1\">{item.icon}</div>\n        </Card.Body>\n      </Card>\n    </Col>\n  ))}\n</Row>}\n    \n    </>\n  );\n};\n\nexport default Dashboard;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path} >\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\nconst Loading = () => {\n    return (\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <RotatingLines\n                strokeColor=\"grey\"\n                strokeWidth=\"4\"\n                animationDuration=\"0.75\"\n                width=\"90\"\n                visible={true}\n            />\n        </div>\n    );\n};\n\n\nconst ButtonLoading = () => {\n    return (\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\n            <ColorRing\n                visible={true}\n                height=\"25\"\n                width=\"25\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\n            />\n\n            {/* <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div> */}\n        </div>\n    );\n};\n\nconst CartLoading = () => {\n    return (\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\n            <ColorRing\n                visible={true}\n                height=\"32\"\n                width=\"32\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n\n            {/* <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div> */}\n        </div>\n    );\n};\n\nexport { Loading, ButtonLoading, CartLoading };\n"],"names":["Dashboard","_store$dashboardDataR","_store$dashboardDataR2","store","useSelector","state","dashboardData","dashboardDataReducer","dashboardLoading","loading","dispatch","useDispatch","useEffect","getDashboardActions","dashboardItems","title","value","totalUser","icon","_jsx","FaUsers","color","totalCategory","FaLayerGroup","totalSubCategory","FaTags","totalAdmin","FaUserShield","_jsxs","_Fragment","children","PageTitle","breadCrumbItems","label","path","active","Loading","Row","className","map","item","index","Col","md","lg","Card","Body","props","Breadcrumb","listProps","Item","href","style","height","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}
{"version":3,"file":"static/js/41.cabfdc98.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","pages/bmg/enquiry/Enquiry.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-item disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <RotatingLines\r\n                strokeColor=\"grey\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"96\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"30\"\r\n                width=\"30\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading };\r\n","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getEnquiryActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination'\r\nconst Enquiry = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const EnquiryData = store?.enquiryDataReducer?.enquiryData?.contacts;\r\n\r\n    console.log(store?.enquiryDataReducer?.enquiryData)\r\n    const EnquiryLoading = store?.enquiryDataReducer?.loading\r\n\r\n\r\n    const TotalRecords = store?.enquiryDataReducer?.enquiryData?.totalRecords;\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n    useEffect(() => {\r\n        dispatch(getEnquiryActions({ search: search, limit: pageSize, page: pageIndex }));\r\n    }, [dispatch, pageIndex, pageSize, search]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: `Enquiries`, path: '/bmg/enquiry' },\r\n                    {\r\n                        label: `Enquiries`,\r\n                        path: '/bmg/enquiry',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={`Enquiries`}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\r\n                    >\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Enquiries: {EnquiryData?.length || 0}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch(\"\")}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {EnquiryLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {EnquiryData && EnquiryData?.length > 0 ? (\r\n\r\n                                        <>\r\n                                            <div className=\"d-flex justify-content-center table-responsive\">\r\n                                                <table className=\"table table-striped bg-white \">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\r\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                                                            <th scope=\"col\">Full Name</th>\r\n                                                            <th scope=\"col\">Email</th>\r\n                                                            <th scope=\"col\">Contact No</th>\r\n                                                            <th scope=\"col\">Message</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {EnquiryData?.map((data, index) => (\r\n                                                            <tr\r\n                                                                key={index}\r\n                                                                className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                {console.log({ data })}\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.fullName ? (\r\n                                                                        <span>{data?.fullName} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='fw-bold text-info'>\r\n                                                                    {data?.email ? (\r\n                                                                        <span>{data?.email} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='fw-bold text-warning'>\r\n                                                                    {data?.phoneNumber ? (\r\n                                                                        <span>{data?.phoneNumber} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='fw-bold text-primary'>\r\n                                                                    {data?.message ? (\r\n                                                                        <span>{data?.message} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">\r\n                                                No Enquiries found.{' '}\r\n                                            </code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <Pagination\r\n                                pageIndex={pageIndex}\r\n                                pageSize={pageSize}\r\n                                totalPages={totalPages}\r\n                                setPageIndex={setPageIndex}\r\n                                onChangePageSize={setPageSize}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enquiry\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active = false,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps = {},\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, {\n      ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nexport default BreadcrumbItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps = {},\n  children,\n  label = 'breadcrumb',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", {\n      ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","Enquiry","_store$enquiryDataRed","_store$enquiryDataRed2","_store$enquiryDataRed3","_store$enquiryDataRed4","_store$enquiryDataRed5","_store$enquiryDataRed6","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","EnquiryData","enquiryDataReducer","enquiryData","contacts","console","log","EnquiryLoading","loading","TotalRecords","totalRecords","setPageSize","setTotalPages","ceil","getEnquiryActions","limit","_Fragment","PageTitle","xs","Card","boxShadow","Body","cursor","scope","data","fullName","email","phoneNumber","message","Pagination","BreadcrumbItem","React","ref","bsPrefix","as","Component","linkAs","LinkComponent","Anchor","linkProps","prefix","useBootstrapPrefix","classNames","undefined","displayName","Object","assign"],"sourceRoot":""}
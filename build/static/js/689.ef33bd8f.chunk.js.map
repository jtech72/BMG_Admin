{"version":3,"file":"static/js/689.ef33bd8f.chunk.js","mappings":"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","sources":["pages/bmg/auctionLead/AuctionLead.js","helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getLeadActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination'\r\nconst AuctionLead = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const LeadsData = store?.leadDataReducer?.leadData?.data\r\n\r\n    console.log(store?.leadDataReducer?.leadData)\r\n    const LeadsLoading = store?.leadDataReducer?.loading\r\n\r\n    const TotalRecords = store?.leadDataReducer?.leadData?.totalRecords;\r\n    console.log({ TotalRecords })\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getLeadActions({ search: search, limit: pageSize, page: pageIndex }));\r\n    }, [dispatch, pageIndex, pageSize, search]);\r\n\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Format keys: Remove underscores, convert camelCase to words\r\n    const formatKey = (key) => {\r\n        return key\r\n            .replace(/_/g, \" \") // Replace underscores\r\n            .replace(/([a-z])([A-Z])/g, \"$1 $2\") // Convert camelCase\r\n            .replace(/\\b\\w/g, (char) => char.toUpperCase()); // Capitalize first letter\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: `Auction Lead's`, path: '/bmg/leads' },\r\n                    {\r\n                        label: 'Leads',\r\n                        path: '/bmg/leads',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={`Auction Lead's`}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\r\n                    >\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Lead's: {LeadsData?.length || 0}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch(\"\")}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {LeadsLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {LeadsData && LeadsData?.length > 0 ? (\r\n\r\n                                        <>\r\n                                            <div className=\"d-flex justify-content-center table-responsive\">\r\n                                                <table className=\"table table-striped bg-white \">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\r\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                                                            <th scope=\"col\">Product Id</th>\r\n                                                            <th scope=\"col\">Product Name</th>\r\n                                                            <th scope=\"col\">Brand</th>\r\n                                                            <th scope=\"col\">Ask Price</th>\r\n                                                            <th scope=\"col\">Bidding Amount</th>\r\n                                                            <th scope=\"col\">User Name</th>\r\n                                                            <th scope=\"col\">User Email</th>\r\n                                                            <th scope=\"col\">User Verified</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {LeadsData?.map((data, index) => (\r\n                                                            <tr\r\n                                                                key={index}\r\n                                                                className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.productId?.productGenerateId ? (\r\n                                                                        <span>{data?.productId?.productGenerateId} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td\r\n                                                                    className=\"text-uppercase fw-bold\"\r\n                                                                    style={{ cursor: 'pointer', color: 'crimson', transition: 'color 0.3s ease-in-out' }}\r\n                                                                    onMouseOver={(e) => e.target.style.color = 'rgb(10 207 151)'}\r\n                                                                    onMouseOut={(e) => e.target.style.color = 'crimson'}\r\n                                                                >\r\n                                                                    <OverlayTrigger\r\n                                                                        placement=\"left\"\r\n                                                                        overlay={\r\n                                                                            <Tooltip id=\"overlay-example\">\r\n                                                                                View Detail's\r\n                                                                            </Tooltip>\r\n                                                                        }>\r\n                                                                        <b>\r\n                                                                            {data?.productId?.Product_Name ? (\r\n                                                                                <span onClick={() => handleProductClick(data?.productId)}\r\n                                                                                >{data?.productId?.Product_Name} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </b>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-primary'>\r\n                                                                    {data?.productId?.Brand ? (\r\n                                                                        <span>{data?.productId?.Brand} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.productId?.Ask_Price ? (\r\n                                                                        <span>$ {data?.productId?.Ask_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.bidingAmount ? (\r\n                                                                        <span>$ {data?.bidingAmount} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.userId ? (\r\n                                                                        <span className=\"fw-semibold\">\r\n                                                                            {`${data?.userId?.name || \"\"} ${data?.userId?.lastName || \"\"}`.trim() || \"N/A\"}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"text-danger\">N/A</span>\r\n                                                                    )}\r\n\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-info'>\r\n                                                                    {data?.userId?.email ? (\r\n                                                                        <span>{data?.userId?.email} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.userId ? (\r\n                                                                        <span className={`badge ${data?.userId?.isVerified ? \"bg-success\" : \"bg-danger\"} px-3 py-2`}>\r\n                                                                            {data?.userId?.isVerified ? \"✅ Verified\" : \"❌ Not Verified\"}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"badge bg-secondary px-3 py-2\">N/A</span>\r\n                                                                    )}\r\n\r\n                                                                </td>\r\n                                                                {/* <td>\r\n                                                            <OverlayTrigger\r\n                                                                placement=\"left\"\r\n                                                                overlay={\r\n                                                                    <Tooltip id=\"overlay-example\">\r\n                                                                        Send Mail\r\n                                                                    </Tooltip>\r\n                                                                }>\r\n                                                                <a href={`mailto:${data?.email}`}>\r\n                                                                    {data?.email ? (\r\n                                                                        data?.email\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </a>\r\n                                                            </OverlayTrigger>\r\n                                                        </td> */}\r\n\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">\r\n                                                No Lead's found.\r\n                                            </code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <Pagination\r\n                                pageIndex={pageIndex}\r\n                                pageSize={pageSize}\r\n                                totalPages={totalPages}\r\n                                setPageIndex={setPageIndex}\r\n                                onChangePageSize={setPageSize}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className='px-2 py-1 text-light' style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i className=\"mdi mdi-close fs-3\" onClick={() => setShowModal(false)} style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={3000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: \"400px\",\r\n                                                    objectFit: \"contain\",\r\n                                                    boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            {/* Product Details */}\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) =>\r\n                                        ![\"_id\", \"createdAt\", \"updatedAt\", \"image\"].includes(key) &&\r\n                                        !/^[0-9a-fA-F]{24}$/.test(value) && value // Remove ID fields & empty values\r\n                                    )\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <strong className=\"text-muted\">{formatKey(key)}</strong>\r\n                                            <div className=\"fw-bold\">{typeof value === \"object\" ? JSON.stringify(value) : value}</div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuctionLead\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex is within bounds when totalPages changes\r\n        if (pageIndex >= totalPages) {\r\n            setPageIndex(Math.max(0, totalPages - 1));\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(0);\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    <option value={10}>10</option>\r\n                    <option value={20}>20</option>\r\n                    <option value={50}>50</option>\r\n                    <option value={100}>100</option>\r\n                </select>\r\n            </div>\r\n\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex + 1} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            <label>Go to page : </label>\r\n            {/* <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex + 1}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = e.target.value;\r\n                    setPageIndex((prev) => {\r\n                        const newPage = enteredPage ? Math.max(1, Math.min(enteredPage, totalPages)) - 1 : 0;\r\n                        return newPage;\r\n                    });\r\n                }}\r\n                className=\"form-control  ms-1 d-inline-block\"\r\n                style={{\r\n                    width: '80px',\r\n                }}\r\n            /> */}\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex + 1}`}\r\n                min=\"1\"\r\n                max={Number(totalPages)} // Convert totalPages to a number\r\n                onChange={(e) => {\r\n                    const enteredPage = e.target.value;\r\n                    setPageIndex((prev) => {\r\n                        const newPage = enteredPage ? Math.max(1, Math.min(enteredPage, totalPages)) - 1 : 0;\r\n                        return newPage;\r\n                    });\r\n                }}\r\n                className=\"form-control  ms-1 d-inline-block\"\r\n                style={{\r\n                    width: '80px',\r\n                }}\r\n            />\r\n\r\n\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {pageIndex > 0 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {Array.from({ length: totalPages }).map((_, page) => {\r\n                    const isFirstPage = page === 0;\r\n                    const isLastPage = page === totalPages - 1;\r\n                    const isCurrentPage = page === pageIndex;\r\n\r\n                    if (\r\n                        totalPages <= 5 ||\r\n                        isFirstPage ||\r\n                        isLastPage ||\r\n                        (page >= pageIndex - 1 && page <= pageIndex + 1)\r\n                    ) {\r\n                        return (\r\n                            <li\r\n                                key={`page-${page + 1}`}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page + 1}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((isFirstPage && pageIndex >= 4) || (isLastPage && pageIndex <= totalPages - 3)) {\r\n                        return (\r\n                            <li key={`page-${page + 1}`} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {pageIndex < totalPages - 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <RotatingLines\r\n                strokeColor=\"grey\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"96\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"30\"\r\n                width=\"30\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading };\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["AuctionLead","_store$leadDataReduce","_store$leadDataReduce2","_store$leadDataReduce3","_store$leadDataReduce4","_store$leadDataReduce5","_store$leadDataReduce6","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","LeadsData","leadDataReducer","leadData","data","console","log","LeadsLoading","loading","TotalRecords","totalRecords","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","useEffect","getLeadActions","limit","page","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","key","replace","char","toUpperCase","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","style","boxShadow","Body","className","length","type","placeholder","value","onChange","e","target","onClick","cursor","Loading","color","scope","map","index","_data$productId","_data$productId2","_data$productId3","_data$productId4","_data$productId5","_data$productId6","_data$productId7","_data$productId8","_data$userId","_data$userId2","_data$userId3","_data$userId4","_data$userId5","_data$userId6","productId","productGenerateId","transition","onMouseOver","onMouseOut","OverlayTrigger","placement","overlay","Tooltip","id","Product_Name","product","Brand","Ask_Price","bidingAmount","userId","name","lastName","trim","email","isVerified","height","Pagination","onChangePageSize","Modal","show","onHide","centered","size","Header","backgroundColor","Title","Container","image","Carousel","interval","img","Item","src","alt","maxHeight","objectFit","Object","entries","filter","_ref","includes","test","_ref2","md","JSON","stringify","max","newSize","Number","min","enteredPage","prev","width","Link","to","Array","from","_","isFirstPage","isLastPage","isCurrentPage","props","Breadcrumb","listProps","href","item","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","fn","deps","isFirst","useRef","current","CarouselCaption","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CarouselItem","finalClassName","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","keyboard","onKeyDown","pause","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","tagName","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","Anchor","assign","Caption"],"sourceRoot":""}
{"version":3,"file":"static/js/5806.24439e84.chunk.js","mappings":"iSAkBA,MAAMA,EAAaA,KACf,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KAEd,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,OAAMC,UACjBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACF,UAAU,cAAaC,UACxBE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,aAAYC,SAAA,CACpBL,EAAE,yBAA0B,KAC7BE,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,iBAAkBL,UAAU,kBAAiBC,UACnDH,EAAAA,EAAAA,KAAA,KAAAG,SAAIL,EAAE,sBAkG9B,EA1FiBU,KACb,MAAM,EAAEV,IAAMC,EAAAA,EAAAA,KACRU,GAAWC,EAAAA,EAAAA,OAEX,QAAEC,EAAO,WAAEC,EAAU,MAAEC,IAAUC,EAAAA,EAAAA,IAAaC,IAAK,CACrDJ,QAASI,EAAMC,KAAKL,QACpBE,MAAOE,EAAMC,KAAKH,MAClBD,WAAYG,EAAMC,KAAKJ,eAG3BK,EAAAA,EAAAA,WAAU,KACNR,GAASS,EAAAA,EAAAA,OACV,CAACT,IAKJ,MAAMU,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,SAAUF,EAAAA,KAAaG,SAAS1B,EAAE,0BAClC2B,MAAOJ,EAAAA,KAAaG,SAAS,sBAAsBC,MAAM,4BACzDC,SAAUL,EAAAA,KAAaG,SAAS1B,EAAE,6BAW1C,OACIO,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAxB,SAAA,CACKS,GAAaZ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAQ,CAACrB,GAAI,qBAAyB,MAErDF,EAAAA,EAAAA,MAACwB,EAAAA,EAAa,CAACC,aAAa9B,EAAAA,EAAAA,KAACH,EAAU,IAAIM,SAAA,EACvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0BAAyBC,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wCAAuCC,SAAEL,EAAE,mBACzDE,EAAAA,EAAAA,KAAA,KAAGE,UAAU,kBAAiBC,SACzBL,EAAE,iFAIVe,IACGb,EAAAA,EAAAA,KAAC+B,EAAAA,EAAK,CAACC,QAAQ,SAAS9B,UAAU,OAAMC,SACnCU,KAITR,EAAAA,EAAAA,MAAC4B,EAAAA,EAAY,CAACC,SAtBRC,IACd1B,GAAS2B,EAAAA,EAAAA,IAAWD,EAAmB,SAAGA,EAAgB,MAAGA,EAAmB,YAqBtCE,SAAUlB,EAAgBmB,cAAe,CAAC,EAAEnC,SAAA,EAC1EH,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,aACT2C,KAAK,OACLC,KAAK,WACLC,YAAa7C,EAAE,mBACf8C,eAAgB,UAEpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,iBACT2C,KAAK,QACLC,KAAK,QACLC,YAAa7C,EAAE,oBACf8C,eAAgB,UAEpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,YACT2C,KAAK,WACLC,KAAK,WACLC,YAAa7C,EAAE,uBACf8C,eAAgB,UAEpB5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACNC,MAAO1C,EAAE,iCACT2C,KAAK,WACLC,KAAK,iBACLE,eAAgB,qBAGpB5C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBC,UAClCH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACb,QAAQ,UAAUS,KAAK,SAASK,SAAUnC,EAAQR,SACrDL,EAAE,wB","sources":["pages/account/Register.js"],"sourcesContent":["// @flow\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Navigate, Link } from 'react-router-dom';\r\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//actions\r\nimport { resetAuth, signupUser } from '../../redux/actions';\r\n\r\n// components\r\nimport { VerticalForm, FormInput } from '../../components/';\r\n\r\nimport AccountLayout from './AccountLayout';\r\n\r\n/* bottom link */\r\nconst BottomLink = () => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Row className=\"mt-3\">\r\n            <Col className=\"text-center\">\r\n                <p className=\"text-muted\">\r\n                    {t('Already have account?')}{' '}\r\n                    <Link to={'/account/login'} className=\"text-muted ms-1\">\r\n                        <b>{t('Log In')}</b>\r\n                    </Link>\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nconst Register = (): React$Element<React$FragmentType> => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, userSignUp, error } = useSelector((state) => ({\r\n        loading: state.Auth.loading,\r\n        error: state.Auth.error,\r\n        userSignUp: state.Auth.userSignUp,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(resetAuth());\r\n    }, [dispatch]);\r\n\r\n    /*\r\n     * form validation schema\r\n     */\r\n    const schemaResolver = yupResolver(\r\n        yup.object().shape({\r\n            fullname: yup.string().required(t('Please enter Fullname')),\r\n            email: yup.string().required('Please enter Email').email('Please enter valid Email'),\r\n            password: yup.string().required(t('Please enter Password')),\r\n        })\r\n    );\r\n\r\n    /*\r\n     * handle form submission\r\n     */\r\n    const onSubmit = (formData) => {\r\n        dispatch(signupUser(formData['fullname'], formData['email'], formData['password']));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {userSignUp ? <Navigate to={'/account/confirm'} /> : null}\r\n\r\n            <AccountLayout bottomLinks={<BottomLink />}>\r\n                <div className=\"text-center w-75 m-auto\">\r\n                    <h4 className=\"text-dark-50 text-center mt-0 fw-bold\">{t('Free Sign Up')}</h4>\r\n                    <p className=\"text-muted mb-4\">\r\n                        {t(\"Don't have an account? Create your account, it takes less than a minute.\")}\r\n                    </p>\r\n                </div>\r\n\r\n                {error && (\r\n                    <Alert variant=\"danger\" className=\"my-2\">\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                <VerticalForm onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\r\n                    <FormInput\r\n                        label={t('Full Name')}\r\n                        type=\"text\"\r\n                        name=\"fullname\"\r\n                        placeholder={t('Enter your name')}\r\n                        containerClass={'mb-3'}\r\n                    />\r\n                    <FormInput\r\n                        label={t('Email address')}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder={t('Enter your email')}\r\n                        containerClass={'mb-3'}\r\n                    />\r\n                    <FormInput\r\n                        label={t('Password')}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder={t('Enter your password')}\r\n                        containerClass={'mb-3'}\r\n                    />\r\n                    <FormInput\r\n                        label={t('I accept Terms and Conditions')}\r\n                        type=\"checkbox\"\r\n                        name=\"checkboxsignup\"\r\n                        containerClass={'mb-3 text-muted'}\r\n                    />\r\n\r\n                    <div className=\"mb-3 mb-0 text-center\">\r\n                        <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                            {t('Sign Up')}\r\n                        </Button>\r\n                    </div>\r\n                </VerticalForm>\r\n            </AccountLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["BottomLink","t","useTranslation","_jsx","Row","className","children","Col","_jsxs","Link","to","Register","dispatch","useDispatch","loading","userSignUp","error","useSelector","state","Auth","useEffect","resetAuth","schemaResolver","yupResolver","yup","shape","fullname","required","email","password","_Fragment","Navigate","AccountLayout","bottomLinks","Alert","variant","VerticalForm","onSubmit","formData","signupUser","resolver","defaultValues","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}
{"version":3,"file":"static/js/7165.dca85d90.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","pages/bmg/faq/FaqModal/FaqModal.js","pages/bmg/faq/Faq.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\n\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\n    useEffect(() => {\n        // Ensure pageIndex stays within bounds when totalPages changes\n        if (pageIndex > totalPages) {\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\n        }\n    }, [pageIndex, totalPages, setPageIndex]);\n\n    return (\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\n            {/* Page Size Selection */}\n            <div className=\"d-inline-block me-3\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={pageSize}\n                    onChange={(e) => {\n                        const newSize = Number(e.target.value);\n                        onChangePageSize(newSize);\n                        setPageIndex(1); // Reset to first page\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {[10, 20, 50, 100].map((size) => (\n                        <option key={size} value={size}>\n                            {size}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Page Info */}\n            <span className=\"me-3\">\n                Page{' '}\n                <strong>\n                    {pageIndex} of {totalPages}\n                </strong>\n            </span>\n\n            {/* Go to Page Input */}\n            <label>Go to page: </label>\n            <input\n                type=\"number\"\n                placeholder={`${pageIndex}`}\n                min=\"1\"\n                max={totalPages}\n                onChange={(e) => {\n                    const enteredPage = Number(e.target.value);\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\n                        setPageIndex(enteredPage);\n                    }\n                }}\n                className=\"form-control ms-1 d-inline-block\"\n                style={{ width: '80px' }}\n            />\n\n            {/* Pagination Controls */}\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\n                {/* Previous Button */}\n                {pageIndex > 1 && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Previous\n                        </Link>\n                    </li>\n                )}\n\n                {/* Page Number Buttons */}\n                {Array.from({ length: totalPages }).map((_, i) => {\n                    const page = i + 1; // Adjust index to start from 1\n                    const isCurrentPage = page === pageIndex;\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\n                    const isEdgePage = page === 1 || page === totalPages;\n\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\n                        return (\n                            <li\n                                key={page}\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\n                                onClick={() => setPageIndex(page)}>\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        );\n                    } else if (\n                        (page === 2 && pageIndex >= 5) ||\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\n                    ) {\n                        return (\n                            <li key={page} className=\"page-item disabled\">\n                                <Link to=\"#\" className=\"page-link px-0\">\n                                    ...\n                                </Link>\n                            </li>\n                        );\n                    }\n\n                    return null;\n                })}\n\n                {/* Next Button */}\n                {pageIndex < totalPages && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Next\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path} >\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { createFaqActions, getFaqActions, updateFaqActions } from \"../../../../redux/actions\";\nimport { ButtonLoading } from \"../../../../helpers/loader/Loading\";\n\nconst FaqModal = ({ show, hide, faqData }) => {\n    const dispatch = useDispatch();\n    const store = useSelector((state) => state);\n\n    const loading = store?.createFaqDataReducer?.loading || store?.updateFaqDataReducer?.loading\n    const createStatus = store?.createFaqDataReducer?.faqData?.status\n    const updateStatus = store?.updateFaqDataReducer?.faqData?.status\n    console.log({ createStatus, updateStatus })\n    console.log({ faqData })\n    // State to manage form data\n    const [faq, setFaq] = useState({\n        question: \"\",\n        answer: \"\",\n        status: false,\n    });\nconst closeModal=()=>{\n    setFaq({  question: \"\",\n        answer: \"\",\n        status: false,})\n        hide()\n}\n    // Handle changes in form fields\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFaq((prev) => ({ ...prev, [name]: value }));\n    };\n\n    // Handle ReactQuill editor changes\n    const handleQuillChange = (value) => {\n        setFaq((prev) => ({ ...prev, answer: value }));\n    };\n\n    // Load existing FAQ data for editing\n    useEffect(() => {\n        if (faqData?.data) {\n            setFaq({\n                question: faqData?.data?.question || \"\",\n                answer: faqData?.data?.answer || \"\",\n                status: faqData?.data?.status ?? false,\n            });\n        }\n    }, [faqData?.data]);\n\n\n    // Handle form submission\n    const handleSubmit = () => {\n        if (!faq.question.trim() || !faq.answer.trim()) {\n            alert(\"Please fill in all required fields.\");\n            return;\n        }\n\n        const data = {\n            _id: faqData?.data?._id,\n            question: faq?.question,\n            answer: faq?.answer,\n            status: faq?.status\n        }\n        if (faqData?.data?._id) {\n            dispatch(updateFaqActions(data));\n        } else {\n            dispatch(createFaqActions(faq));\n        }\n\n    };\n    useEffect(() => {\n        if (!loading && (createStatus === 200 || updateStatus === 200)) {\n            dispatch(getFaqActions({ search: '', limit: '', page: '' }));\n            closeModal();\n        }\n    }, [createStatus, updateStatus, loading, dispatch]); \n    \n\n    return (\n        <Modal show={show} onHide={closeModal} centered size=\"lg\" backdrop='static'>\n            <Modal.Header className=\"px-2 py-1 text-light\" style={{backgroundColor:'#008003'}}>\n                <Modal.Title>{faqData?.type} FAQ</Modal.Title>\n                <i className=\"mdi mdi-close fs-3\" onClick={closeModal} style={{ cursor: 'pointer' }}></i>\n            </Modal.Header>\n            <Modal.Body >\n                <Form>\n                    {/* Question Input */}\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Question</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter question\"\n                            name=\"question\"\n                            value={faq.question}\n                            onChange={handleChange}\n                            required\n                        />\n                    </Form.Group>\n\n                    {/* Answer (Rich Text Editor) */}\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Answer</Form.Label>\n                        <ReactQuill\n                            value={faq.answer}\n                            onChange={handleQuillChange}\n                            theme=\"snow\"\n                            placeholder=\"Enter answer...\"\n                        />\n                    </Form.Group>\n                    {faqData?.data && (\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Status</Form.Label>\n                            <Form.Select name=\"status\" value={faq.status} onChange={handleChange}>\n                                <option value=\"true\">Active</option>\n                                <option value=\"false\">Inactive</option>\n                            </Form.Select>\n                        </Form.Group>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer className=\"px-2 py-1\">\n                <Button variant=\"danger\" onClick={closeModal}>\n                    Cancel\n                </Button>\n                <Button style={{backgroundColor:'#008003'}} onClick={handleSubmit} disabled={loading}>\n                    {loading ? <ButtonLoading /> : <>{faqData?.type ==='Edit'?'Update':\"Add\"} FAQ</>}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default FaqModal;\n","import { useEffect, useState } from \"react\";\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Button, Table } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PageTitle from \"../../../helpers/PageTitle\";\nimport { Loading } from \"../../../helpers/loader/Loading\";\nimport { getFaqActions } from \"../../../redux/actions\";\nimport Pagination from \"../../../helpers/Pagination\";\nimport FaqModal from \"./FaqModal/FaqModal\";\n\nconst Faq = () => {\n  const dispatch = useDispatch();\n  const { faqDataReducer } = useSelector((state) => state);\n\n  const FaqData = faqDataReducer?.faqData?.faqs || [];\n  const TotalRecords = faqDataReducer?.faqData?.totalRecords || 0;\n  const FaqLoading = faqDataReducer?.loading;\n\n  const [search, setSearch] = useState(\"\");\n  const [pageIndex, setPageIndex] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [faqModal, setFaqModal] = useState({\n    type: \"\",\n    data: null,\n    isVisible: false,\n  });\n\n  useEffect(() => {\n    setTotalPages(Math.ceil(TotalRecords / pageSize));\n  }, [TotalRecords, pageSize]);\n\n  useEffect(() => {\n    dispatch(getFaqActions({ search, limit: pageSize, page: pageIndex }));\n  }, [dispatch, search, pageIndex, pageSize]);\n\n  const handleFaqModal = (type, data = null) => {\n    setFaqModal({ type, data, isVisible: true });\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Faq\", path: \"/bmg/faq\", active: true },\n        ]}\n        title=\"FAQ Management\"\n      />\n\n      <Row>\n        <Col xs={12}>\n          <Card  style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n          >\n            <Card.Body>\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                <span className=\"px-3 py-1 bg-dark text-light rounded\">\n                  Total FAQs: {TotalRecords || 0}\n                </span>\n                <div className=\"d-flex\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control w-auto me-2\"\n                    placeholder=\"Search...\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                  />\n                  {search && (\n                    <i\n                      className=\"mdi mdi-backspace-outline text-danger fs-3 me-2\"\n                      onClick={() => setSearch(\"\")}\n                      style={{ cursor: \"pointer\" }}\n                    ></i>\n                  )}\n                  <Button variant=\"success\" onClick={() => handleFaqModal(\"Add\")}>\n                    <i className=\"mdi mdi-plus-circle\"></i> Add\n                  </Button>\n                </div>\n              </div>\n\n              {FaqLoading ? (\n                <Loading />\n              ) : FaqData.length > 0 ? (\n                <div className=\"table-responsive\">\n                  <Table bordered hover className=\"bg-white text-center\">\n                    <thead>\n                      <tr className=\"text-nowrap text-secondary\">\n                        <th><i className=\"mdi mdi-merge\"></i></th>\n                        <th>Question</th>\n                        <th>Answer</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {FaqData.map((data, index) => (\n                        <tr key={data._id || index}>\n                          <td>{index + 1}</td>\n                          <OverlayTrigger\n                            placement=\"top\"\n                            overlay={\n                              <Tooltip id={`tooltip-${index}`}>\n                                {data?.question}\n                              </Tooltip>\n                            }\n                          >\n                            <td>{data?.question.slice(0, 70) + '...' || \"N/A\"}</td>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            placement=\"top\"\n                            overlay={\n                              <Tooltip id={`tooltip-${index}`}>\n                                <div dangerouslySetInnerHTML={{ __html: data?.answer || \"N/A\" }} />\n                              </Tooltip>\n                            }\n                          >\n                            <td>\n                              <span\n                                dangerouslySetInnerHTML={{\n                                  __html: data?.answer?.slice(0, 70) + \"...\" || \"N/A\",\n                                }}\n                              />\n                            </td>\n                          </OverlayTrigger>\n\n                          <td>\n                            <span\n                              className={`badge ${data?.status ? \"bg-success\" : \"bg-danger\"\n                                } px-2 py-1`}\n                            >\n                              {data?.status ? \"✅ Active\" : \"❌ Inactive\"}\n                            </span>\n                          </td>\n\n                          <td>\n                            <i\n                              className=\"mdi mdi-square-edit-outline fs-4 text-primary\"\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => handleFaqModal(\"Edit\", data)}\n                            ></i>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </div>\n              ) : (\n                <div className=\"text-center py-4\">\n                  <code className=\"fs-5 text-muted\">No FAQs found. Add some to display.</code>\n                </div>\n              )}\n\n              <Pagination\n                pageIndex={pageIndex}\n                pageSize={pageSize}\n                totalPages={totalPages}\n                setPageIndex={setPageIndex}\n                onChangePageSize={setPageSize}\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <FaqModal\n        show={faqModal.isVisible}\n        hide={() => setFaqModal({ ...faqModal, isVisible: false })}\n        faqData={faqModal}\n      />\n    </>\n  );\n};\n\nexport default Faq;\n"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","_store$createFaqDataR","_store$updateFaqDataR","_store$createFaqDataR2","_store$createFaqDataR3","_store$updateFaqDataR2","_store$updateFaqDataR3","show","hide","faqData","dispatch","useDispatch","store","useSelector","state","loading","createFaqDataReducer","updateFaqDataReducer","createStatus","status","updateStatus","console","log","faq","setFaq","useState","question","answer","closeModal","handleChange","name","prev","_faqData$data","_faqData$data2","_faqData$data$status","_faqData$data3","data","getFaqActions","search","limit","Modal","onHide","centered","backdrop","Header","backgroundColor","Title","cursor","Body","Form","Group","Label","Control","required","ReactQuill","theme","Select","Footer","Button","variant","handleSubmit","_faqData$data4","_faqData$data5","trim","alert","_id","updateFaqActions","createFaqActions","disabled","ButtonLoading","_Fragment","Faq","_faqDataReducer$faqDa","_faqDataReducer$faqDa2","faqDataReducer","FaqData","faqs","TotalRecords","totalRecords","FaqLoading","setSearch","setPageSize","setTotalPages","faqModal","setFaqModal","isVisible","ceil","handleFaqModal","arguments","undefined","PageTitle","xs","Card","boxShadow","Loading","Table","bordered","hover","_data$answer","OverlayTrigger","placement","overlay","Tooltip","id","slice","dangerouslySetInnerHTML","__html","Pagination","FaqModal"],"sourceRoot":""}
{"version":3,"file":"static/js/3885.175427b4.chunk.js","mappings":"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","sources":["pages/bmg/categories/tabs/Tab.js","pages/bmg/categories/AddCategoryModal/AddCategoryModal.js","pages/bmg/categories/Categories.js","helpers/Pagination.js","helpers/PageTitle.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Tab.css';\r\n\r\nconst Tab = ({ connectTab }) => {\r\n    const [activeTab, setActiveTab] = useState('Categories');\r\n\r\n    const handleClick = (tab, item) => {\r\n        if (tab === activeTab) {\r\n            return;\r\n        }\r\n        setActiveTab(tab);\r\n        connectTab(item);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar text-dark \">\r\n                <div\r\n                    className={`nav-item ${activeTab === 'Categories' ? 'active' : ''}`}\r\n                    onClick={() => handleClick('Categories', 0)}>\r\n                 Categories\r\n                </div>\r\n                <div\r\n                    className={`nav-item ${activeTab === 'Sub-Categories' ? 'active' : ''}`}\r\n                    onClick={() => handleClick('Sub-Categories', 1)}>\r\n                    Sub Categories\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Tab;","import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\n\r\nconst MandatoryFieldAstrick = () => <span style={{ color: 'red' }}>*</span>;\r\n\r\nconst AddCategoryModal = ({\r\n    show,\r\n    handleClose,\r\n    allSubCategories = [],\r\n    onSubmit,\r\n    newSubCategory,\r\n    setNewSubCategory,\r\n    addedCategories,\r\n    setAddedCategories,\r\n    modalCheck,\r\n    setModalCheck,\r\n    selectedCategories,\r\n    setSelectedCategories,\r\n    selectedSubCategories,\r\n    setSelectedSubCategories,\r\n}) => {\r\n    const store = useSelector((state) => state);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [subCategoryError, setSubCategoryError] = useState('');\r\n\r\n    const [confirmName, setConfirmName] = useState('');\r\n    // const handleCategorySubmit = (payload) => {\r\n    //     // payload = { categoryName: 'test1', subCategories: [...] }\r\n    //     setAddedCategories((prev) => [...prev, payload.categoryName]);\r\n    // };\r\n\r\n    const handleAddSubCategory = () => {\r\n        if (newSubCategory.trim() !== '') {\r\n            setAddedCategories((prev) => [...prev, newSubCategory]);\r\n            const newOption = { label: newSubCategory, value: newSubCategory, new: true };\r\n            setSelectedSubCategories((prev) => [...prev, newOption]);\r\n            setNewSubCategory('');\r\n        }\r\n    };\r\n    const [categoryConfirmationMatch, setCategoryConfirmationMatch] = useState('');\r\n    const [categoryNameError, setCategoryNameError] = useState('');\r\n    useEffect(() => {\r\n        if (categoryName.trim() !== '') {\r\n            setCategoryNameError('');\r\n        }\r\n    }, [categoryName]);\r\n\r\n    useEffect(() => {\r\n        if (categoryName == confirmName) {\r\n            setCategoryConfirmationMatch('');\r\n        }\r\n    }, [categoryName, confirmName]);\r\n    useEffect(() => {\r\n        if (selectedSubCategories?.length > 0) {\r\n            setSubCategoryError('');\r\n        }\r\n    }, [selectedSubCategories]);\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const trimmedCategory = categoryName.trim();\r\n        const trimmedConfirm = confirmName.trim();\r\n\r\n        if (!trimmedCategory) {\r\n            setCategoryNameError('Please enter a valid category name.');\r\n            return;\r\n        }\r\n\r\n        if (trimmedCategory !== trimmedConfirm) {\r\n            setCategoryConfirmationMatch('Category names do not match!');\r\n            return;\r\n        }\r\n\r\n        if (selectedSubCategories.length === 0 && modalCheck === 'Sub-category') {\r\n            setSubCategoryError('Please select at least one subcategory.');\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            categoryName: trimmedCategory,\r\n            subCategories: selectedSubCategories.map((item) => item.value),\r\n        };\r\n\r\n        onSubmit?.(payload);\r\n        setCategoryName('');\r\n        setConfirmName('');\r\n        setSubCategoryError('');\r\n    };\r\n\r\n    const subCategoryOptions =\r\n        store?.subCategoryDataReducer?.categoryData?.subCategories?.map((item) => ({\r\n            label: item?.subCategoryName,\r\n            value: item?._id,\r\n        })) || [];\r\n\r\n    const categoryOptions =\r\n        store?.categoryDataReducer?.categoryData?.groupedCategories?.map((item) => ({\r\n            label: item?.categoryName,\r\n            value: item?._id,\r\n        })) || [];\r\n\r\n    const selectOptions = modalCheck === 'Sub-category' ? subCategoryOptions : categoryOptions;\r\n\r\n    // return());\r\n    useEffect(() => {\r\n        if (!show) {\r\n            setModalCheck('');\r\n            setSelectedSubCategories([]);\r\n            setSubCategoryError('');\r\n            setCategoryName('');\r\n            setConfirmName('');\r\n            setSelectedCategories([]);\r\n            setNewSubCategory('');\r\n            setCategoryConfirmationMatch('');\r\n        }\r\n    }, [show]);\r\n\r\n    const NoDropdownIndicator = () => null;\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add {modalCheck == 'Sub-category' && 'Sub-'}Category</Modal.Title>\r\n            </Modal.Header>\r\n            <Form onSubmit={handleFormSubmit}>\r\n                <Modal.Body>\r\n                    {!modalCheck ? (\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>\r\n                                Category Name <MandatoryFieldAstrick />\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={categoryName}\r\n                                onChange={(e) => setCategoryName(e.target.value)}\r\n                                required\r\n                                placeholder=\"Enter Category Name\"\r\n                            />\r\n                            {categoryNameError && <p className=\"text-danger mt-1\">{categoryNameError}</p>}\r\n                        </Form.Group>\r\n                    ) : (\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>\r\n                                Assign Category <MandatoryFieldAstrick />\r\n                            </Form.Label>\r\n\r\n                            <Select\r\n                                required\r\n                                value={selectedCategories}\r\n                                options={selectOptions}\r\n                                onChange={setSelectedCategories}\r\n                                classNamePrefix=\"react-select\"\r\n                            />\r\n                        </Form.Group>\r\n                    )}\r\n                    {!modalCheck && (\r\n                        <>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>\r\n                                    Confirm Category Name <MandatoryFieldAstrick />\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Confirm Category Name\"\r\n                                    value={confirmName}\r\n                                    onChange={(e) => setConfirmName(e.target.value)}\r\n                                    required\r\n                                />\r\n                                {categoryConfirmationMatch && (\r\n                                    <p className=\"text-danger\">{categoryConfirmationMatch}</p>\r\n                                )}\r\n                            </Form.Group>\r\n                        </>\r\n                    )}\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>\r\n                            Selected Subcategories\r\n                            {modalCheck == 'Sub-category' ? <MandatoryFieldAstrick /> : <MandatoryFieldAstrick />}\r\n                        </Form.Label>\r\n                        {!modalCheck ? (\r\n                            <>\r\n                                <Select\r\n                                    required={modalCheck == 'Sub-category' ? true : false}\r\n                                    isMulti\r\n                                    value={selectedSubCategories}\r\n                                    options={subCategoryOptions}\r\n                                    onChange={(selected) => {\r\n                                        setSelectedSubCategories(selected);\r\n                                        setSubCategoryError(''); // clear error on change\r\n                                    }}\r\n                                    classNamePrefix=\"react-select\"\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Select\r\n                                    isMulti\r\n                                    value={selectedSubCategories}\r\n                                    options={!modalCheck ? subCategoryOptions : []}\r\n                                    onChange={(selected) => {\r\n                                        setSelectedSubCategories(selected);\r\n                                        setSubCategoryError(''); // clear error on change\r\n                                    }}\r\n                                    menuIsOpen={!modalCheck}\r\n                                    isClearable\r\n                                    classNamePrefix=\"react-select\"\r\n                                    components={{ DropdownIndicator: !modalCheck ? undefined : NoDropdownIndicator }}\r\n                                />\r\n                                {subCategoryError && <p className=\"text-danger mt-1\">{subCategoryError}</p>}\r\n                            </>\r\n                        )}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 d-flex\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Add new subcategory\"\r\n                            value={newSubCategory}\r\n                            onChange={(e) => setNewSubCategory(e.target.value)}\r\n                        />\r\n                        <Button type=\"button\" onClick={handleAddSubCategory} className=\"ms-2\">\r\n                            Add\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    {/* <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button> */}\r\n                    <Button\r\n                        onClick={() => {\r\n                            if (selectedSubCategories.length > 0) {\r\n                                handleFormSubmit();\r\n                            } else {\r\n                                setSubCategoryError('This field is required');\r\n                            }\r\n                        }}\r\n                        variant=\"primary\"\r\n                        type=\"submit\">\r\n                        Save {modalCheck == 'Sub-category' ? 'Sub-category' : 'Category'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddCategoryModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Container, Modal, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport {\r\n    createCategoryActions,\r\n    createCategoryActionsReset,\r\n    createSubCategoryActions,\r\n    createSubCategoryActionsReset,\r\n    getCategoryActions,\r\n    getSubCategoryActions,\r\n} from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport Tab from './tabs/Tab';\r\nimport AddCategoryModal from './AddCategoryModal/AddCategoryModal';\r\nimport ToastContainer from '../../../helpers/toast/ToastContainer';\r\nconst Categories = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const CategoryData = store?.categoryDataReducer?.categoryData?.groupedCategories;\r\n    const SubCategoryData = store?.subCategoryDataReducer?.categoryData?.subCategories;\r\n    const CategoryLoading = store?.categoryDataReducer?.loading;\r\n    const SubCategoryLoading = store?.subCategoryDataReducer?.loading;\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n    const connectTab = (tabIndex) => {\r\n        setActiveTab(tabIndex);\r\n    };\r\n    const [apiCall, setApiCall] = useState(false);\r\n\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(totalRecords / pageSize));\r\n    }, [totalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (activeTab === 0) {\r\n            dispatch(getCategoryActions({ search, limit: pageSize, page: pageIndex }));\r\n        } else if (activeTab === 1) {\r\n            dispatch(getSubCategoryActions({ search, limit: pageSize, page: pageIndex }));\r\n        }\r\n    }, [dispatch, activeTab, pageIndex, pageSize, search, apiCall]);\r\n\r\n    // Separate useEffect to watch for store updates and set totalRecords\r\n    useEffect(() => {\r\n        if (activeTab === 0) {\r\n            setTotalRecords(store?.categoryDataReducer?.categoryData?.totalRecords || 0);\r\n            setPageIndex(1);\r\n        } else if (activeTab === 1) {\r\n            setTotalRecords(store?.subCategoryDataReducer?.categoryData?.totalRecords || 0);\r\n            setPageIndex(1);\r\n        }\r\n    }, [\r\n        store?.categoryDataReducer?.categoryData?.totalRecords,\r\n        store?.subCategoryDataReducer?.categoryData?.totalRecords,\r\n        activeTab,\r\n        apiCall,\r\n    ]);\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString('en-US', {\r\n            weekday: 'short', // \"Thu\"\r\n            month: 'short', // \"Feb\"\r\n            day: '2-digit', // \"27\"\r\n            year: 'numeric', // \"2025\"\r\n            hour: '2-digit', // \"12\"\r\n            minute: '2-digit', // \"00\"\r\n            hour12: true, // \"AM/PM\"\r\n        });\r\n    };\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [selectedCategoryData, setSelectedCategoryData] = useState(null);\r\n\r\n    const handleViewSubCategories = (category) => {\r\n        if (category) {\r\n            setSelectedCategory(category?.categoryName);\r\n            setSelectedCategoryData(category?.subCategories);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n    // Format keys: Remove underscores, convert camelCase to words\r\n    const formatKey = (key) => {\r\n        return key\r\n            .replace(/_/g, ' ') // Replace underscores\r\n            .replace(/([a-z])([A-Z])/g, '$1 $2') // Convert camelCase\r\n            .replace(/\\b\\w/g, (char) => char.toUpperCase()); // Capitalize first letter\r\n    };\r\n    const [modalCheck, setModalCheck] = useState('');\r\n    const [openAddCategoryModal, setOpenAddCategoryModal] = useState(false);\r\n    useEffect(() => {\r\n        if (openAddCategoryModal) {\r\n            if (modalCheck.toLowerCase() === 'sub-category') {\r\n                dispatch(getCategoryActions({ search, limit: '', page: pageIndex }));\r\n            } else {\r\n                dispatch(getSubCategoryActions({ search, limit: '', page: pageIndex }));\r\n            }\r\n        }\r\n    }, [openAddCategoryModal, modalCheck]);\r\n    const [addedCategories, setAddedCategories] = useState([]);\r\n    const [selectedSubCategories, setSelectedSubCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    const [subCategoryData, setSubCategoryData] = useState([]);\r\n    const addCategoryHandler = (data) => {\r\n        if (modalCheck) {\r\n            dispatch(\r\n                createSubCategoryActions({\r\n                    subCategoryNames: addedCategories,\r\n                    categoryId: selectedCategories?.value,\r\n                })\r\n            );\r\n        } else {\r\n            // After creating category from here in useeffect #1\r\n            dispatch(createCategoryActions({ name: data?.categoryName }));\r\n            setSubCategoryData(data?.subCategories);\r\n        }\r\n    };\r\n    const [newSubCategory, setNewSubCategory] = useState('');\r\n\r\n    const createCategoryReducer = store?.createCategoryDataReducer;\r\n    useEffect(() => {\r\n        if (createCategoryReducer?.categoryData?.status === 200) {\r\n            if (selectedSubCategories?.length > 0) {\r\n                const checkForNewSubCategory = selectedSubCategories?.filter((item) => item?.new);\r\n                const oldSubCategories = selectedSubCategories?.filter((item) => !item?.new);\r\n                dispatch(\r\n                    createSubCategoryActions({\r\n                        subCategoryNames: checkForNewSubCategory?.map((item) => item?.label),\r\n                        categoryId: createCategoryReducer?.categoryData?.newCategory?._id,\r\n                        existingSubCategoryIds: oldSubCategories?.map((item) => item?.value),\r\n                    })\r\n                );\r\n                setSelectedSubCategories([]);\r\n            } else {\r\n                ToastContainer('Successfully Added', 'success');\r\n                setOpenAddCategoryModal(false);\r\n                setApiCall((prev) => !prev);\r\n            }\r\n            dispatch(createCategoryActionsReset());\r\n        } else if (createCategoryReducer?.categoryData && typeof createCategoryReducer?.categoryData === 'string') {\r\n            ToastContainer(createCategoryReducer?.categoryData, 'danger');\r\n            dispatch(createCategoryActionsReset());\r\n        }\r\n    }, [createCategoryReducer]);\r\n\r\n    const createSubCategoryReducer = store?.createSubCategoryDataReducer;\r\n\r\n    useEffect(() => {\r\n        if (createSubCategoryReducer?.categoryData?.status) {\r\n            if (createSubCategoryReducer?.categoryData?.status == 200) {\r\n                ToastContainer('Successfully added!', 'success');\r\n                setOpenAddCategoryModal(false);\r\n                setApiCall((prev) => !prev);\r\n            } else {\r\n                ToastContainer(createSubCategoryReducer?.categoryData?.message || 'error');\r\n            }\r\n            dispatch(createSubCategoryActionsReset());\r\n        }\r\n    }, [createSubCategoryReducer]);\r\n    const handleAddSubCategoryHandler = () => {\r\n        setOpenAddCategoryModal(true);\r\n        setModalCheck('Sub-category');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AddCategoryModal\r\n                selectedSubCategories={selectedSubCategories}\r\n                setSelectedSubCategories={setSelectedSubCategories}\r\n                selectedCategories={selectedCategories}\r\n                setSelectedCategories={setSelectedCategories}\r\n                addedCategories={addedCategories}\r\n                setAddedCategories={setAddedCategories}\r\n                newSubCategory={newSubCategory}\r\n                setNewSubCategory={setNewSubCategory}\r\n                onSubmit={addCategoryHandler}\r\n                show={openAddCategoryModal}\r\n                handleClose={() => setOpenAddCategoryModal(false)}\r\n                allSubCategories={SubCategoryData}\r\n                modalCheck={modalCheck}\r\n                setModalCheck={setModalCheck}\r\n            />\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    {\r\n                        label: `${activeTab === 0 ? 'Categories' : 'Sub-Categories'}`,\r\n                        path: '/bmg/categories',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={'Categories'}\r\n            />\r\n            <Row>\r\n                <Col lg={6} className=\"d-flex justify-content-start \">\r\n                    <Tab connectTab={connectTab} />\r\n                </Col>\r\n                <div>\r\n                    {activeTab === 0 ? (\r\n                        <Col xs={12}>\r\n                            <Card\r\n                                style={{\r\n                                    boxShadow:\r\n                                        'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                                }}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                        <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                            Total Categories: {totalRecords}\r\n                                        </span>\r\n                                        <div className=\"d-flex\">\r\n                                            <Button\r\n                                                onClick={() => setOpenAddCategoryModal(true)}\r\n                                                className=\"me-2 bg-success border-0\">\r\n                                                Add Category\r\n                                            </Button>\r\n\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control w-auto me-1\"\r\n                                                placeholder=\"Search...\"\r\n                                                value={search}\r\n                                                onChange={(e) => setSearch(e.target.value)}\r\n                                            />\r\n                                            {search && (\r\n                                                <i\r\n                                                    className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                                    onClick={() => setSearch('')}\r\n                                                    style={{ cursor: 'pointer' }}></i>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {CategoryLoading ? (\r\n                                        <>\r\n                                            <Loading />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            {CategoryData && CategoryData?.length > 0 ? (\r\n                                                <>\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <table className=\"table text-start table-striped bg-white\">\r\n                                                            <thead>\r\n                                                                <tr className=\"\">\r\n                                                                    <th scope=\"col\">\r\n                                                                        <i className=\"mdi mdi-merge\"></i>\r\n                                                                    </th>\r\n                                                                    <th scope=\"col\">Category Name</th>\r\n                                                                    <th scope=\"col\">Sub Categories</th>\r\n                                                                    <th scope=\"col\">Created At</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {CategoryData?.map((data, index) => (\r\n                                                                    <tr\r\n                                                                        key={index}\r\n                                                                        className=\"text-dark fw-bold text-nowrap\">\r\n                                                                        {/* <th scope=\"row\">{index + 1}</th> */}\r\n                                                                        <th scope=\"row\">\r\n                                                                            {(pageIndex - 1) * 10 + index + 1}\r\n                                                                        </th>\r\n                                                                        <td className=\"text-uppercase fw-bold\">\r\n                                                                            {data?.categoryName ? (\r\n                                                                                <span>{data?.categoryName} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td className=\"text-uppercase fw-bold\">\r\n                                                                            {data?.subCategories?.length > 0 ? (\r\n                                                                                <span\r\n                                                                                    style={{\r\n                                                                                        cursor: 'pointer',\r\n                                                                                        // color: 'crimson',\r\n                                                                                    }}\r\n                                                                                    // onMouseOver={(e) =>\r\n                                                                                    //     (e.target.style.color =\r\n                                                                                    //         'rgb(10 207 151)')\r\n                                                                                    // }\r\n                                                                                    // onMouseOut={(e) =>\r\n                                                                                    //     (e.target.style.color =\r\n                                                                                    //         'crimson')\r\n                                                                                    // }\r\n                                                                                    onClick={() =>\r\n                                                                                        handleViewSubCategories(data)\r\n                                                                                    }>\r\n                                                                                    {' '}\r\n                                                                                    View Sub Categories\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td className=\"text-uppercase fw-bold\">\r\n                                                                            {data?.createdAt ? (\r\n                                                                                <span>\r\n                                                                                    {formatDate(data?.createdAt)}{' '}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </>\r\n                                            ) : (\r\n                                                <div\r\n                                                    className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                                    style={{ height: '30vh' }}>\r\n                                                    <code className=\"fs-4\">No Categories found.</code>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                    <Pagination\r\n                                        pageIndex={pageIndex}\r\n                                        pageSize={pageSize}\r\n                                        totalPages={totalPages}\r\n                                        setPageIndex={setPageIndex}\r\n                                        onChangePageSize={setPageSize}\r\n                                    />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ) : activeTab === 1 ? (\r\n                        <Col xs={12}>\r\n                            <Card\r\n                                style={{\r\n                                    boxShadow:\r\n                                        'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                                }}>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                        <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                            Total Sub Categories: {totalRecords}\r\n                                        </span>\r\n                                        <div className=\"d-flex\">\r\n                                            <Button onClick={handleAddSubCategoryHandler} className=\"me-2\">\r\n                                                Add Sub-Category\r\n                                            </Button>\r\n\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control w-auto me-1\"\r\n                                                placeholder=\"Search...\"\r\n                                                value={search}\r\n                                                onChange={(e) => setSearch(e.target.value)}\r\n                                            />\r\n                                            {search && (\r\n                                                <i\r\n                                                    className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                                    onClick={() => setSearch('')}\r\n                                                    style={{ cursor: 'pointer' }}></i>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {SubCategoryLoading ? (\r\n                                        <>\r\n                                            <Loading />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            {SubCategoryData && SubCategoryData?.length > 0 ? (\r\n                                                <>\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <table className=\"table table-striped bg-white\">\r\n                                                            <thead>\r\n                                                                <tr className=\"\" style={{ color: '#703133' }}>\r\n                                                                    <th scope=\"col\">\r\n                                                                        <i className=\"mdi mdi-merge\"></i>\r\n                                                                    </th>\r\n                                                                    <th scope=\"col\">Sub-Category Name</th>\r\n                                                                    <th scope=\"col\">Category Name</th>\r\n                                                                    <th scope=\"col\">Created At</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {SubCategoryData?.map((data, index) => (\r\n                                                                    <tr\r\n                                                                        key={index}\r\n                                                                        className=\"text-dark fw-bold text-nowrap\">\r\n                                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                                        <td className=\"text-uppercase fw-bold text-success\">\r\n                                                                            {data?.subCategoryName ? (\r\n                                                                                <span>{data?.subCategoryName} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td className=\"text-uppercase fw-bold text-danger\">\r\n                                                                            {data?.categoryId?.name ? (\r\n                                                                                <span>{data?.categoryId?.name} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td className=\"text-uppercase fw-bold text-primary\">\r\n                                                                            {data?.createdAt ? (\r\n                                                                                <span>\r\n                                                                                    {formatDate(data?.createdAt)}{' '}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </>\r\n                                            ) : (\r\n                                                <div\r\n                                                    className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                                    style={{ height: '30vh' }}>\r\n                                                    <code className=\"fs-4\">No Sub Category found.</code>\r\n                                                </div>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                    <Pagination\r\n                                        pageIndex={pageIndex}\r\n                                        pageSize={pageSize}\r\n                                        totalPages={totalPages}\r\n                                        setPageIndex={setPageIndex}\r\n                                        onChangePageSize={setPageSize}\r\n                                    />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ) : null}\r\n                </div>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className=\"px-2 py-1 text-light\" style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">\r\n                        Sub Categories in {selectedCategory} ({selectedCategoryData?.length})\r\n                    </Modal.Title>\r\n                    <i\r\n                        className=\"mdi mdi-close fs-3\"\r\n                        onClick={() => setShowModal(false)}\r\n                        style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedCategoryData && selectedCategoryData?.length > 0 ? (\r\n                        <Container>\r\n                            <table className=\"table table-striped rounded shadow-sm\">\r\n                                <thead className=\"bg-success text-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\" className=\"px-3 py-2\">\r\n                                            #\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-3 py-2\">\r\n                                            Sub Category\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {selectedCategoryData?.map((item, index) => (\r\n                                        <tr key={index} className=\"align-middle\">\r\n                                            <td className=\"px-3 py-2 fw-bold\">{index + 1}</td>\r\n                                            <td className=\"px-3 py-2\">{item?.name || 'N/A'}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </Container>\r\n                    ) : (\r\n                        <div className=\"text-center text-muted py-3\">No products available.</div>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"names":["_ref","connectTab","activeTab","setActiveTab","useState","handleClick","tab","item","_jsx","children","_jsxs","className","onClick","MandatoryFieldAstrick","style","color","_store$subCategoryDat","_store$subCategoryDat2","_store$subCategoryDat3","_store$categoryDataRe","_store$categoryDataRe2","_store$categoryDataRe3","show","handleClose","allSubCategories","onSubmit","newSubCategory","setNewSubCategory","addedCategories","setAddedCategories","modalCheck","setModalCheck","selectedCategories","setSelectedCategories","selectedSubCategories","setSelectedSubCategories","store","useSelector","state","categoryName","setCategoryName","subCategoryError","setSubCategoryError","confirmName","setConfirmName","categoryConfirmationMatch","setCategoryConfirmationMatch","categoryNameError","setCategoryNameError","useEffect","trim","length","handleFormSubmit","e","preventDefault","trimmedCategory","trimmedConfirm","payload","subCategories","map","value","subCategoryOptions","subCategoryDataReducer","categoryData","label","subCategoryName","_id","categoryOptions","categoryDataReducer","groupedCategories","selectOptions","Modal","onHide","centered","Header","closeButton","Title","Form","Body","Group","Label","Select","required","options","onChange","classNamePrefix","Control","type","target","placeholder","_Fragment","isMulti","selected","menuIsOpen","isClearable","components","DropdownIndicator","NoDropdownIndicator","undefined","Button","handleAddSubCategory","prev","newOption","new","Footer","variant","Categories","_store$categoryDataRe6","_store$categoryDataRe7","_store$subCategoryDat6","_store$subCategoryDat7","dispatch","useDispatch","search","setSearch","CategoryData","SubCategoryData","CategoryLoading","loading","SubCategoryLoading","totalRecords","setTotalRecords","apiCall","setApiCall","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","getCategoryActions","limit","page","getSubCategoryActions","_store$categoryDataRe4","_store$categoryDataRe5","_store$subCategoryDat4","_store$subCategoryDat5","formatDate","dateString","Date","toLocaleString","weekday","month","day","year","hour","minute","hour12","showModal","setShowModal","selectedCategory","setSelectedCategory","selectedCategoryData","setSelectedCategoryData","openAddCategoryModal","setOpenAddCategoryModal","toLowerCase","subCategoryData","setSubCategoryData","createCategoryReducer","createCategoryDataReducer","_createCategoryReduce","status","_createCategoryReduce2","_createCategoryReduce3","checkForNewSubCategory","filter","oldSubCategories","createSubCategoryActions","subCategoryNames","categoryId","newCategory","existingSubCategoryIds","ToastContainer","createCategoryActionsReset","createSubCategoryReducer","createSubCategoryDataReducer","_createSubCategoryRed","_createSubCategoryRed2","_createSubCategoryRed3","message","createSubCategoryActionsReset","AddCategoryModal","data","createCategoryActions","name","PageTitle","breadCrumbItems","path","active","title","Row","Col","lg","Tab","tabIndex","xs","Card","boxShadow","cursor","Loading","scope","index","_data$subCategories","category","createdAt","height","Pagination","onChangePageSize","handleAddSubCategoryHandler","_data$categoryId","_data$categoryId2","size","backgroundColor","Container","max","newSize","Number","min","enteredPage","width","Link","to","Array","from","_","i","isCurrentPage","props","Breadcrumb","listProps","Item","href"],"sourceRoot":""}
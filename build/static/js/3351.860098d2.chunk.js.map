{"version":3,"file":"static/js/3351.860098d2.chunk.js","mappings":"uRAkBA,MAAMA,EAAaA,KACf,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KAEd,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,OAAMC,UACjBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACF,UAAU,cAAaC,UACxBE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,aAAYC,SAAA,CACpBL,EAAE,WAAY,KACfE,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,iBAAkBL,UAAU,kBAAiBC,UACnDH,EAAAA,EAAAA,KAAA,KAAAG,SAAIL,EAAE,oBAIhB,EA8Ed,EA1EuBU,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,EAAEZ,IAAMC,EAAAA,EAAAA,MAEdY,EAAAA,EAAAA,YAAU,KACNF,GAASG,EAAAA,EAAAA,KAAY,GACtB,CAACH,IAEJ,MAAM,QAAEI,EAAO,cAAEC,EAAa,qBAAEC,EAAoB,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,IAAK,CAC9EL,QAASK,EAAMC,KAAKN,QACpBO,KAAMF,EAAMC,KAAKC,KACjBJ,MAAOE,EAAMC,KAAKH,MAClBF,cAAeI,EAAMC,KAAKL,cAC1BC,qBAAsBG,EAAMC,KAAKJ,yBAM/BM,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,SAAUF,EAAAA,KAAaG,SAAS5B,EAAE,6BAW1C,OACIE,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAAxB,UACIE,EAAAA,EAAAA,MAACuB,EAAAA,EAAa,CAACC,aAAa7B,EAAAA,EAAAA,KAACH,EAAU,IAAIM,SAAA,EACvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qBAAoBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iDAAgDC,SAAEL,EAAE,qBAClEE,EAAAA,EAAAA,KAAA,KAAGE,UAAU,kBAAiBC,SACzBL,EACG,sGAKXiB,IAAwBf,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,UAAS5B,SAAEY,EAAqBiB,UAEvEhB,IACGhB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,SAAS7B,UAAU,OAAMC,SACnCa,KAIPF,IACET,EAAAA,EAAAA,MAAC4B,EAAAA,EAAY,CAACC,SAzBZC,IACd1B,GAAS2B,EAAAA,EAAAA,IAAeD,EAAmB,UAAG,EAwBAE,SAAUhB,EAAelB,SAAA,EACvDH,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CACNC,MAAOzC,EAAE,YACT0C,KAAK,OACLC,KAAK,WACLC,YAAa5C,EAAE,uBACf6C,eAAgB,UAGpB3C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBC,UAClCH,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,CAACb,QAAQ,UAAUS,KAAK,SAASK,SAAUhC,EAAQV,SACrDL,EAAE,qBAMxB,C","sources":["pages/account/ForgetPassword.js"],"sourcesContent":["// @flow\nimport React, { useEffect } from 'react';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//actions\nimport { resetAuth, forgotPassword } from '../../redux/actions';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/';\n\nimport AccountLayout from './AccountLayout';\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Row className=\"mt-3\">\n            <Col className=\"text-center\">\n                <p className=\"text-muted\">\n                    {t('Back to')}{' '}\n                    <Link to={'/account/login'} className=\"text-muted ms-1\">\n                        <b>{t('Log In')}</b>\n                    </Link>\n                </p>\n            </Col>\n        </Row>\n    );\n};\n\nconst ForgetPassword = (): React$Element<any> => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    const { loading, passwordReset, resetPasswordSuccess, error } = useSelector((state) => ({\n        loading: state.Auth.loading,\n        user: state.Auth.user,\n        error: state.Auth.error,\n        passwordReset: state.Auth.passwordReset,\n        resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n    }));\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            username: yup.string().required(t('Please enter Username')),\n        })\n    );\n\n    /*\n     * handle form submission\n     */\n    const onSubmit = (formData) => {\n        dispatch(forgotPassword(formData['username']));\n    };\n\n    return (\n        <>\n            <AccountLayout bottomLinks={<BottomLink />}>\n                <div className=\"text-center m-auto\">\n                    <h4 className=\"text-dark-50 text-center mt-0 font-weight-bold\">{t('Reset Password')}</h4>\n                    <p className=\"text-muted mb-4\">\n                        {t(\n                            \"Enter your email address and we'll send you an email with instructions to reset your password\"\n                        )}\n                    </p>\n                </div>\n\n                {resetPasswordSuccess && <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>}\n\n                {error && (\n                    <Alert variant=\"danger\" className=\"my-2\">\n                        {error}\n                    </Alert>\n                )}\n\n                {!passwordReset && (\n                    <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\n                        <FormInput\n                            label={t('Username')}\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder={t('Enter your Username')}\n                            containerClass={'mb-3'}\n                        />\n\n                        <div className=\"mb-3 mb-0 text-center\">\n                            <Button variant=\"success\" type=\"submit\" disabled={loading}>\n                                {t('Submit')}\n                            </Button>\n                        </div>\n                    </VerticalForm>\n                )}\n            </AccountLayout>\n        </>\n    );\n};\n\nexport default ForgetPassword;\n"],"names":["BottomLink","t","useTranslation","_jsx","Row","className","children","Col","_jsxs","Link","to","ForgetPassword","dispatch","useDispatch","useEffect","resetAuth","loading","passwordReset","resetPasswordSuccess","error","useSelector","state","Auth","user","schemaResolver","yupResolver","yup","shape","username","required","_Fragment","AccountLayout","bottomLinks","Alert","variant","message","VerticalForm","onSubmit","formData","forgotPassword","resolver","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}
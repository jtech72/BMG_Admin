{"version":3,"file":"static/js/3351.860098d2.chunk.js","mappings":"uRAkBA,MAAMA,EAAaA,KACf,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KAEd,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,OAAMC,UACjBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACF,UAAU,cAAaC,UACxBE,EAAAA,EAAAA,MAAA,KAAGH,UAAU,aAAYC,SAAA,CACpBL,EAAE,WAAY,KACfE,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,iBAAkBL,UAAU,kBAAiBC,UACnDH,EAAAA,EAAAA,KAAA,KAAAG,SAAIL,EAAE,oBAIhB,EA8Ed,EA1EuBU,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,EAAEZ,IAAMC,EAAAA,EAAAA,MAEdY,EAAAA,EAAAA,YAAU,KACNF,GAASG,EAAAA,EAAAA,KAAY,GACtB,CAACH,IAEJ,MAAM,QAAEI,EAAO,cAAEC,EAAa,qBAAEC,EAAoB,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,IAAK,CAC9EL,QAASK,EAAMC,KAAKN,QACpBO,KAAMF,EAAMC,KAAKC,KACjBJ,MAAOE,EAAMC,KAAKH,MAClBF,cAAeI,EAAMC,KAAKL,cAC1BC,qBAAsBG,EAAMC,KAAKJ,yBAM/BM,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,SAAUF,EAAAA,KAAaG,SAAS5B,EAAE,6BAW1C,OACIE,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAAxB,UACIE,EAAAA,EAAAA,MAACuB,EAAAA,EAAa,CAACC,aAAa7B,EAAAA,EAAAA,KAACH,EAAU,IAAIM,SAAA,EACvCE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qBAAoBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iDAAgDC,SAAEL,EAAE,qBAClEE,EAAAA,EAAAA,KAAA,KAAGE,UAAU,kBAAiBC,SACzBL,EACG,sGAKXiB,IAAwBf,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,UAAS5B,SAAEY,EAAqBiB,UAEvEhB,IACGhB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,QAAQ,SAAS7B,UAAU,OAAMC,SACnCa,KAIPF,IACET,EAAAA,EAAAA,MAAC4B,EAAAA,EAAY,CAACC,SAzBZC,IACd1B,GAAS2B,EAAAA,EAAAA,IAAeD,EAAmB,UAAG,EAwBAE,SAAUhB,EAAelB,SAAA,EACvDH,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CACNC,MAAOzC,EAAE,YACT0C,KAAK,OACLC,KAAK,WACLC,YAAa5C,EAAE,uBACf6C,eAAgB,UAGpB3C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBC,UAClCH,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,CAACb,QAAQ,UAAUS,KAAK,SAASK,SAAUhC,EAAQV,SACrDL,EAAE,qBAMxB,C","sources":["pages/account/ForgetPassword.js"],"sourcesContent":["// @flow\r\nimport React, { useEffect } from 'react';\r\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//actions\r\nimport { resetAuth, forgotPassword } from '../../redux/actions';\r\n\r\n// components\r\nimport { VerticalForm, FormInput } from '../../components/';\r\n\r\nimport AccountLayout from './AccountLayout';\r\n\r\n/* bottom link */\r\nconst BottomLink = () => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Row className=\"mt-3\">\r\n            <Col className=\"text-center\">\r\n                <p className=\"text-muted\">\r\n                    {t('Back to')}{' '}\r\n                    <Link to={'/account/login'} className=\"text-muted ms-1\">\r\n                        <b>{t('Log In')}</b>\r\n                    </Link>\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nconst ForgetPassword = (): React$Element<any> => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        dispatch(resetAuth());\r\n    }, [dispatch]);\r\n\r\n    const { loading, passwordReset, resetPasswordSuccess, error } = useSelector((state) => ({\r\n        loading: state.Auth.loading,\r\n        user: state.Auth.user,\r\n        error: state.Auth.error,\r\n        passwordReset: state.Auth.passwordReset,\r\n        resetPasswordSuccess: state.Auth.resetPasswordSuccess,\r\n    }));\r\n\r\n    /*\r\n     * form validation schema\r\n     */\r\n    const schemaResolver = yupResolver(\r\n        yup.object().shape({\r\n            username: yup.string().required(t('Please enter Username')),\r\n        })\r\n    );\r\n\r\n    /*\r\n     * handle form submission\r\n     */\r\n    const onSubmit = (formData) => {\r\n        dispatch(forgotPassword(formData['username']));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AccountLayout bottomLinks={<BottomLink />}>\r\n                <div className=\"text-center m-auto\">\r\n                    <h4 className=\"text-dark-50 text-center mt-0 font-weight-bold\">{t('Reset Password')}</h4>\r\n                    <p className=\"text-muted mb-4\">\r\n                        {t(\r\n                            \"Enter your email address and we'll send you an email with instructions to reset your password\"\r\n                        )}\r\n                    </p>\r\n                </div>\r\n\r\n                {resetPasswordSuccess && <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>}\r\n\r\n                {error && (\r\n                    <Alert variant=\"danger\" className=\"my-2\">\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                {!passwordReset && (\r\n                    <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\r\n                        <FormInput\r\n                            label={t('Username')}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            placeholder={t('Enter your Username')}\r\n                            containerClass={'mb-3'}\r\n                        />\r\n\r\n                        <div className=\"mb-3 mb-0 text-center\">\r\n                            <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                                {t('Submit')}\r\n                            </Button>\r\n                        </div>\r\n                    </VerticalForm>\r\n                )}\r\n            </AccountLayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"names":["BottomLink","t","useTranslation","_jsx","Row","className","children","Col","_jsxs","Link","to","ForgetPassword","dispatch","useDispatch","useEffect","resetAuth","loading","passwordReset","resetPasswordSuccess","error","useSelector","state","Auth","user","schemaResolver","yupResolver","yup","shape","username","required","_Fragment","AccountLayout","bottomLinks","Alert","variant","message","VerticalForm","onSubmit","formData","forgotPassword","resolver","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}
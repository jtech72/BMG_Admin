{"version":3,"file":"static/js/8041.ef70c433.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","pages/bmg/enquiry/Enquiry.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\n\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\n    useEffect(() => {\n        // Ensure pageIndex stays within bounds when totalPages changes\n        if (pageIndex > totalPages) {\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\n        }\n    }, [pageIndex, totalPages, setPageIndex]);\n\n    return (\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\n            {/* Page Size Selection */}\n            <div className=\"d-inline-block me-3\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={pageSize}\n                    onChange={(e) => {\n                        const newSize = Number(e.target.value);\n                        onChangePageSize(newSize);\n                        setPageIndex(1); // Reset to first page\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {[10, 20, 50, 100].map((size) => (\n                        <option key={size} value={size}>\n                            {size}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Page Info */}\n            <span className=\"me-3\">\n                Page{' '}\n                <strong>\n                    {pageIndex} of {totalPages}\n                </strong>\n            </span>\n\n            {/* Go to Page Input */}\n            <label>Go to page: </label>\n            <input\n                type=\"number\"\n                placeholder={`${pageIndex}`}\n                min=\"1\"\n                max={totalPages}\n                onChange={(e) => {\n                    const enteredPage = Number(e.target.value);\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\n                        setPageIndex(enteredPage);\n                    }\n                }}\n                className=\"form-control ms-1 d-inline-block\"\n                style={{ width: '80px' }}\n            />\n\n            {/* Pagination Controls */}\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\n                {/* Previous Button */}\n                {pageIndex > 1 && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Previous\n                        </Link>\n                    </li>\n                )}\n\n                {/* Page Number Buttons */}\n                {Array.from({ length: totalPages }).map((_, i) => {\n                    const page = i + 1; // Adjust index to start from 1\n                    const isCurrentPage = page === pageIndex;\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\n                    const isEdgePage = page === 1 || page === totalPages;\n\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\n                        return (\n                            <li\n                                key={page}\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\n                                onClick={() => setPageIndex(page)}>\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        );\n                    } else if (\n                        (page === 2 && pageIndex >= 5) ||\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\n                    ) {\n                        return (\n                            <li key={page} className=\"page-item disabled\">\n                                <Link to=\"#\" className=\"page-link px-0\">\n                                    ...\n                                </Link>\n                            </li>\n                        );\n                    }\n\n                    return null;\n                })}\n\n                {/* Next Button */}\n                {pageIndex < totalPages && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Next\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path} >\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import { useEffect, useState } from 'react';\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PageTitle from '../../../helpers/PageTitle';\nimport { Loading } from '../../../helpers/loader/Loading';\nimport { getEnquiryActions } from '../../../redux/actions';\nimport Pagination from '../../../helpers/Pagination'\nconst Enquiry = () => {\n    const store = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState('');\n    const EnquiryData = store?.enquiryDataReducer?.enquiryData?.contacts;\n\n    console.log(store?.enquiryDataReducer?.enquiryData)\n    const EnquiryLoading = store?.enquiryDataReducer?.loading\n\n\n    const TotalRecords = store?.enquiryDataReducer?.enquiryData?.totalRecords;\n    const [pageIndex, setPageIndex] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\n\n    useEffect(() => {\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\n    }, [TotalRecords, pageSize]);\n    useEffect(() => {\n        dispatch(getEnquiryActions({ search: search, limit: pageSize, page: pageIndex }));\n    }, [dispatch, pageIndex, pageSize, search]);\n\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    {\n                        label: `Enquiries`,\n                        path: '/bmg/enquiry',\n                        active: true,\n                    },\n                ]}\n                title={`Enquiries`}\n            />\n            <Row>\n                <Col xs={12}>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center\">\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\n                                    Total Enquiries: {TotalRecords || 0}\n                                </span>\n                                <div className=\"d-flex\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control w-auto me-1\"\n                                        placeholder=\"Search...\"\n                                        value={search}\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                    {search && (\n                                        <i\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\n                                            onClick={() => setSearch(\"\")}\n                                            style={{ cursor: \"pointer\" }}\n                                        ></i>\n                                    )}\n                                </div>\n                            </div>\n\n                            {EnquiryLoading ? (\n                                <>\n                                    <Loading />\n                                </>\n                            ) : (\n                                <>\n                                    {EnquiryData && EnquiryData?.length > 0 ? (\n\n                                        <>\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table table-striped bg-white \">\n                                                    <thead>\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                                            <th scope=\"col\">Full Name</th>\n                                                            <th scope=\"col\">Email</th>\n                                                            <th scope=\"col\">Contact No</th>\n                                                            <th scope=\"col\">Message</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {EnquiryData?.map((data, index) => (\n                                                            <tr\n                                                                key={index}\n                                                                className=\"text-dark fw-bold text-nowrap\">\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                {console.log({ data })}\n                                                                <td className='text-uppercase fw-bold'>\n                                                                    {data?.fullName ? (\n                                                                        <span>{data?.fullName} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n                                                                <td className='fw-bold text-info'>\n                                                                    {data?.email ? (\n                                                                        <span>{data?.email} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n                                                                <td className='fw-bold text-warning'>\n                                                                    {data?.phoneNumber ? (\n                                                                        <span>{data?.phoneNumber} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n                                                                <td className='fw-bold text-primary' style={{cursor:'pointer'}}>\n                                                                    <OverlayTrigger\n                                                                        placement=\"left\"\n                                                                        overlay={\n                                                                            <Tooltip id=\"overlay-example\">\n                                                                                {data?.message}\n                                                                            </Tooltip>\n                                                                        }>\n                                                                        <b>\n                                                                        {data?.message ? (\n                                                                        <span>{data?.message.slice(0,50)} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                        </b>\n                                                                    </OverlayTrigger>\n                                                                </td>\n                                                            </tr>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </>\n                                    ) : (\n                                        <div\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\n                                            style={{ height: '30vh' }}>\n                                            <code className=\"fs-4\">\n                                                No Enquiries found.{' '}\n                                            </code>\n                                        </div>\n                                    )}\n                                </>\n                            )}\n                            <Pagination\n                                pageIndex={pageIndex}\n                                pageSize={pageSize}\n                                totalPages={totalPages}\n                                setPageIndex={setPageIndex}\n                                onChangePageSize={setPageSize}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row >\n        </>\n    )\n}\n\nexport default Enquiry\n"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Enquiry","_store$enquiryDataRed","_store$enquiryDataRed2","_store$enquiryDataRed3","_store$enquiryDataRed4","_store$enquiryDataRed5","_store$enquiryDataRed6","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","EnquiryData","enquiryDataReducer","enquiryData","contacts","console","log","EnquiryLoading","loading","TotalRecords","totalRecords","setPageSize","setTotalPages","ceil","getEnquiryActions","limit","_Fragment","PageTitle","xs","Card","boxShadow","Body","cursor","Loading","scope","data","fullName","email","phoneNumber","OverlayTrigger","placement","overlay","Tooltip","id","message","slice","height","Pagination"],"sourceRoot":""}
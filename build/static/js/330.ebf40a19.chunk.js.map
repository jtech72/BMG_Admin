{"version":3,"file":"static/js/330.ebf40a19.chunk.js","mappings":"qRAoCA,MA0FA,EA1FcA,KACV,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MACXC,EAAcF,EAASG,OAASH,EAASG,MAAMC,KAAOJ,EAASG,MAAMC,KAAKC,SAAW,KAE3FC,EAAAA,EAAAA,YAAU,KACNR,GAASS,EAAAA,EAAAA,KAAY,GACtB,CAACT,IAEJ,MAAM,QAAEU,EAAO,aAAEC,EAAY,KAAEC,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,KAAaT,IAAK,CAC7DK,QAASL,EAAMU,KAAKL,QACpBE,KAAMP,EAAMU,KAAKH,KACjBC,MAAOR,EAAMU,KAAKF,MAClBF,aAAcN,EAAMU,KAAKJ,iBAMvBK,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,MAAOF,EAAAA,KAAaG,SAASvB,EAAE,uBAC/BwB,SAAUJ,EAAAA,KAAaG,SAASvB,EAAE,6BAa1C,OACIyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACMd,GAAgBC,KAASc,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAIxB,EAAayB,SAAO,KAG7DN,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAAAL,SAAA,EACVF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,0BAAyBN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,wCAAuCN,SAAE3B,EAAE,aACzD4B,EAAAA,EAAAA,KAAA,KAAGK,UAAU,kBAAiBN,SACzB3B,EAAE,qEAIVe,IACGa,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACC,QAAQ,SAASF,UAAU,OAAMN,SACnCZ,KAITU,EAAAA,EAAAA,MAACW,EAAAA,EAAY,CACTC,SA1BEC,IACdC,QAAQC,IAAI,sBAEZtC,GAASuC,EAAAA,EAAAA,IAAUH,EAAgB,MAAGA,EAAmB,UAAG,EAwBhDI,SAAUxB,EACdS,SAAA,EAEIC,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CACNC,MAAO5C,EAAE,SACT6C,KAAK,OACLC,KAAK,QACLC,YAAa/C,EAAE,oBACfgD,eAAgB,UAEpBpB,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CACNC,MAAO5C,EAAE,YACT6C,KAAK,WACLC,KAAK,WACLC,YAAa/C,EAAE,uBACfgD,eAAgB,UAMpBpB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wBAAuBN,UAClCC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACC,MAAO,CAACC,gBAAgB,WAAYN,KAAK,SAASO,SAAUxC,EAAQe,SAC1Ef,GAA+BgB,EAAAA,EAAAA,KAACyB,EAAAA,GAAa,KAAnCzB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SAAG3B,EAAE,wBAK9B,C","sources":["pages/account/Login.js"],"sourcesContent":["// @flow\nimport React, { useEffect } from 'react';\nimport { Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link, Navigate, useLocation } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Logo } from '../../helpers/image';\n//actions\nimport { resetAuth, loginUser } from '../../redux/actions';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/';\n\nimport AccountLayout from './AccountLayout';\nimport { ButtonLoading } from '../../helpers/loader/Loading';\n\n/* bottom link of account pages */\n// const BottomLink = () => {\n//     const { t } = useTranslation();\n\n//     return (\n//         <Row className=\"mt-3\">\n//             <Col className=\"text-center\">\n//                 <p className=\"text-muted\">\n//                     {t(\"Don't have an account?\")}{' '}\n//                     <Link to={'/account/register'} className=\"text-muted ms-1\">\n//                         <b>{t('Sign Up')}</b>\n//                     </Link>\n//                 </p>\n//             </Col>\n//         </Row>\n//     );\n// };\n\nconst Login = (): React$Element<any> => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const location = useLocation();\n    const redirectUrl = location.state && location.state.from ? location.state.from.pathname : '/';\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    const { loading, userLoggedIn, user, error } = useSelector((state) => ({\n        loading: state.Auth.loading,\n        user: state.Auth.user,\n        error: state.Auth.error,\n        userLoggedIn: state.Auth.userLoggedIn,\n    }));\n\n    /*\n    form validation schema\n    */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            email: yup.string().required(t('Please enter email')),\n            password: yup.string().required(t('Please enter Password')),\n        })\n    );\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData) => {\n        console.log(\"======login called\");\n\n        dispatch(loginUser(formData['email'], formData['password']));\n    };\n\n    return (\n        <>\n            {(userLoggedIn || user) && <Navigate to={redirectUrl} replace />}\n\n            {/* <AccountLayout bottomLinks={<BottomLink />}> */}\n            <AccountLayout>\n                <div className=\"text-center w-75 m-auto\">\n                    <h4 className=\"text-dark-50 text-center mt-0 fw-bold\">{t('Log In')}</h4>\n                    <p className=\"text-muted mb-4\">\n                        {t('Enter your email address and password to access admin panel.')}\n                    </p>\n                </div>\n\n                {error && (\n                    <Alert variant=\"danger\" className=\"my-2\">\n                        {error}\n                    </Alert>\n                )}\n\n                <VerticalForm\n                    onSubmit={onSubmit}\n                    resolver={schemaResolver}\n                //  defaultValues={{ email: 'test', password: 'test' }}\n                >\n                    <FormInput\n                        label={t('Email')}\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder={t('Enter your email')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('Password')}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder={t('Enter your password')}\n                        containerClass={'mb-3'}>\n                        {/* <Link to=\"/account/forget-password\" className=\"text-muted float-end\">\n                            <small>{t('Forgot your password?')}</small>\n                        </Link> */}\n                    </FormInput>\n\n                    <div className=\"mb-3 mb-0 text-center\">\n                        <Button style={{backgroundColor:'#008003'}} type=\"submit\" disabled={loading}>\n                        {!loading ?(<>{t('Log In')}</>):(<ButtonLoading/>)}    \n                        </Button>\n                    </div>\n                </VerticalForm>\n            </AccountLayout>\n        </>\n    );\n};\n\nexport default Login;\n"],"names":["Login","t","useTranslation","dispatch","useDispatch","location","useLocation","redirectUrl","state","from","pathname","useEffect","resetAuth","loading","userLoggedIn","user","error","useSelector","Auth","schemaResolver","yupResolver","yup","shape","email","required","password","_jsxs","_Fragment","children","_jsx","Navigate","to","replace","AccountLayout","className","Alert","variant","VerticalForm","onSubmit","formData","console","log","loginUser","resolver","FormInput","label","type","name","placeholder","containerClass","Button","style","backgroundColor","disabled","ButtonLoading"],"sourceRoot":""}
{"version":3,"file":"static/js/292.0e9c0607.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","pages/bmg/products/Products.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex is within bounds when totalPages changes\r\n        if (pageIndex >= totalPages) {\r\n            setPageIndex(Math.max(0, totalPages - 1));\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(0);\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    <option value={10}>10</option>\r\n                    <option value={20}>20</option>\r\n                    <option value={50}>50</option>\r\n                    <option value={100}>100</option>\r\n                </select>\r\n            </div>\r\n\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex + 1} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            <label>Go to page : </label>\r\n            {/* <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex + 1}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = e.target.value;\r\n                    setPageIndex((prev) => {\r\n                        const newPage = enteredPage ? Math.max(1, Math.min(enteredPage, totalPages)) - 1 : 0;\r\n                        return newPage;\r\n                    });\r\n                }}\r\n                className=\"form-control  ms-1 d-inline-block\"\r\n                style={{\r\n                    width: '80px',\r\n                }}\r\n            /> */}\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex + 1}`}\r\n                min=\"1\"\r\n                max={Number(totalPages)} // Convert totalPages to a number\r\n                onChange={(e) => {\r\n                    const enteredPage = e.target.value;\r\n                    setPageIndex((prev) => {\r\n                        const newPage = enteredPage ? Math.max(1, Math.min(enteredPage, totalPages)) - 1 : 0;\r\n                        return newPage;\r\n                    });\r\n                }}\r\n                className=\"form-control  ms-1 d-inline-block\"\r\n                style={{\r\n                    width: '80px',\r\n                }}\r\n            />\r\n\r\n\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {pageIndex > 0 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {Array.from({ length: totalPages }).map((_, page) => {\r\n                    const isFirstPage = page === 0;\r\n                    const isLastPage = page === totalPages - 1;\r\n                    const isCurrentPage = page === pageIndex;\r\n\r\n                    if (\r\n                        totalPages <= 5 ||\r\n                        isFirstPage ||\r\n                        isLastPage ||\r\n                        (page >= pageIndex - 1 && page <= pageIndex + 1)\r\n                    ) {\r\n                        return (\r\n                            <li\r\n                                key={`page-${page + 1}`}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page + 1}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((isFirstPage && pageIndex >= 4) || (isLastPage && pageIndex <= totalPages - 3)) {\r\n                        return (\r\n                            <li key={`page-${page + 1}`} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {pageIndex < totalPages - 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <RotatingLines\r\n                strokeColor=\"grey\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"96\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"30\"\r\n                width=\"30\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading };\r\n","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getProductActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination'\r\nconst Products = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const ProductsData = store?.productDataReducer?.productData?.products\r\n\r\n    console.log(ProductsData)\r\n    const ProductsLoading = store?.productDataReducer?.loading\r\n\r\n\r\n    const TotalRecords = store?.productDataReducer?.productData?.totalRecords;\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n    useEffect(() => {\r\n        dispatch(getProductActions({ search: search, limit: pageSize, page: pageIndex }));\r\n    }, [dispatch, pageIndex, pageSize, search]);\r\n\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Format keys: Remove underscores, convert camelCase to words\r\n    const formatKey = (key) => {\r\n        return key\r\n            .replace(/_/g, \" \") // Replace underscores\r\n            .replace(/([a-z])([A-Z])/g, \"$1 $2\") // Convert camelCase\r\n            .replace(/\\b\\w/g, (char) => char.toUpperCase()); // Capitalize first letter\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: `Product's`, path: '/bmg/products' },\r\n                    {\r\n                        label: 'Product',\r\n                        path: '/bmg/products',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={`Product's`}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\r\n                    >\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Product's: {ProductsData?.length || 0}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch(\"\")}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {ProductsLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {ProductsData && ProductsData.length > 0 ? (\r\n\r\n                                        <>\r\n                                            <div className=\"d-flex justify-content-center table-responsive\">\r\n                                                <table className=\"table table-striped bg-white \">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\r\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                                                            <th scope=\"col\">Product Id</th>\r\n                                                            <th scope=\"col\">Serial No</th>\r\n                                                            <th scope=\"col\">Product Name</th>\r\n                                                            <th scope=\"col\">Brand</th>\r\n                                                            <th scope=\"col\">Ask Price</th>\r\n                                                            <th scope=\"col\">Bidding Amount</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {ProductsData?.map((data, index) => (\r\n                                                            <tr\r\n                                                                key={index}\r\n                                                                className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                {console.log({ data })}\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.productGenerateId ? (\r\n                                                                        <span>{data?.productGenerateId} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-info'>\r\n                                                                    {data?.Serial_No ? (\r\n                                                                        <span>{data?.Serial_No} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td\r\n                                                                    className=\"text-uppercase fw-bold\"\r\n                                                                    style={{ cursor: 'pointer', color: 'crimson', transition: 'color 0.3s ease-in-out' }}\r\n                                                                    onMouseOver={(e) => e.target.style.color = 'rgb(10 207 151)'}\r\n                                                                    onMouseOut={(e) => e.target.style.color = 'crimson'}\r\n                                                                >\r\n                                                                    <OverlayTrigger\r\n                                                                        placement=\"left\"\r\n                                                                        overlay={\r\n                                                                            <Tooltip id=\"overlay-example\">\r\n                                                                                View Detail's\r\n                                                                            </Tooltip>\r\n                                                                        }>\r\n                                                                        <b>\r\n                                                                            {data?.Product_Name ? (\r\n                                                                                <span onClick={() => handleProductClick(data)}\r\n                                                                                >{data?.Product_Name} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </b>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-primary'>\r\n                                                                    {data?.Brand ? (\r\n                                                                        <span>{data?.Brand} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.Ask_Price ? (\r\n                                                                        <span>$ {data?.Ask_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.Start_Bid_Price ? (\r\n                                                                        <span>$ {data?.Start_Bid_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">\r\n                                                No Product's found.\r\n                                            </code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <Pagination\r\n                                pageIndex={pageIndex}\r\n                                pageSize={pageSize}\r\n                                totalPages={totalPages}\r\n                                setPageIndex={setPageIndex}\r\n                                onChangePageSize={setPageSize}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className='px-2 py-1 text-light' style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i className=\"mdi mdi-close fs-3\" onClick={() => setShowModal(false)} style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={3000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: \"400px\",\r\n                                                    objectFit: \"contain\",\r\n                                                    boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            {/* Product Details */}\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) =>\r\n                                        ![\"_id\", \"createdAt\", \"updatedAt\", \"image\"].includes(key) &&\r\n                                        !/^[0-9a-fA-F]{24}$/.test(value) && value // Remove ID fields & empty values\r\n                                    )\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <strong className=\"text-muted\">{formatKey(key)}</strong>\r\n                                            <div className=\"fw-bold\">{typeof value === \"object\" ? JSON.stringify(value) : value}</div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","type","placeholder","min","enteredPage","prev","style","width","onClick","Link","to","Array","from","length","map","_","page","isFirstPage","isLastPage","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","Products","_store$productDataRed","_store$productDataRed2","_store$productDataRed3","_store$productDataRed4","_store$productDataRed5","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","ProductsData","productDataReducer","productData","products","console","log","ProductsLoading","loading","TotalRecords","totalRecords","setPageSize","setTotalPages","ceil","getProductActions","limit","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","key","replace","char","toUpperCase","_Fragment","PageTitle","xs","Card","boxShadow","Body","cursor","scope","data","productGenerateId","Serial_No","transition","onMouseOver","onMouseOut","OverlayTrigger","placement","overlay","Tooltip","id","Product_Name","product","Brand","Ask_Price","Start_Bid_Price","Pagination","Modal","show","onHide","centered","size","Header","backgroundColor","Title","Container","image","Carousel","interval","img","src","alt","maxHeight","objectFit","Object","entries","filter","includes","test","_ref2","md","JSON","stringify","fn","deps","isFirst","useRef","current","CarouselCaption","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CarouselItem","finalClassName","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","keyboard","onKeyDown","pause","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","tagName","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","Anchor","assign","Caption"],"sourceRoot":""}
{"version":3,"file":"static/js/1673.da630d3e.chunk.js","mappings":"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","sources":["pages/bmg/dashboard/Dashboard.js","helpers/Pagination.js","helpers/PageTitle.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, Table, Badge, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { getDashboardActions, getRecentRegistrationsForDashboardActions } from '../../../redux/actions';\r\nimport { FaUsers, FaLayerGroup, FaTags, FaUserShield, FaGavel } from 'react-icons/fa';\r\nimport { AiOutlineLineChart } from 'react-icons/ai';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n    const store = useSelector((state) => state);\r\n    const dashboardData = store?.dashboardDataReducer?.dashboardData;\r\n    const getRecentRegistrationsForDashboard = store?.getRecentRegistrationsForDashboardReducer;\r\n    const dashboardLoading = store?.dashboardDataReducer?.loading;\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(5);\r\n    const [hoveredCard, setHoveredCard] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDashboardActions());\r\n        dispatch(getRecentRegistrationsForDashboardActions({ page, limit }));\r\n    }, [dispatch, page, limit]);\r\n\r\n    const dashboardItems = [\r\n        { title: 'Total Users', value: dashboardData?.totalUser || 0, icon: <FaUsers />, color: 'primary-subtle', redirect: '/bmg/users' },\r\n        { title: 'Total Categories', value: dashboardData?.totalCategory || 0, icon: <FaLayerGroup />, color: 'success-subtle', redirect: '/bmg/categories' },\r\n        { title: 'Total Sub-Categories', value: dashboardData?.totalSubCategory || 0, icon: <FaTags />, color: 'info-subtle', redirect: '/bmg/subcategories' },\r\n        { title: 'Total Admins', value: dashboardData?.totalAdmin || 0, icon: <FaUserShield />, color: 'warning-subtle', redirect: '/bmg/admins' },\r\n        { title: 'Auction', value: dashboardData?.totalLiveAuction || 0, icon: <FaGavel />, color: 'danger-subtle', redirect: '/bmg/auctions' },\r\n        { title: 'Sales', value: dashboardData?.totalUpComingAuction || 0, icon: <AiOutlineLineChart />, color: 'secondary-subtle', redirect: '/bmg/sales' },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <style>\r\n                {`\r\n          .dashboard-card {\r\n            transition: all 0.3s ease;\r\n            border-radius: 12px;\r\n            overflow: hidden;\r\n            position: relative;\r\n            border: none;\r\n          }\r\n\r\n          .dashboard-card:hover {\r\n            transform: translateY(-5px);\r\n            box-shadow: 0 8px 24px rgba(0,0,0,0.15) !important;\r\n          }\r\n\r\n          .card-icon {\r\n            opacity: 0.3;\r\n            position: absolute;\r\n            right: 20px;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n            font-size: 3.5rem;\r\n          }\r\n\r\n          .table-container {\r\n            background: white;\r\n            border-radius: 12px;\r\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n            padding: 1.5rem;\r\n          }\r\n\r\n          .table-hover tr:hover {\r\n            background-color: #f8f9fa;\r\n            transition: background-color 0.2s ease;\r\n          }\r\n\r\n          .table-header {\r\n            background: #f1f3f5;\r\n            color: #495057;\r\n          }\r\n\r\n          .role-badge {\r\n            font-size: 0.85rem;\r\n            padding: 0.4em 0.8em;\r\n          }\r\n\r\n          .pagination-container {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin-top: 1.5rem;\r\n            gap: 0.5rem;\r\n          }\r\n\r\n          .pagination-container .page-item .page-link {\r\n            border-radius: 8px;\r\n            transition: all 0.2s ease;\r\n            color: #495057;\r\n            border: 1px solid #dee2e6;\r\n          }\r\n\r\n          .pagination-container .page-item.active .page-link {\r\n            background-color: #0d6efd;\r\n            border-color: #0d6efd;\r\n            color: white;\r\n          }\r\n\r\n          .pagination-container .page-item .page-link:hover {\r\n            background-color: #e9ecef;\r\n            border-color: #dee2e6;\r\n          }\r\n\r\n          .redirect-btn {\r\n            font-size: 0.9rem;\r\n            padding: 0.4rem 0.8rem;\r\n            border-radius: 8px;\r\n            transition: all 0.2s ease;\r\n          }\r\n\r\n          .redirect-btn:hover {\r\n            transform: scale(1.05);\r\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n          }\r\n\r\n          @media (max-width: 768px) {\r\n            .card-icon {\r\n              font-size: 2.5rem;\r\n            }\r\n\r\n            .dashboard-card h2 {\r\n              font-size: 1.5rem;\r\n            }\r\n\r\n            .table-container {\r\n              padding: 1rem;\r\n            }\r\n\r\n            .redirect-btn {\r\n              font-size: 0.8rem;\r\n              padding: 0.3rem 0.6rem;\r\n            }\r\n          }\r\n        `}\r\n            </style>\r\n\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'BMG Dashboard', path: '/bmg/dashboard' },\r\n                    { label: 'Dashboard', path: '/bmg/dashboard', active: true },\r\n                ]}\r\n                title={'Dashboard'}\r\n            />\r\n\r\n            {dashboardLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <>\r\n                    <Row className=\"g-4 mb-4\">\r\n                        {dashboardItems?.map((item, index) => (\r\n                            <Col key={index} md={6} lg={4}>\r\n                                <Card className={`shadow border-0 bg-${item.color} text-dark`}>\r\n                                    <Card.Body className=\"d-flex align-items-center justify-content-between\">\r\n                                        <div>\r\n                                            <h6 className=\"fw-semibold\">{item.title}</h6>\r\n                                            <h2 className=\"fw-bold\">{item.value}</h2>\r\n                                        </div>\r\n                                        <div className=\"fs-1\">{item.icon}</div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n\r\n                    <div className=\"table-container\">\r\n                        <Table hover className=\"text-center align-middle mb-0\">\r\n                            <thead className=\"table-header\">\r\n                                <tr className=\"text-nowrap\">\r\n                                    <th className=\"py-3\">#</th>\r\n                                    <th className=\"text-start\">Name</th>\r\n                                    <th className=\"text-start\">Email</th>\r\n                                    <th className=\"text-start\">Phone Number</th>\r\n                                    <th className=\"text-start\">Role</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getRecentRegistrationsForDashboard?.dashboardData?.allUsers?.map((data, index) => (\r\n                                    <tr\r\n                                        style={{ cursor: 'pointer' }}\r\n                                        key={data._id || index}\r\n                                    // onClick={() => navigate(`/bmg/user/${data._id}`)}\r\n                                    >\r\n                                        <td className=\"fw-medium\">{(page - 1) * limit + index + 1}</td>\r\n                                        <td className=\"text-start\">\r\n                                            {data?.name ? `${data?.name} ${data?.lastName || ''}` : <span className=\"text-muted\">N/A</span>}\r\n                                        </td>\r\n                                        <td className=\"text-start\">\r\n                                            {data?.email ? (\r\n                                                <a href={`mailto:${data.email}`} className=\"text-decoration-none\">\r\n                                                    {data.email}\r\n                                                </a>\r\n                                            ) : (\r\n                                                <span className=\"text-muted\">N/A</span>\r\n                                            )}\r\n                                        </td>\r\n                                        <td className=\"text-start\">\r\n                                            {data?.phoneNumber ? (\r\n                                                <a href={`tel:${data.phoneNumber}`} className=\"text-decoration-none\">\r\n                                                    {data.phoneNumber}\r\n                                                </a>\r\n                                            ) : (\r\n                                                <span className=\"text-muted\">N/A</span>\r\n                                            )}\r\n                                        </td>\r\n                                        <td className=\"text-start\">\r\n                                            <Badge\r\n                                                className=\"role-badge\"\r\n                                                bg={data?.role === 'admin' ? 'primary' : data?.role === 'user' ? 'success' : 'secondary'}\r\n                                            >\r\n                                                {data?.role?.charAt(0).toUpperCase() + data?.role?.slice(1)}\r\n                                            </Badge>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        {/* <div className=\"pagination-container\">\r\n                            <Pagination\r\n                                pageIndex={page}\r\n                                pageSize={limit}\r\n                                totalPages={getRecentRegistrationsForDashboard?.dashboardData?.totalPages || 1}\r\n                                setPageIndex={setPage}\r\n                                onChangePageSize={setLimit}\r\n                            />\r\n                        </div> */}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"names":["Dashboard","_store$dashboardDataR","_store$dashboardDataR2","_getRecentRegistratio","_getRecentRegistratio2","store","useSelector","state","dashboardData","dashboardDataReducer","getRecentRegistrationsForDashboard","getRecentRegistrationsForDashboardReducer","dashboardLoading","loading","dispatch","useDispatch","page","setPage","useNavigate","useState","limit","setLimit","hoveredCard","setHoveredCard","useEffect","getDashboardActions","getRecentRegistrationsForDashboardActions","dashboardItems","title","value","totalUser","icon","_jsx","FaUsers","color","redirect","totalCategory","FaLayerGroup","totalSubCategory","FaTags","totalAdmin","FaUserShield","totalLiveAuction","FaGavel","totalUpComingAuction","AiOutlineLineChart","_jsxs","_Fragment","children","PageTitle","breadCrumbItems","label","path","active","Loading","Row","className","map","item","index","Col","md","lg","Card","concat","Body","Table","hover","allUsers","data","_data$role","_data$role2","style","cursor","name","lastName","email","href","phoneNumber","Badge","bg","role","charAt","toUpperCase","slice","_id","_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","Math","max","onChange","e","newSize","Number","target","size","type","placeholder","min","enteredPage","width","onClick","Link","to","Array","from","length","_","i","isCurrentPage","props","Breadcrumb","listProps","Item"],"sourceRoot":""}
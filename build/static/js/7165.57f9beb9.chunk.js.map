{"version":3,"file":"static/js/7165.57f9beb9.chunk.js","mappings":"4JAGA,MAgHA,EAhHmBA,IAA0E,IAAzE,UAAEC,EAAS,SAAEC,EAAQ,WAAEC,EAAU,aAAEC,EAAY,iBAAEC,GAAkBL,EAQnF,OAPAM,EAAAA,EAAAA,YAAU,KAEFL,EAAYE,GACZC,EAAaG,KAAKC,IAAI,EAAGL,GAC7B,GACD,CAACF,EAAWE,EAAYC,KAGvBK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qDAAoDC,SAAA,EAE/DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,OAAMC,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UACIC,MAAOX,EACPY,SAAWC,IACP,MAAMC,EAAUC,OAAOF,EAAEG,OAAOL,OAChCR,EAAiBW,GACjBZ,EAAa,EAAE,EAEnBM,UAAU,oCAAmCC,SAC5C,CAAC,GAAI,GAAI,GAAI,KAAKQ,KAAKC,IACpBR,EAAAA,EAAAA,KAAA,UAAmBC,MAAOO,EAAKT,SAC1BS,GADQA,WAQzBX,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMC,SAAA,CAAC,OACd,KACLF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CACKV,EAAU,OAAKE,SAKxBS,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SACIS,KAAK,SACLC,YAAa,GAAGrB,IAChBsB,IAAI,IACJf,IAAKL,EACLW,SAAWC,IACP,MAAMS,EAAcP,OAAOF,EAAEG,OAAOL,OAChCW,GAAe,GAAKA,GAAerB,GACnCC,EAAaoB,EACjB,EAEJd,UAAU,mCACVe,MAAO,CAAEC,MAAO,WAIpBjB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kFAAiFC,SAAA,CAE1FV,EAAY,IACTW,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAYiB,QAASA,IAAMvB,EAAaH,EAAY,GAAGU,UACjEC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAInB,UAAU,YAAWC,SAAC,eAO1CmB,MAAMC,KAAK,CAAEC,OAAQ7B,IAAcgB,KAAI,CAACc,EAAGC,KACxC,MAAMC,EAAOD,EAAI,EACXE,EAAgBD,IAASlC,EAI/B,OAAIE,GAAc,GAHIgC,GAAQlC,EAAY,GAAKkC,GAAQlC,EAAY,IACvC,IAATkC,GAAcA,IAAShC,IAIlCS,EAAAA,EAAAA,KAAA,MAEIF,UAAW,cAAa0B,EAAgB,SAAW,IACnDT,QAASA,IAAMvB,EAAa+B,GAAMxB,UAClCC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAInB,UAAU,YAAWC,SAC7BwB,KAJAA,GASH,IAATA,GAAclC,GAAa,GAC3BkC,IAAShC,EAAa,GAAKF,GAAaE,EAAa,GAGlDS,EAAAA,EAAAA,KAAA,MAAeF,UAAU,qBAAoBC,UACzCC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAInB,UAAU,iBAAgBC,SAAC,SADnCwB,GAQV,IAAI,IAIdlC,EAAYE,IACTS,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAYiB,QAASA,IAAMvB,EAAaH,EAAY,GAAGU,UACjEC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,IAAInB,UAAU,YAAWC,SAAC,gBAM7C,C,qFC7Fd,MA4BA,EA5BmB0B,IAEXzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CAAA3B,UACAC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAAA5B,UACAF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,UAAW,CAAE/B,UAAW,OAAQC,SAEvC0B,EAAMK,gBAAgBvB,KAAI,CAACwB,EAAMC,IACvBD,EAAKE,QACRjC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAWM,KAAI,CAACD,QAAM,EAAAlC,UACnBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEgC,EAAKI,SADZH,IAI7BhC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAWM,KAAI,CAAaE,KAAML,EAAKM,KAAKtC,UACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,eAAcC,SAAEgC,EAAKI,SADnBH,UAOtChC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAE0B,EAAMa,c,6OC/BnE,MA+HA,EA/HiBlD,IAA8B,IAADmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5B,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAAS3D,EACrC,MAAM4D,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,IAC/BC,GAAerD,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAAkBC,SAAC,MAClDuD,GAAe,OAALJ,QAAK,IAALA,GAA2B,QAAtBX,EAALW,EAAOK,4BAAoB,IAAAhB,OAAtB,EAALA,EAA6Be,WAAgB,OAALJ,QAAK,IAALA,GAA2B,QAAtBV,EAALU,EAAOM,4BAAoB,IAAAhB,OAAtB,EAALA,EAA6Bc,SAC/EG,EAAoB,OAALP,QAAK,IAALA,GAA2B,QAAtBT,EAALS,EAAOK,4BAAoB,IAAAd,GAAS,QAATC,EAA3BD,EAA6BM,eAAO,IAAAL,OAA/B,EAALA,EAAsCgB,OACrDC,EAAoB,OAALT,QAAK,IAALA,GAA2B,QAAtBP,EAALO,EAAOM,4BAAoB,IAAAb,GAAS,QAATC,EAA3BD,EAA6BI,eAAO,IAAAH,OAA/B,EAALA,EAAsCc,QAEpDE,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,CAC3BC,SAAU,GACVC,OAAQ,GACRN,QAAQ,IAENO,EAAaA,KACfJ,EAAO,CACHE,SAAU,GACVC,OAAQ,GACRN,QAAQ,IAEZZ,GAAM,EAGJoB,EAAgB/D,IAClB,MAAM,KAAEgE,EAAI,MAAElE,GAAUE,EAAEG,OAC1BuD,GAAQO,IAAI,IAAWA,EAAM,CAACD,GAAOlE,KAAS,GASlDP,EAAAA,EAAAA,YAAU,KACc,IAAD2E,EAAAC,EAAAC,EAAAC,EAAR,OAAPzB,QAAO,IAAPA,GAAAA,EAAS0B,MACTZ,EAAO,CACHE,UAAiB,OAAPhB,QAAO,IAAPA,GAAa,QAANsB,EAAPtB,EAAS0B,YAAI,IAAAJ,OAAN,EAAPA,EAAeN,WAAY,GACrCC,QAAe,OAAPjB,QAAO,IAAPA,GAAa,QAANuB,EAAPvB,EAAS0B,YAAI,IAAAH,OAAN,EAAPA,EAAeN,SAAU,GACjCN,OAA6B,QAAvBa,EAAS,OAAPxB,QAAO,IAAPA,GAAa,QAANyB,EAAPzB,EAAS0B,YAAI,IAAAD,OAAN,EAAPA,EAAed,cAAM,IAAAa,GAAAA,GAErC,GACD,CAAQ,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,OA8Bb,OAPA/E,EAAAA,EAAAA,YAAU,KACD4D,GAA6B,MAAjBG,GAAyC,MAAjBE,IACrCX,GAAS0B,EAAAA,EAAAA,IAAc,CAAEC,OAAQ,GAAIC,MAAO,GAAIrD,KAAM,MACtD0C,IACJ,GACD,CAACR,EAAcE,EAAcL,EAASN,KAGrCnD,EAAAA,EAAAA,MAACgF,EAAAA,EAAK,CAAChC,KAAMA,EAAMiC,UAAQ,EAACtE,KAAK,KAAKuE,SAAS,SAC/ChF,SAAA,EAEIC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAMG,OAAM,CAAClF,UAAU,uBAAuBe,MAAO,CAAEoE,gBAAiB,WAAYlF,UACjFF,EAAAA,EAAAA,MAACgF,EAAAA,EAAMK,MAAK,CAAAnF,SAAA,CAAS,OAAPgD,QAAO,IAAPA,OAAO,EAAPA,EAAStC,KAAK,aAGhCT,EAAAA,EAAAA,KAAC6E,EAAAA,EAAMM,KAAI,CAAApF,UACPF,EAAAA,EAAAA,MAACuF,EAAAA,EAAI,CAAArF,SAAA,EAEDF,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,MAAK,CAACvF,UAAU,OAAMC,SAAA,EACxBF,EAAAA,EAAAA,MAACuF,EAAAA,EAAKE,MAAK,CAAAvF,SAAA,CAAC,YAAUsD,MACtBrD,EAAAA,EAAAA,KAACoF,EAAAA,EAAKG,QAAO,CACT9E,KAAK,OACLC,YAAY,iBACZyD,KAAK,WACLlE,MAAO2D,EAAIG,SACX7D,SAAUgE,EACVsB,UAAQ,QAKhB3F,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,MAAK,CAACvF,UAAU,OAAMC,SAAA,EACxBF,EAAAA,EAAAA,MAACuF,EAAAA,EAAKE,MAAK,CAAAvF,SAAA,CAAC,UAAQsD,MACpBrD,EAAAA,EAAAA,KAACyF,IAAU,CACPxF,MAAO2D,EAAII,OACX9D,SAvEGD,IACvB4D,GAAQO,IAAI,IAAWA,EAAMJ,OAAQ/D,KAAS,EAuE1ByF,MAAM,OACNhF,YAAY,wBAGZ,OAAPqC,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,QACN5E,EAAAA,EAAAA,MAACuF,EAAAA,EAAKC,MAAK,CAACvF,UAAU,OAAMC,SAAA,EACxBC,EAAAA,EAAAA,KAACoF,EAAAA,EAAKE,MAAK,CAAAvF,SAAC,YACZF,EAAAA,EAAAA,MAACuF,EAAAA,EAAKO,OAAM,CAACxB,KAAK,SAASlE,MAAO2D,EAAIF,OAAQxD,SAAUgE,EAAanE,SAAA,EACjEC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,OAAMF,SAAC,YACrBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,QAAOF,SAAC,yBAM1CF,EAAAA,EAAAA,MAACgF,EAAAA,EAAMe,OAAM,CAAC9F,UAAU,YAAWC,SAAA,EAC/BC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACC,QAAQ,SAAS/E,QAASkD,EAAWlE,SAAC,YAG9CC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAAChF,MAAO,CAAEoE,gBAAiB,WAAalE,QA1EtCgF,KAAO,IAADC,EAAAC,EACvB,IAAKrC,EAAIG,SAASmC,SAAWtC,EAAII,OAAOkC,OAEpC,YADAC,MAAM,uCAIV,MAAM1B,EAAO,CACT2B,IAAY,OAAPrD,QAAO,IAAPA,GAAa,QAANiD,EAAPjD,EAAS0B,YAAI,IAAAuB,OAAN,EAAPA,EAAeI,IACpBrC,SAAa,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKG,SACfC,OAAW,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKI,OACbN,OAAW,OAAHE,QAAG,IAAHA,OAAG,EAAHA,EAAKF,QAEN,OAAPX,QAAO,IAAPA,GAAa,QAANkD,EAAPlD,EAAS0B,YAAI,IAAAwB,GAAbA,EAAeG,IACfpD,GAASqD,EAAAA,EAAAA,IAAiB5B,IAE1BzB,GAASsD,EAAAA,EAAAA,IAAiB1C,GAC9B,EA0D8E2C,SAAUjD,EAAQvD,SACnFuD,GAAUtD,EAAAA,EAAAA,KAACwG,EAAAA,GAAa,KAAM3G,EAAAA,EAAAA,MAAA4G,EAAAA,SAAA,CAAA1G,SAAA,CAAqB,UAAX,OAAPgD,QAAO,IAAPA,OAAO,EAAPA,EAAStC,MAAkB,SAAW,MAAM,iBAGlF,ECsChB,EAhKYiG,KAAO,IAADC,EAAAC,EACd,MAAM5D,GAAWC,EAAAA,EAAAA,OACX,eAAE4D,IAAmB1D,EAAAA,EAAAA,KAAaC,GAAUA,IAE5C0D,GAAwB,OAAdD,QAAc,IAAdA,GAAuB,QAATF,EAAdE,EAAgB9D,eAAO,IAAA4D,OAAT,EAAdA,EAAyBI,OAAQ,GAC3CC,GAA6B,OAAdH,QAAc,IAAdA,GAAuB,QAATD,EAAdC,EAAgB9D,eAAO,IAAA6D,OAAT,EAAdA,EAAyBK,eAAgB,EACxDC,EAA2B,OAAdL,QAAc,IAAdA,OAAc,EAAdA,EAAgBvD,SAE5BqB,EAAQwC,IAAarD,EAAAA,EAAAA,UAAS,KAC9BzE,EAAWG,IAAgBsE,EAAAA,EAAAA,UAAS,IACpCxE,EAAU8H,IAAetD,EAAAA,EAAAA,UAAS,KAClCvE,EAAY8H,IAAiBvD,EAAAA,EAAAA,UAAS,IAEtCwD,EAAUC,IAAezD,EAAAA,EAAAA,UAAS,CACrCrD,KAAM,GACNgE,KAAM,KACN+C,WAAW,KAGf9H,EAAAA,EAAAA,YAAU,KACN2H,EAAc1H,KAAK8H,KAAKT,EAAe1H,GAAU,GAClD,CAAC0H,EAAc1H,KAElBI,EAAAA,EAAAA,YAAU,KACNsD,GAAS0B,EAAAA,EAAAA,IAAc,CAAEC,SAAQC,MAAOtF,EAAUiC,KAAMlC,IAAa,GACtE,CAAC2D,EAAU2B,EAAQtF,EAAWC,IAEjC,MAAMoI,EAAiB,SAACjH,GACpB8G,EAAY,CAAE9G,OAAMgE,KADUkD,UAAAvG,OAAA,QAAAwG,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACPH,WAAW,GACzC,EAEA,OACI3H,EAAAA,EAAAA,MAAA4G,EAAAA,SAAA,CAAA1G,SAAA,EACIC,EAAAA,EAAAA,KAAC6H,EAAAA,EAAS,CAAC/F,gBAAiB,CAAC,CAAEK,MAAO,MAAOE,KAAM,WAAYJ,QAAQ,IAASK,MAAM,oBAEtFtC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CAAA3B,UACAC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAG,CAACmG,GAAI,GAAG/H,UACRC,EAAAA,EAAAA,KAAC+H,EAAAA,EAAI,CACDlH,MAAO,CACHmH,UACI,sIACNjI,UACFF,EAAAA,EAAAA,MAACkI,EAAAA,EAAK5C,KAAI,CAAApF,SAAA,EACNF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACnEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uCAAsCC,SAAA,CAAC,eACtCiH,GAAgB,MAEjChH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UAcnBF,EAAAA,EAAAA,MAACgG,EAAAA,EAAM,CAACC,QAAQ,UAAU/E,QAASA,IAAM2G,EAAe,OAAO3H,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAA0B,eAKlDoH,GACGlH,EAAAA,EAAAA,KAACiI,EAAAA,GAAO,IACRnB,EAAQ1F,OAAS,GACjBpB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BF,EAAAA,EAAAA,MAACqI,EAAAA,EAAK,CAACC,UAAQ,EAACC,OAAK,EAACtI,UAAU,uBAAsBC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,6BAA4BC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAEjBE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGZC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,YAAWC,SACvB+G,EAAQvG,KAAI,CAACkE,EAAMzC,KAAK,IAAAqG,EAAA,OACrBxI,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UAAMV,EAAY,GAAKC,EAAW0C,EAAQ,KAC1ChC,EAAAA,EAAAA,KAACsI,EAAAA,EAAc,CACXC,UAAU,MACVC,SACIxI,EAAAA,EAAAA,KAACyI,EAAAA,EAAO,CAACC,GAAI,WAAW1G,IAAQjC,SAAM,OAAJ0E,QAAI,IAAJA,OAAI,EAAJA,EAAMV,WAC3ChE,UACDC,EAAAA,EAAAA,KAAA,MAAAD,UAAS,OAAJ0E,QAAI,IAAJA,OAAI,EAAJA,EAAMV,SAAS4E,MAAM,EAAG,KAAM,OAAS,OAEhD3I,EAAAA,EAAAA,KAACsI,EAAAA,EAAc,CACXC,UAAU,MACVC,SACIxI,EAAAA,EAAAA,KAACyI,EAAAA,EAAO,CAACC,GAAI,WAAW1G,IAAQjC,UAC5BC,EAAAA,EAAAA,KAAA,OACI4I,wBAAyB,CACrBC,QAAY,OAAJpE,QAAI,IAAJA,OAAI,EAAJA,EAAMT,SAAU,WAIvCjE,UACDC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,QACI4I,wBAAyB,CACrBC,QAAY,OAAJpE,QAAI,IAAJA,GAAY,QAAR4D,EAAJ5D,EAAMT,cAAM,IAAAqE,OAAR,EAAJA,EAAcM,MAAM,EAAG,KAAM,OAAS,UAM9D3I,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,QACIF,UAAW,SAAa,OAAJ2E,QAAI,IAAJA,GAAAA,EAAMf,OAAS,aAAe,wBACjC3D,SACZ,OAAJ0E,QAAI,IAAJA,GAAAA,EAAMf,OAAS,gBAAa,uBAIrC1D,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KACIF,UAAU,gDACVe,MAAO,CAAEiI,OAAQ,WACjB/H,QAASA,IAAM2G,EAAe,OAAQjD,SAzCzCA,EAAK2B,KAAOpE,EA2ChB,YAMrBhC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kBAAiBC,SAAC,0CAGzCiH,EAAe,KACZhH,EAAAA,EAAAA,KAAC+I,EAAAA,EAAU,CACP1J,UAAWA,EACXC,SAAUA,EACVC,WAAYA,EACZC,aAAcA,EACdC,iBAAkB2H,cAO1CpH,EAAAA,EAAAA,KAACgJ,EAAQ,CACLnG,KAAMyE,EAASE,UACf1E,KAAMA,IAAMyE,EAAY,IAAKD,EAAUE,WAAW,IAClDzE,QAASuE,MAEd,C","sources":["helpers/Pagination.js","helpers/PageTitle.js","pages/bmg/faq/FaqModal/FaqModal.js","pages/bmg/faq/Faq.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page{' '}\r\n                <strong>\r\n                    {pageIndex} of {totalPages}\r\n                </strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Previous\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li\r\n                                key={page}\r\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">\r\n                                    {page}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else if (\r\n                        (page === 2 && pageIndex >= 5) ||\r\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\r\n                    ) {\r\n                        return (\r\n                            <li key={page} className=\"page-item disabled\">\r\n                                <Link to=\"#\" className=\"page-link px-0\">\r\n                                    ...\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">\r\n                            Next\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        <span className='custom-color'>{item.label}</span>\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { createFaqActions, getFaqActions, updateFaqActions } from \"../../../../redux/actions\";\r\nimport { ButtonLoading } from \"../../../../helpers/loader/Loading\";\r\n\r\nconst FaqModal = ({ show, hide, faqData }) => {\r\n    const dispatch = useDispatch();\r\n    const store = useSelector((state) => state);\r\n    const requiredStar = <span className=\"text-danger fs-4\">*</span>;\r\n    const loading = store?.createFaqDataReducer?.loading || store?.updateFaqDataReducer?.loading\r\n    const createStatus = store?.createFaqDataReducer?.faqData?.status\r\n    const updateStatus = store?.updateFaqDataReducer?.faqData?.status\r\n    // State to manage form data\r\n    const [faq, setFaq] = useState({\r\n        question: \"\",\r\n        answer: \"\",\r\n        status: false,\r\n    });\r\n    const closeModal = () => {\r\n        setFaq({\r\n            question: \"\",\r\n            answer: \"\",\r\n            status: false,\r\n        })\r\n        hide()\r\n    }\r\n    // Handle changes in form fields\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFaq((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // Handle ReactQuill editor changes\r\n    const handleQuillChange = (value) => {\r\n        setFaq((prev) => ({ ...prev, answer: value }));\r\n    };\r\n\r\n    // Load existing FAQ data for editing\r\n    useEffect(() => {\r\n        if (faqData?.data) {\r\n            setFaq({\r\n                question: faqData?.data?.question || \"\",\r\n                answer: faqData?.data?.answer || \"\",\r\n                status: faqData?.data?.status ?? false,\r\n            });\r\n        }\r\n    }, [faqData?.data]);\r\n\r\n\r\n    // Handle form submission\r\n    const handleSubmit = () => {\r\n        if (!faq.question.trim() || !faq.answer.trim()) {\r\n            alert(\"Please fill in all required fields.\");\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            _id: faqData?.data?._id,\r\n            question: faq?.question,\r\n            answer: faq?.answer,\r\n            status: faq?.status\r\n        }\r\n        if (faqData?.data?._id) {\r\n            dispatch(updateFaqActions(data));\r\n        } else {\r\n            dispatch(createFaqActions(faq));\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (!loading && (createStatus === 200 || updateStatus === 200)) {\r\n            dispatch(getFaqActions({ search: '', limit: '', page: '' }));\r\n            closeModal();\r\n        }\r\n    }, [createStatus, updateStatus, loading, dispatch]);\r\n\r\n    return (\r\n        <Modal show={show} centered size=\"lg\" backdrop='static'\r\n        // onHide={closeModal}\r\n        >\r\n            <Modal.Header className=\"px-2 py-1 text-light\" style={{ backgroundColor: '#008003' }}>\r\n                <Modal.Title>{faqData?.type} FAQ</Modal.Title>\r\n                {/* <i className=\"mdi mdi-close fs-3\" onClick={closeModal} style={{ cursor: 'pointer' }}></i> */}\r\n            </Modal.Header>\r\n            <Modal.Body >\r\n                <Form>\r\n                    {/* Question Input */}\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Question {requiredStar}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter question\"\r\n                            name=\"question\"\r\n                            value={faq.question}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {/* Answer (Rich Text Editor) */}\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Answer {requiredStar}</Form.Label>\r\n                        <ReactQuill\r\n                            value={faq.answer}\r\n                            onChange={handleQuillChange}\r\n                            theme=\"snow\"\r\n                            placeholder=\"Enter answer...\"\r\n                        />\r\n                    </Form.Group>\r\n                    {faqData?.data && (\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Select name=\"status\" value={faq.status} onChange={handleChange}>\r\n                                <option value=\"true\">Active</option>\r\n                                <option value=\"false\">Inactive</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"px-2 py-1\">\r\n                <Button variant=\"danger\" onClick={closeModal}>\r\n                    Cancel\r\n                </Button>\r\n                <Button style={{ backgroundColor: '#008003' }} onClick={handleSubmit} disabled={loading}>\r\n                    {loading ? <ButtonLoading /> : <>{faqData?.type === 'Edit' ? 'Update' : \"Add\"} FAQ</>}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default FaqModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Button, Table } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getFaqActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport FaqModal from './FaqModal/FaqModal';\r\n\r\nconst Faq = () => {\r\n    const dispatch = useDispatch();\r\n    const { faqDataReducer } = useSelector((state) => state);\r\n\r\n    const FaqData = faqDataReducer?.faqData?.faqs || [];\r\n    const TotalRecords = faqDataReducer?.faqData?.totalRecords || 0;\r\n    const FaqLoading = faqDataReducer?.loading;\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    const [faqModal, setFaqModal] = useState({\r\n        type: '',\r\n        data: null,\r\n        isVisible: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getFaqActions({ search, limit: pageSize, page: pageIndex }));\r\n    }, [dispatch, search, pageIndex, pageSize]);\r\n\r\n    const handleFaqModal = (type, data = null) => {\r\n        setFaqModal({ type, data, isVisible: true });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle breadCrumbItems={[{ label: 'Faq', path: '/bmg/faq', active: true }]} title=\"FAQ Management\" />\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{\r\n                            boxShadow:\r\n                                'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                        }}>\r\n                        <Card.Body>\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total FAQs: {TotalRecords || 0}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    {/* <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-2\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3 me-2\"\r\n                                            onClick={() => setSearch('')}\r\n                                            style={{ cursor: 'pointer' }}></i>\r\n                                    )} */}\r\n                                    <Button variant=\"success\" onClick={() => handleFaqModal('Add')}>\r\n                                        <i className=\"mdi mdi-plus-circle\"></i> Add\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {FaqLoading ? (\r\n                                <Loading />\r\n                            ) : FaqData.length > 0 ? (\r\n                                <div className=\"table-responsive\">\r\n                                    <Table bordered hover className=\"bg-white text-center\">\r\n                                        <thead className=\"text-start\">\r\n                                            <tr className=\"text-nowrap text-secondary\">\r\n                                                <th>\r\n                                                    <i className=\"mdi mdi-merge\"></i>\r\n                                                </th>\r\n                                                <th>Question</th>\r\n                                                <th>Answer</th>\r\n                                                <th>Status</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody className=\"text-stat\">\r\n                                            {FaqData.map((data, index) => (\r\n                                                <tr key={data._id || index}>\r\n                                                    <td>{(pageIndex - 1) * pageSize + index + 1}</td>\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"top\"\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-${index}`}>{data?.question}</Tooltip>\r\n                                                        }>\r\n                                                        <td>{data?.question.slice(0, 30) + '...' || 'N/A'}</td>\r\n                                                    </OverlayTrigger>\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"top\"\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-${index}`}>\r\n                                                                <div\r\n                                                                    dangerouslySetInnerHTML={{\r\n                                                                        __html: data?.answer || 'N/A',\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Tooltip>\r\n                                                        }>\r\n                                                        <td>\r\n                                                            <span\r\n                                                                dangerouslySetInnerHTML={{\r\n                                                                    __html: data?.answer?.slice(0, 30) + '...' || 'N/A',\r\n                                                                }}\r\n                                                            />\r\n                                                        </td>\r\n                                                    </OverlayTrigger>\r\n\r\n                                                    <td>\r\n                                                        <span\r\n                                                            className={`badge ${data?.status ? 'bg-success' : 'bg-danger'\r\n                                                                } px-2 py-1`}>\r\n                                                            {data?.status ? '✅ Active' : '❌ Inactive'}\r\n                                                        </span>\r\n                                                    </td>\r\n\r\n                                                    <td>\r\n                                                        <i\r\n                                                            className=\"mdi mdi-square-edit-outline fs-4 text-primary\"\r\n                                                            style={{ cursor: 'pointer' }}\r\n                                                            onClick={() => handleFaqModal('Edit', data)}></i>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"text-center py-4\">\r\n                                    <code className=\"fs-5 text-muted\">No FAQs found. Add some to display.</code>\r\n                                </div>\r\n                            )}\r\n                            {TotalRecords > 20 && (\r\n                                <Pagination\r\n                                    pageIndex={pageIndex}\r\n                                    pageSize={pageSize}\r\n                                    totalPages={totalPages}\r\n                                    setPageIndex={setPageIndex}\r\n                                    onChangePageSize={setPageSize}\r\n                                />\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <FaqModal\r\n                show={faqModal.isVisible}\r\n                hide={() => setFaqModal({ ...faqModal, isVisible: false })}\r\n                faqData={faqModal}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Faq;\r\n"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","breadCrumbItems","item","index","active","Item","label","href","path","title","_store$createFaqDataR","_store$updateFaqDataR","_store$createFaqDataR2","_store$createFaqDataR3","_store$updateFaqDataR2","_store$updateFaqDataR3","show","hide","faqData","dispatch","useDispatch","store","useSelector","state","requiredStar","loading","createFaqDataReducer","updateFaqDataReducer","createStatus","status","updateStatus","faq","setFaq","useState","question","answer","closeModal","handleChange","name","prev","_faqData$data","_faqData$data2","_faqData$data$status","_faqData$data3","data","getFaqActions","search","limit","Modal","centered","backdrop","Header","backgroundColor","Title","Body","Form","Group","Label","Control","required","ReactQuill","theme","Select","Footer","Button","variant","handleSubmit","_faqData$data4","_faqData$data5","trim","alert","_id","updateFaqActions","createFaqActions","disabled","ButtonLoading","_Fragment","Faq","_faqDataReducer$faqDa","_faqDataReducer$faqDa2","faqDataReducer","FaqData","faqs","TotalRecords","totalRecords","FaqLoading","setSearch","setPageSize","setTotalPages","faqModal","setFaqModal","isVisible","ceil","handleFaqModal","arguments","undefined","PageTitle","xs","Card","boxShadow","Loading","Table","bordered","hover","_data$answer","OverlayTrigger","placement","overlay","Tooltip","id","slice","dangerouslySetInnerHTML","__html","cursor","Pagination","FaqModal"],"sourceRoot":""}
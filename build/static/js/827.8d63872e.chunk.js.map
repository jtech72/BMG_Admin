{"version":3,"file":"static/js/827.8d63872e.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","pages/bmg/soldProducts/SoldProducts.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-item disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <RotatingLines\r\n                strokeColor=\"grey\"\r\n                strokeWidth=\"4\"\r\n                animationDuration=\"0.75\"\r\n                width=\"90\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading };\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getSoldProductDataActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination'\r\nconst SoldProducts = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const SoldAuctionData = store?.soldProductDataReducer?.leadData?.result\r\n    console.log({ SoldAuctionData })\r\n    const SoldAuctionLoading = store?.soldProductDataReducer?.loading\r\n\r\n    const TotalRecords = store?.soldProductDataReducer?.leadData?.totalRecords || 0;\r\n\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSoldProductDataActions({ search: search, limit: pageSize, page: pageIndex, soldStatus: true }));\r\n    }, [dispatch, pageIndex, pageSize, search]);\r\n\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Function to format keys into human-readable format\r\n    const formatKey = (key) => {\r\n        switch (key) {\r\n            case \"categoryId\":\r\n                return \"Category Name\";\r\n            case \"subCategoryId\":\r\n                return \"Subcategory Name\";\r\n            // Add more custom labels if needed\r\n            default:\r\n                // Convert camelCase or snake_case to readable words\r\n                return key.replace(/([A-Z])/g, ' $1').replace(/[_-]/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\r\n        }\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates\r\n    // Function to check if a string is a valid date\r\n    const isDateString = (value) => {\r\n        if (typeof value !== 'string') return false;\r\n\r\n        // Regex to match ISO date strings (e.g., \"2025-03-28T00:00:00.000Z\")\r\n        const isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/;\r\n        return isoDateRegex.test(value);\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates)\r\n    // Function to format values (including nested objects and dates)\r\n    const formatValue = (value, key) => {\r\n        // Handle categoryId and subCategoryId specifically\r\n        if (key === \"categoryId\" || key === \"subCategoryId\") {\r\n            return value?.name || value?.subCategoryName || \"N/A\"; // Display the name or \"N/A\" if not available\r\n        }\r\n\r\n        if (typeof value === 'object' && value !== null) {\r\n            return (\r\n                <div style={{ paddingLeft: '20px', borderLeft: '2px solid #ddd' }}>\r\n                    {Object.entries(value).map(([subKey, subValue]) => (\r\n                        <div key={subKey}>\r\n                            {console.log({ subKey, subValue })}\r\n                            <strong>{formatKey(subKey)}:</strong> {formatValue(subValue, subKey)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Check if the value is a valid date string\r\n        if (isDateString(value)) {\r\n            const dateOnly = new Date(value).toISOString().split(\"T\")[0];\r\n            return dateOnly;\r\n        }\r\n\r\n        return value;\r\n    };\r\n    const excludedKeys = [\"_id\", \"createdAt\", \"updatedAt\", \"image\", \"status\", \"userId\", \"publish\", \"negotiable\", \"productGenerateId\", \"endBidDateTime\", \"startBidDateTime\", \"buyerId\"];\r\n\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return \"\";\r\n\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString(\"en-US\", {\r\n            weekday: \"short\",   // \"Thu\"\r\n            month: \"short\",     // \"Feb\"\r\n            day: \"2-digit\",     // \"27\"\r\n            year: \"numeric\",    // \"2025\"\r\n            hour: \"2-digit\",    // \"12\"\r\n            minute: \"2-digit\",  // \"00\"\r\n            hour12: true,       // \"AM/PM\"\r\n        });\r\n    };\r\n    const isValidISODate = (value) => {\r\n        if (typeof value !== \"string\") return false; // Ensure it's a string before calling includes()\r\n\r\n        const date = new Date(value);\r\n        return !isNaN(date.getTime()) && value.includes(\"T\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    {\r\n                        label: 'Sold Items',\r\n                        path: '/bmg/sold-items',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={`Sold Items`}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\r\n                    >\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Products: {TotalRecords}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    {/* <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch(\"\")}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></i>\r\n                                    )} */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {SoldAuctionLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {SoldAuctionData && SoldAuctionData?.length > 0 ? (\r\n\r\n                                        <>\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-striped bg-white \">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\r\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                                                            <th scope=\"col\">Product Id</th>\r\n                                                            <th scope=\"col\">Product Name</th>\r\n                                                            <th scope=\"col\">Brand</th>\r\n                                                            <th scope=\"col\">Ask Price</th>\r\n                                                            <th scope=\"col\">User Name</th>\r\n                                                            <th scope=\"col\">User Email</th>\r\n                                                            {/* <th scope=\"col\">User Verified</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {SoldAuctionData?.map((data, index) => (\r\n                                                            <tr\r\n                                                                key={index}\r\n                                                                className=\"text-dark fw-bold text-nowrap\">\r\n                                                                {console.log({ data })}\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.productGenerateId ? (\r\n                                                                        <span>{data?.productGenerateId} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td\r\n                                                                    className=\"text-uppercase fw-bold\"\r\n                                                                    style={{ cursor: 'pointer', color: 'crimson', transition: 'color 0.3s ease-in-out' }}\r\n                                                                    onMouseOver={(e) => e.target.style.color = 'rgb(10 207 151)'}\r\n                                                                    onMouseOut={(e) => e.target.style.color = 'crimson'}\r\n                                                                >\r\n                                                                    <OverlayTrigger\r\n                                                                        placement=\"left\"\r\n                                                                        overlay={\r\n                                                                            <Tooltip id=\"overlay-example\">\r\n                                                                                View Detail's\r\n                                                                            </Tooltip>\r\n                                                                        }>\r\n                                                                        <b>\r\n                                                                            {data?.Product_Name ? (\r\n                                                                                <span onClick={() => handleProductClick(data)}\r\n                                                                                >{data?.Product_Name?.slice(0,30)+'...'} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </b>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-primary'>\r\n                                                                    {data?.Brand ? (\r\n                                                                        <span>{data?.Brand} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.Ask_Price ? (\r\n                                                                        <span>$ {data?.Ask_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td className='fw-bold'>\r\n                                                                    {data?.userId ? (\r\n                                                                        <span className=\"fw-semibold\">\r\n                                                                            {`${data?.userId?.name || \"\"} ${data?.userId?.lastName || \"\"}`.trim() || \"N/A\"}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"text-danger\">N/A</span>\r\n                                                                    )}\r\n\r\n                                                                </td>\r\n                                                                <td className='fw-bold text-info'>\r\n                                                                    {data?.userId?.email ? (\r\n                                                                        <span>{data?.userId?.email} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                {/* <td className='fw-bold'>\r\n                                                                    {data?.userId ? (\r\n                                                                        <span className={`badge ${data?.userId?.isVerified ? \"bg-success\" : \"bg-danger\"} px-3 py-2`}>\r\n                                                                            {data?.userId?.isVerified ? \"✅ Verified\" : \"❌ Not Verified\"}\r\n                                                                        </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"badge bg-secondary px-3 py-2\">N/A</span>\r\n                                                                    )}\r\n\r\n                                                                </td> */}\r\n                                                                {/* <td>\r\n                                                            <OverlayTrigger\r\n                                                                placement=\"left\"\r\n                                                                overlay={\r\n                                                                    <Tooltip id=\"overlay-example\">\r\n                                                                        Send Mail\r\n                                                                    </Tooltip>\r\n                                                                }>\r\n                                                                <a href={`mailto:${data?.email}`}>\r\n                                                                    {data?.email ? (\r\n                                                                        data?.email\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </a>\r\n                                                            </OverlayTrigger>\r\n                                                        </td> */}\r\n\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">\r\n                                                No Products found.\r\n                                            </code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <Pagination\r\n                                pageIndex={pageIndex}\r\n                                pageSize={pageSize}\r\n                                totalPages={totalPages}\r\n                                setPageIndex={setPageIndex}\r\n                                onChangePageSize={setPageSize}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className='px-2 py-1 text-light' style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i className=\"mdi mdi-close fs-3\" onClick={() => setShowModal(false)} style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={5000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: \"400px\",\r\n                                                    objectFit: \"contain\",\r\n                                                    boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) => !excludedKeys.includes(key) && value) // Exclude unnecessary fields\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <div className=\"d-flex flex-column\">\r\n                                                <strong className=\"text-muted mb-1\">{formatKey(key)}</strong>\r\n                                                <div className=\"fw-bold\" style={{ wordBreak: 'break-word' }}>\r\n                                                    {formatValue(value, key)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SoldProducts\r\n"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","fn","deps","isFirst","useRef","current","CarouselCaption","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CarouselItem","finalClassName","Carousel","_ref2","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","interval","keyboard","onKeyDown","pause","onMouseOver","onMouseOut","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","useState","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Object","assign","Caption","SoldProducts","_store$soldProductDat","_store$soldProductDat2","_store$soldProductDat3","_store$soldProductDat4","_store$soldProductDat5","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","SoldAuctionData","soldProductDataReducer","leadData","result","console","log","SoldAuctionLoading","loading","TotalRecords","totalRecords","setPageSize","setTotalPages","ceil","getSoldProductDataActions","limit","soldStatus","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","replace","c","toUpperCase","formatValue","name","subCategoryName","paddingLeft","borderLeft","entries","subKey","subValue","isDateString","Date","toISOString","split","excludedKeys","PageTitle","xs","Card","boxShadow","Body","scope","data","_data$Product_Name","_data$userId","_data$userId2","_data$userId3","_data$userId4","productGenerateId","cursor","transition","OverlayTrigger","placement","overlay","Tooltip","id","Product_Name","product","slice","Brand","Ask_Price","userId","lastName","trim","email","Pagination","Modal","show","onHide","centered","Header","backgroundColor","Title","Container","image","img","src","alt","maxHeight","objectFit","filter","includes","_ref3","md","wordBreak"],"sourceRoot":""}
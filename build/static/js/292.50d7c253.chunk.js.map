{"version":3,"file":"static/js/292.50d7c253.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","pages/bmg/products/Products.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-item disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <RotatingLines\r\n                strokeColor=\"grey\"\r\n                strokeWidth=\"4\"\r\n                animationDuration=\"0.75\"\r\n                width=\"90\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading };\r\n","import { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageTitle from '../../../helpers/PageTitle';\r\nimport { Loading } from '../../../helpers/loader/Loading';\r\nimport { getProductActions } from '../../../redux/actions';\r\nimport Pagination from '../../../helpers/Pagination'\r\nconst Products = () => {\r\n    const store = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const [search, setSearch] = useState('');\r\n    const [type, setType] = useState('ongoing')\r\n    const ProductsData = store?.productDataReducer?.productData?.result\r\n    console.log(ProductsData)\r\n    const ProductsLoading = store?.productDataReducer?.loading\r\n\r\n\r\n    const TotalRecords = store?.productDataReducer?.productData?.totalRecords || 0;\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\r\n\r\n    console.log('making build console for checking')\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\r\n    }, [TotalRecords, pageSize]);\r\n    useEffect(() => {\r\n        dispatch(getProductActions({ search: search, limit: pageSize, page: pageIndex, type: type }));\r\n    }, [dispatch, pageIndex, pageSize, search, type]);\r\n\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const handleProductClick = (product) => {\r\n        if (product) {\r\n            setSelectedProduct(product);\r\n            setShowModal(true);\r\n        }\r\n    };\r\n\r\n    // Function to format keys into human-readable format\r\n    const formatKey = (key) => {\r\n        switch (key) {\r\n            case \"categoryId\":\r\n                return \"Category Name\";\r\n            case \"subCategoryId\":\r\n                return \"Subcategory Name\";\r\n            // Add more custom labels if needed\r\n            default:\r\n                // Convert camelCase or snake_case to readable words\r\n                return key.replace(/([A-Z])/g, ' $1').replace(/[_-]/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\r\n        }\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates\r\n    // Function to check if a string is a valid date\r\n    const isDateString = (value) => {\r\n        if (typeof value !== 'string') return false;\r\n\r\n        // Regex to match ISO date strings (e.g., \"2025-03-28T00:00:00.000Z\")\r\n        const isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/;\r\n        return isoDateRegex.test(value);\r\n    };\r\n\r\n    // Function to format values (including nested objects and dates)\r\n    // Function to format values (including nested objects and dates)\r\n    const formatValue = (value, key) => {\r\n        // Handle categoryId and subCategoryId specifically\r\n        if (key === \"categoryId\" || key === \"subCategoryId\") {\r\n            return value?.name || value?.subCategoryName || \"N/A\"; // Display the name or \"N/A\" if not available\r\n        }\r\n\r\n        if (typeof value === 'object' && value !== null) {\r\n            return (\r\n                <div style={{ paddingLeft: '20px', borderLeft: '2px solid #ddd' }}>\r\n                    {Object.entries(value).map(([subKey, subValue]) => (\r\n                        <div key={subKey}>\r\n                            {console.log({ subKey, subValue })}\r\n                            <strong>{formatKey(subKey)}:</strong> {formatValue(subValue, subKey)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Check if the value is a valid date string\r\n        if (isDateString(value)) {\r\n            const dateOnly = new Date(value).toISOString().split(\"T\")[0];\r\n            return dateOnly;\r\n        }\r\n\r\n        return value;\r\n    };\r\n    const excludedKeys = [\"_id\", \"createdAt\", \"updatedAt\", \"image\",\"categoryId\",\"subCategoryId\",\"soldStatus\", \"status\", \"userId\", \"publish\", \"negotiable\", \"productGenerateId\", \"endBidDateTime\", \"startBidDateTime\", \"buyerId\"];\r\n\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return \"\";\r\n\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString(\"en-US\", {\r\n            weekday: \"short\",   // \"Thu\"\r\n            month: \"short\",     // \"Feb\"\r\n            day: \"2-digit\",     // \"27\"\r\n            year: \"numeric\",    // \"2025\"\r\n            hour: \"2-digit\",    // \"12\"\r\n            minute: \"2-digit\",  // \"00\"\r\n            hour12: true,       // \"AM/PM\"\r\n        });\r\n    };\r\n    const isValidISODate = (value) => {\r\n        if (typeof value !== \"string\") return false; // Ensure it's a string before calling includes()\r\n\r\n        const date = new Date(value);\r\n        return !isNaN(date.getTime()) && value.includes(\"T\");\r\n    };\r\n    const types = ['ongoing', 'upcoming', 'sold', 'unsold'];\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    {\r\n                        label: 'Item',\r\n                        path: '/bmg/items',\r\n                        active: true,\r\n                    },\r\n                ]}\r\n                title={'Item'}\r\n            />\r\n            <Row className=\"mb-3 ms-1\" style={{ borderBottom: '1px solid #ddd' }}>\r\n                {types.map((item) => (\r\n                    <Col sm={1}\r\n                        key={item}\r\n                        className=\"text-center fw-bold\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            padding: '10px 0',\r\n                            color: type === item ? '#008003' : 'black',\r\n                            borderBottom: type === item ? '3px solid #008003' : '3px solid transparent',\r\n                            fontWeight: type === item ? 'bold' : 'normal',\r\n                            transition: 'all 0.2s ease-in-out',\r\n                            textTransform: 'capitalize',\r\n                        }}\r\n                        onClick={() => setType(item)}\r\n                    >\r\n                        {item}\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card\r\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\r\n                    >\r\n                        <Card.Body className=\"text-center\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\r\n                                    Total Products: {TotalRecords}\r\n                                </span>\r\n                                <div className=\"d-flex\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control w-auto me-1\"\r\n                                        placeholder=\"Search...\"\r\n                                        value={search}\r\n                                        onChange={(e) => setSearch(e.target.value)}\r\n                                    />\r\n                                    {search && (\r\n                                        <i\r\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\r\n                                            onClick={() => setSearch(\"\")}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></i>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {ProductsLoading ? (\r\n                                <>\r\n                                    <Loading />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {ProductsData && ProductsData.length > 0 ? (\r\n\r\n                                        <>\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-striped bg-white \">\r\n                                                    <thead>\r\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\r\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                                                            <th scope=\"col\">Product Id</th>\r\n                                                            <th scope=\"col\">Serial No</th>\r\n                                                            <th scope=\"col\">Product Name</th>\r\n                                                            <th scope=\"col\">Brand</th>\r\n                                                            <th scope=\"col\">Ask Price</th>\r\n                                                            <th scope=\"col\">Bidding Amount</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {ProductsData?.map((data, index) => (\r\n                                                            <tr\r\n                                                                key={index}\r\n                                                                className=\"text-dark fw-bold text-nowrap\">\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                {console.log({ data })}\r\n                                                                <td className='text-uppercase fw-bold'>\r\n                                                                    {data?.productGenerateId ? (\r\n                                                                        <span>{data?.productGenerateId} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-info'>\r\n                                                                    {data?.Serial_No ? (\r\n                                                                        <span>{data?.Serial_No} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n                                                                <td\r\n                                                                    className=\"text-uppercase fw-bold\"\r\n                                                                    style={{ cursor: 'pointer', color: 'crimson', transition: 'color 0.3s ease-in-out' }}\r\n                                                                    onMouseOver={(e) => e.target.style.color = 'rgb(10 207 151)'}\r\n                                                                    onMouseOut={(e) => e.target.style.color = 'crimson'}\r\n                                                                >\r\n                                                                    <OverlayTrigger\r\n                                                                        placement=\"left\"\r\n                                                                        overlay={\r\n                                                                            <Tooltip id=\"overlay-example\">\r\n                                                                                View Detail's\r\n                                                                            </Tooltip>\r\n                                                                        }>\r\n                                                                        <b>\r\n                                                                            {data?.Product_Name ? (\r\n                                                                                <span onClick={() => handleProductClick(data)}\r\n                                                                                >{data?.Product_Name?.slice(0, 30) + '...'} </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                                    N/A\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </b>\r\n                                                                    </OverlayTrigger>\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-primary'>\r\n                                                                    {data?.Brand ? (\r\n                                                                        <span>{data?.Brand} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.Ask_Price ? (\r\n                                                                        <span>$ {data?.Ask_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n\r\n\r\n                                                                <td className='text-uppercase fw-bold text-success'>\r\n                                                                    {data?.Start_Bid_Price ? (\r\n                                                                        <span>$ {data?.Start_Bid_Price} </span>\r\n                                                                    ) : (\r\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\r\n                                                                            N/A\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <div\r\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\r\n                                            style={{ height: '30vh' }}>\r\n                                            <code className=\"fs-4\">\r\n                                                No Product's found.\r\n                                            </code>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <Pagination\r\n                                pageIndex={pageIndex}\r\n                                pageSize={pageSize}\r\n                                totalPages={totalPages}\r\n                                setPageIndex={setPageIndex}\r\n                                onChangePageSize={setPageSize}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row >\r\n\r\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\r\n                <Modal.Header className='px-2 py-1 text-light' style={{ backgroundColor: '#008003' }}>\r\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\r\n                    <i className=\"mdi mdi-close fs-3\" onClick={() => setShowModal(false)} style={{ cursor: 'pointer' }}></i>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedProduct && (\r\n                        <Container>\r\n                            {/* Image Section */}\r\n                            {selectedProduct.image?.length > 0 && (\r\n                                <Carousel interval={5000} className=\"mb-3 shadow-sm rounded\">\r\n                                    {selectedProduct.image.map((img, index) => (\r\n                                        <Carousel.Item key={index}>\r\n                                            <img\r\n                                                src={img}\r\n                                                alt={`Slide ${index}`}\r\n                                                className=\"d-block w-100 rounded\"\r\n                                                style={{\r\n                                                    maxHeight: \"400px\",\r\n                                                    objectFit: \"contain\",\r\n                                                    boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\r\n                                                }}\r\n                                            />\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>\r\n                            )}\r\n\r\n                            <Row className=\"border rounded p-3 bg-light\">\r\n                                {Object.entries(selectedProduct)\r\n                                    .filter(([key, value]) => !excludedKeys.includes(key) && value) // Exclude unnecessary fields\r\n                                    .map(([key, value]) => (\r\n                                        <Col md={6} key={key} className=\"mb-3\">\r\n                                            <div className=\"d-flex flex-column\">\r\n                                                <strong className=\"text-muted mb-1\">{formatKey(key)}</strong>\r\n                                                <div className=\"fw-bold\" style={{ wordBreak: 'break-word' }}>\r\n                                                    {formatValue(value, key)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    ))}\r\n                            </Row>\r\n\r\n\r\n                        </Container>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","Products","_store$productDataRed","_store$productDataRed2","_store$productDataRed3","_store$productDataRed4","_store$productDataRed5","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","setType","ProductsData","productDataReducer","productData","result","console","log","ProductsLoading","loading","TotalRecords","totalRecords","setPageSize","setTotalPages","ceil","getProductActions","limit","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","key","replace","c","toUpperCase","formatValue","name","subCategoryName","paddingLeft","borderLeft","Object","entries","subKey","subValue","test","isDateString","Date","toISOString","split","excludedKeys","_Fragment","PageTitle","borderBottom","sm","cursor","padding","fontWeight","transition","textTransform","xs","Card","boxShadow","Body","scope","data","_data$Product_Name","productGenerateId","Serial_No","onMouseOver","onMouseOut","OverlayTrigger","placement","overlay","Tooltip","id","Product_Name","product","slice","Brand","Ask_Price","Start_Bid_Price","Pagination","Modal","show","onHide","centered","Header","backgroundColor","Title","Container","image","Carousel","interval","img","src","alt","maxHeight","objectFit","filter","_ref2","includes","_ref3","md","wordBreak","fn","deps","isFirst","useRef","current","CarouselCaption","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CarouselItem","finalClassName","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","keyboard","onKeyDown","pause","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","tagName","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","Anchor","assign","Caption"],"sourceRoot":""}
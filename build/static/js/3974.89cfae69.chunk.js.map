{"version":3,"file":"static/js/3974.89cfae69.chunk.js","mappings":"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","sources":["pages/bmg/comission/ComissionModal/ComissionModal.js","pages/bmg/comission/Comission.js","../node_modules/react-bootstrap/esm/Table.js","helpers/Pagination.js","helpers/PageTitle.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport { useForm, useFieldArray } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    createComissionDataAction,\n    updateComissionDataAction,\n    resetComissionDataAction,\n    getComissionDataAction\n} from '../../../../redux/actions';\nimport { ButtonLoading } from \"../../../../helpers/loader/Loading\";\n\nconst CommissionModal = ({ show, hide, comissionData }) => {\n    const dispatch = useDispatch();\n    const store = useSelector((state) => state);\n\n    const {\n        control,\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { errors }\n    } = useForm({\n        defaultValues: {\n            commissions: [{ minAmount: '', maxAmount: '', percentage: '', isActive: 'true', _id: null }]\n        }\n    });\n\n    const { fields, append, remove, replace } = useFieldArray({\n        control,\n        name: 'commissions'\n    });\n\n    const loading = store?.createComissionDataReducer?.loading || store?.updateComissionDataReducer?.loading;\n    const createStatus = store?.createComissionDataReducer?.comissionData?.status;\n    const updateStatus = store?.updateComissionDataReducer?.comissionData?.status;\n\n    const closeModal = () => hide();\n\n    useEffect(() => {\n        if (comissionData?.type === 'Edit' && Array.isArray(comissionData?.data)) {\n            const mapped = comissionData.data.map((item) => ({\n                minAmount: item.minAmount,\n                maxAmount: item.maxAmount,\n                percentage: item.percentage,\n                isActive: item.isActive?.toString() || 'true',\n                _id: item._id\n            }));\n            replace(mapped);\n        } else {\n            reset({\n                commissions: [{ minAmount: '', maxAmount: '', percentage: '', isActive: 'true', _id: null }]\n            });\n        }\n    }, [show, comissionData, replace, reset]);\n\n    const onSubmit = (data) => {\n        // const payload = data.commissions.map((item) => ({\n        //     ...item,\n        //     minAmount: parseFloat(item.minAmount),\n        //     maxAmount: parseFloat(item.maxAmount),\n        //     percentage: parseFloat(item.percentage),\n        //     isActive: item.isActive === 'true',\n        // }));\n\n        const commissions = data.commissions.map((item) => {\n            const base = {\n                minAmount: parseFloat(item.minAmount),\n                maxAmount: parseFloat(item.maxAmount),\n                percentage: parseFloat(item.percentage),\n\n            };\n\n            if (comissionData?.type === 'Edit' && item._id) {\n                return { ...base, id: item._id, isActive: item.isActive === 'true' };\n            }\n\n            return base;\n        });\n\n        if (comissionData?.type === 'Edit') {\n            dispatch(updateComissionDataAction(commissions));\n        } else {\n            dispatch(createComissionDataAction({ commissions }));\n        }\n    };\n\n    useEffect(() => {\n        if (!loading && (createStatus === 200 || updateStatus === 200)) {\n            dispatch(getComissionDataAction({ search: '', limit: '', page: '' }));\n            dispatch(resetComissionDataAction());\n            closeModal();\n        }\n    }, [createStatus, updateStatus, loading, dispatch]);\n\n    return (\n        <Modal show={show} centered size=\"lg\"\n        // onHide={closeModal}\n        >\n            <Modal.Header className=\"px-2 py-1 text-light\" style={{ backgroundColor: '#008003' }}>\n                <Modal.Title>\n                    {comissionData?.type === 'Edit' ? 'Edit Platform Charges' : 'Add Platform Charges'}\n                </Modal.Title>\n                {/* <i\n                    className=\"mdi mdi-close fs-3\"\n                    onClick={closeModal}\n                    style={{ cursor: 'pointer' }}\n                /> */}\n            </Modal.Header>\n\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Modal.Body>\n                    {fields.map((item, index) => (\n                        <Row key={item.id} className=\"mb-2 align-items-end\">\n                            <Col md={3}>\n                                <Form.Label>Min Amount</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    step=\"0.01\"\n                                    min=\"0\"\n                                    placeholder=\"Min\"\n                                    {...register(`commissions.${index}.minAmount`, { required: true })}\n                                    isInvalid={!!errors?.commissions?.[index]?.minAmount}\n                                />\n                            </Col>\n                            <Col md={3}>\n                                <Form.Label>Max Amount</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    step=\"0.01\"\n                                    min=\"0\"\n                                    placeholder=\"Max\"\n                                    {...register(`commissions.${index}.maxAmount`, { required: true })}\n                                    isInvalid={!!errors?.commissions?.[index]?.maxAmount}\n                                />\n                            </Col>\n                            <Col md={2}>\n                                <Form.Label>%</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    step=\"0.01\"\n                                    min=\"0.01\"\n                                    max=\"100\"\n                                    placeholder=\"%\"\n                                    {...register(`commissions.${index}.percentage`, { required: true })}\n                                    isInvalid={!!errors?.commissions?.[index]?.percentage}\n                                />\n                            </Col>\n\n                            {comissionData?.type === 'Edit' && (\n                                <Col>\n                                    <Form.Label>Status</Form.Label>\n                                    <Form.Select\n                                        {...register(`commissions.${index}.isActive`)}\n                                    >\n                                        <option value=\"true\">Active</option>\n                                        <option value=\"false\">Inactive</option>\n                                    </Form.Select>\n                                </Col>\n                            )}\n                            {comissionData?.type === 'Add' &&\n                                <Col md={2}>\n                                    <Button\n                                        variant=\"outline-danger\" size=\"sm\"\n                                        className=\"mt-2\"\n                                        onClick={() => remove(index)}\n                                        disabled={fields.length === 1}\n                                    >\n                                        - Remove\n                                    </Button>\n                                </Col>\n                            }\n                        </Row>\n                    ))}\n                    {comissionData?.type === 'Add' &&\n                        <div className=\"text-end me-2\">\n                            <Button\n                                variant=\"outline-success\"\n                                size=\"sm\"\n                                onClick={() => append({ minAmount: '', maxAmount: '', percentage: '', isActive: 'true', _id: null })}\n                            >\n                                + Add More\n                            </Button>\n                        </div>\n                    }\n                </Modal.Body>\n\n                <Modal.Footer className=\"px-2 py-1\">\n                    <Button variant=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button\n                        type=\"submit\"\n                        style={{ backgroundColor: '#008003', borderColor: '#008003' }}\n                        disabled={loading}\n                    >\n                        {loading ? <ButtonLoading /> : comissionData?.type === 'Edit' ? 'Update' : 'Save'}\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal >\n    );\n};\n\nexport default CommissionModal;\n","import { useEffect, useState } from \"react\";\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Button, Table } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PageTitle from \"../../../helpers/PageTitle\";\nimport { Loading } from \"../../../helpers/loader/Loading\";\nimport { getComissionDataAction } from \"../../../redux/actions\";\nimport Pagination from \"../../../helpers/Pagination\";\nimport ComissionModal from \"./ComissionModal/ComissionModal\";\n\nconst Comission = () => {\n    const dispatch = useDispatch();\n    const store = useSelector((state) => state);\n\n    const ComissionData = store?.getComissionDataReducer?.comissionData?.commisions || [];\n    const TotalRecords = store?.getComissionDataReducer?.comissionData?.totalRecords || ComissionData?.length || 0;\n    const ComissionLoading = store?.getComissionDataReducer?.loading;\n\n    const [search, setSearch] = useState(\"\");\n    const [pageIndex, setPageIndex] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [totalPages, setTotalPages] = useState(1);\n\n    const [comissionModal, setComissionModal] = useState({\n        type: \"\",\n        data: null,\n        isVisible: false,\n    });\n\n    useEffect(() => {\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\n    }, [TotalRecords, pageSize]);\n\n    useEffect(() => {\n        dispatch(getComissionDataAction({ search, limit: pageSize, page: pageIndex }));\n    }, [dispatch, search, pageIndex, pageSize]);\n\n    const handleComissionModal = (type, data = null) => {\n        setComissionModal({ type, data, isVisible: true });\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"Platform charges\", path: \"/bmg/platform-charges\", active: true },\n                ]}\n                title=\"Platform Charges\"\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body>\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\n                                    Total Charges: {TotalRecords || 0}\n                                </span>\n                                <div className=\"d-flex\">\n                                    {/* <input\n                                        type=\"text\"\n                                        className=\"form-control w-auto me-2\"\n                                        placeholder=\"Search...\"\n                                        value={search}\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                    {search && (\n                                        <i\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3 me-2\"\n                                            onClick={() => setSearch(\"\")}\n                                            style={{ cursor: \"pointer\" }}\n                                        ></i>\n                                    )} */}\n                                    <Button variant=\"success\" style={{\n                                        outline: 'none',\n                                        boxShadow: 'none',\n                                    }} onClick={() => handleComissionModal(\"Add\")}>\n                                        <i className=\"mdi mdi-plus-circle\"></i> Add\n                                    </Button>\n                                    <Button variant=\"danger\" className=\"ms-2\" style={{\n                                        outline: 'none',\n                                        boxShadow: 'none',\n                                    }} onClick={() => handleComissionModal(\"Edit\", ComissionData)}>\n                                        <i className=\"mdi mdi-square-edit-outline\"></i> Edit\n                                    </Button>\n                                </div>\n                            </div>\n\n                            {ComissionLoading ? (\n                                <Loading />\n                            ) : ComissionData.length > 0 ? (\n                                <div className=\"table-responsive\">\n                                    <Table bordered hover className=\"bg-white text-center\">\n                                        <thead>\n                                            <tr className=\"text-nowrap text-secondary\">\n                                                <th><i className=\"mdi mdi-merge\"></i></th>\n                                                <th>Min Amount</th>\n                                                <th>Max Amount</th>\n                                                <th>Percentage</th>\n                                                <th>Status</th>\n                                                {/* <th>Action</th> */}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {ComissionData.map((data, index) => (\n                                                <tr key={data._id || index} className=\"fw-bold\">\n                                                    <td>{(pageIndex - 1) * pageSize + index + 1}</td>\n                                                    <td>{data?.minAmount ? `$${data?.minAmount}` : \"N/A\"}</td>\n                                                    <td>\n                                                        {data?.maxAmount ? `$${data?.maxAmount}` : \"N/A\"}\n                                                    </td>\n                                                    <td>\n                                                        {data?.percentage ? `${data?.percentage}%` : \"N/A\"}\n                                                    </td>\n                                                    <td>\n                                                        <span\n                                                            className={`badge ${data?.isActive ? \"bg-success\" : \"bg-danger\"\n                                                                } px-2 py-1`}\n                                                        >\n                                                            {data?.isActive ? \"✅ Active\" : \"❌ Inactive\"}\n                                                        </span>\n                                                    </td>\n\n                                                    {/* <td>\n                                                        <i\n                                                            className=\"mdi mdi-square-edit-outline fs-4 text-primary\"\n                                                            style={{ cursor: \"pointer\" }}\n                                                            onClick={() => handleComissionModal(\"Edit\", data)}\n                                                        ></i>\n                                                    </td> */}\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            ) : (\n                                <div className=\"text-center py-4\">\n                                    <code className=\"fs-5 text-muted\">No Charges found. Add some to display.</code>\n                                </div>\n                            )}\n\n                            {/* <Pagination\n                pageIndex={pageIndex}\n                pageSize={pageSize}\n                totalPages={totalPages}\n                setPageIndex={setPageIndex}\n                onChangePageSize={setPageSize}\n              /> */}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <ComissionModal\n                show={comissionModal.isVisible}\n                hide={() => setComissionModal({ ...comissionModal, isVisible: false })}\n                comissionData={comissionModal}\n            />\n        </>\n    );\n};\n\nexport default Comission;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nTable.displayName = 'Table';\nexport default Table;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\n\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\n    useEffect(() => {\n        // Ensure pageIndex stays within bounds when totalPages changes\n        if (pageIndex > totalPages) {\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\n        }\n    }, [pageIndex, totalPages, setPageIndex]);\n\n    return (\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\n            {/* Page Size Selection */}\n            <div className=\"d-inline-block me-3\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={pageSize}\n                    onChange={(e) => {\n                        const newSize = Number(e.target.value);\n                        onChangePageSize(newSize);\n                        setPageIndex(1); // Reset to first page\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {[10, 20, 50, 100].map((size) => (\n                        <option key={size} value={size}>\n                            {size}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Page Info */}\n            <span className=\"me-3\">\n                Page{' '}\n                <strong>\n                    {pageIndex} of {totalPages}\n                </strong>\n            </span>\n\n            {/* Go to Page Input */}\n            <label>Go to page: </label>\n            <input\n                type=\"number\"\n                placeholder={`${pageIndex}`}\n                min=\"1\"\n                max={totalPages}\n                onChange={(e) => {\n                    const enteredPage = Number(e.target.value);\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\n                        setPageIndex(enteredPage);\n                    }\n                }}\n                className=\"form-control ms-1 d-inline-block\"\n                style={{ width: '80px' }}\n            />\n\n            {/* Pagination Controls */}\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\n                {/* Previous Button */}\n                {pageIndex > 1 && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Previous\n                        </Link>\n                    </li>\n                )}\n\n                {/* Page Number Buttons */}\n                {Array.from({ length: totalPages }).map((_, i) => {\n                    const page = i + 1; // Adjust index to start from 1\n                    const isCurrentPage = page === pageIndex;\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\n                    const isEdgePage = page === 1 || page === totalPages;\n\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\n                        return (\n                            <li\n                                key={page}\n                                className={`page-item ${isCurrentPage ? 'active' : ''}`}\n                                onClick={() => setPageIndex(page)}>\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        );\n                    } else if (\n                        (page === 2 && pageIndex >= 5) ||\n                        (page === totalPages - 1 && pageIndex <= totalPages - 4)\n                    ) {\n                        return (\n                            <li key={page} className=\"page-item disabled\">\n                                <Link to=\"#\" className=\"page-link px-0\">\n                                    ...\n                                </Link>\n                            </li>\n                        );\n                    }\n\n                    return null;\n                })}\n\n                {/* Next Button */}\n                {pageIndex < totalPages && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\n                        <Link to=\"#\" className=\"page-link\">\n                            Next\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            {/* <Breadcrumb.Item href=\"/\" ><span className='custom-color'>Dashboard</span></Breadcrumb.Item> */}\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index} >\n                                        <span className='custom-color'>{item.label}</span>\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path} >\n                                        <span className='custom-color'>{item.label}</span>\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title custom-color\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"names":["_ref","_store$createComissio","_store$updateComissio","_store$createComissio2","_store$createComissio3","_store$updateComissio2","_store$updateComissio3","show","hide","comissionData","dispatch","useDispatch","store","useSelector","state","control","register","handleSubmit","reset","setValue","formState","errors","useForm","defaultValues","commissions","minAmount","maxAmount","percentage","isActive","_id","fields","append","remove","replace","useFieldArray","name","loading","createComissionDataReducer","updateComissionDataReducer","createStatus","status","updateStatus","closeModal","useEffect","type","Array","isArray","data","mapped","map","item","_item$isActive","toString","getComissionDataAction","search","limit","page","resetComissionDataAction","_jsxs","Modal","centered","size","children","_jsx","Header","className","style","backgroundColor","Title","Form","onSubmit","base","parseFloat","id","updateComissionDataAction","createComissionDataAction","Body","index","_errors$commissions","_errors$commissions$i","_errors$commissions2","_errors$commissions2$","_errors$commissions3","_errors$commissions3$","Row","Col","md","Label","Control","step","min","placeholder","required","isInvalid","max","Select","value","Button","variant","onClick","disabled","length","Footer","borderColor","ButtonLoading","Comission","_store$getComissionDa","_store$getComissionDa2","_store$getComissionDa3","_store$getComissionDa4","_store$getComissionDa5","ComissionData","getComissionDataReducer","commisions","TotalRecords","totalRecords","ComissionLoading","setSearch","useState","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","comissionModal","setComissionModal","isVisible","Math","ceil","handleComissionModal","arguments","undefined","_Fragment","PageTitle","breadCrumbItems","label","path","active","title","xs","Card","boxShadow","outline","Loading","Table","bordered","hover","ComissionModal","React","ref","bsPrefix","striped","borderless","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass","displayName","onChangePageSize","onChange","e","newSize","Number","target","enteredPage","width","Link","to","from","_","i","isCurrentPage","Breadcrumb","listProps","Item","href"],"sourceRoot":""}
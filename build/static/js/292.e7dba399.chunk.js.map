{"version":3,"file":"static/js/292.e7dba399.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","pages/bmg/products/Products.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\n\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\n    useEffect(() => {\n        // Ensure pageIndex stays within bounds when totalPages changes\n        if (pageIndex > totalPages) {\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\n        }\n    }, [pageIndex, totalPages, setPageIndex]);\n\n    return (\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\n            {/* Page Size Selection */}\n            <div className=\"d-inline-block me-3\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={pageSize}\n                    onChange={(e) => {\n                        const newSize = Number(e.target.value);\n                        onChangePageSize(newSize);\n                        setPageIndex(1); // Reset to first page\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {[10, 20, 50, 100].map((size) => (\n                        <option key={size} value={size}>{size}</option>\n                    ))}\n                </select>\n            </div>\n\n            {/* Page Info */}\n            <span className=\"me-3\">\n                Page <strong>{pageIndex} of {totalPages}</strong>\n            </span>\n\n            {/* Go to Page Input */}\n            <label>Go to page: </label>\n            <input\n                type=\"number\"\n                placeholder={`${pageIndex}`}\n                min=\"1\"\n                max={totalPages}\n                onChange={(e) => {\n                    const enteredPage = Number(e.target.value);\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\n                        setPageIndex(enteredPage);\n                    }\n                }}\n                className=\"form-control ms-1 d-inline-block\"\n                style={{ width: '80px' }}\n            />\n\n            {/* Pagination Controls */}\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\n                {/* Previous Button */}\n                {pageIndex > 1 && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\n                    </li>\n                )}\n\n                {/* Page Number Buttons */}\n                {Array.from({ length: totalPages }).map((_, i) => {\n                    const page = i + 1; // Adjust index to start from 1\n                    const isCurrentPage = page === pageIndex;\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\n                    const isEdgePage = page === 1 || page === totalPages;\n\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\n                        return (\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\n                                onClick={() => setPageIndex(page)}>\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\n                            </li>\n                        );\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\n                        return <li key={page} className=\"page-item disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\n                    }\n\n                    return null;\n                })}\n\n                {/* Next Button */}\n                {pageIndex < totalPages && (\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index} style={{ color: '#703133' }}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path} >\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\" style={{ color: '#703133' }}>{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport { ColorRing, RotatingLines } from 'react-loader-spinner';\nconst Loading = () => {\n    return (\n        <div style={{ height: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <RotatingLines\n                strokeColor=\"grey\"\n                strokeWidth=\"4\"\n                animationDuration=\"0.75\"\n                width=\"90\"\n                visible={true}\n            />\n        </div>\n    );\n};\n\n\nconst ButtonLoading = () => {\n    return (\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n        <div className=\" d-flex justify-content-center align-items-center w-100\">\n            <ColorRing\n                visible={true}\n                height=\"25\"\n                width=\"25\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\n            />\n\n            {/* <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div> */}\n        </div>\n    );\n};\n\nconst CartLoading = () => {\n    return (\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\n            <ColorRing\n                visible={true}\n                height=\"32\"\n                width=\"32\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n\n            {/* <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div> */}\n        </div>\n    );\n};\n\nexport { Loading, ButtonLoading, CartLoading };\n","import { useEffect, useState } from 'react';\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Modal, Container, Carousel, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PageTitle from '../../../helpers/PageTitle';\nimport { Loading } from '../../../helpers/loader/Loading';\nimport { getProductActions } from '../../../redux/actions';\nimport Pagination from '../../../helpers/Pagination'\nconst Products = () => {\n    const store = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState('');\n    const [type, setType] = useState('Auction')\n    const [productType, setProductType] = useState('ongoing')\n    const ProductsData = store?.productDataReducer?.productData?.result\n    console.log(ProductsData)\n    const ProductsLoading = store?.productDataReducer?.loading\n\n\n    const TotalRecords = store?.productDataReducer?.productData?.totalRecords || 0;\n    const auctionCounts = store?.productDataReducer?.productData?.auctionCounts || {};\n    const saleCounts = store?.productDataReducer?.productData?.saleCounts || {};\n    const DraftCount = store?.productDataReducer?.productData?.totalDraftCount || 0;\n\n    const {\n        total: AuctionCounts,\n        ongoing: ongoingCounts,\n        upcoming: upcomingCounts,\n        sold: soldCounts,\n        unsold: unSoldCounts,\n    } = auctionCounts;\n\n    const {\n        total: SaleCounts,\n        sold: soldSaleCounts,\n        unsold: unsoldSaleCounts,\n    } = saleCounts || {};\n\n    const [pageIndex, setPageIndex] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [totalPages, setTotalPages] = useState(Math.ceil(TotalRecords / pageSize));\n\n    console.log('making build console for checking')\n    useEffect(() => {\n        setTotalPages(Math.ceil(TotalRecords / pageSize));\n    }, [TotalRecords, pageSize]);\n    useEffect(() => {\n        dispatch(getProductActions({ search: search, limit: pageSize, page: pageIndex, type: type, productType: type !== 'Draft' ? productType : '', publish: type !== 'Draft' ? true : false }));\n    }, [dispatch, pageIndex, pageSize, search, type, productType]);\n\n\n    const [showModal, setShowModal] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n\n    const handleProductClick = (product) => {\n        if (product) {\n            setSelectedProduct(product);\n            setShowModal(true);\n        }\n    };\n\n    // Function to format keys into human-readable format\n    const formatKey = (key) => {\n        switch (key) {\n            case \"categoryId\":\n                return \"Category Name\";\n            case \"subCategoryId\":\n                return \"Subcategory Name\";\n            // Add more custom labels if needed\n            default:\n                // Convert camelCase or snake_case to readable words\n                return key.replace(/([A-Z])/g, ' $1').replace(/[_-]/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n        }\n    };\n\n    // Function to format values (including nested objects and dates\n    // Function to check if a string is a valid date\n    const isDateString = (value) => {\n        if (typeof value !== 'string') return false;\n\n        // Regex to match ISO date strings (e.g., \"2025-03-28T00:00:00.000Z\")\n        const isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/;\n        return isoDateRegex.test(value);\n    };\n\n    // Function to format values (including nested objects and dates)\n    // Function to format values (including nested objects and dates)\n    const formatValue = (value, key) => {\n        // Handle categoryId and subCategoryId specifically\n        if (key === \"categoryId\" || key === \"subCategoryId\") {\n            return value?.name || value?.subCategoryName || \"N/A\"; // Display the name or \"N/A\" if not available\n        }\n\n        if (typeof value === 'object' && value !== null) {\n            return (\n                <div style={{ paddingLeft: '20px', borderLeft: '2px solid #ddd' }}>\n                    {Object.entries(value).map(([subKey, subValue]) => (\n                        <div key={subKey}>\n                            {console.log({ subKey, subValue })}\n                            <strong>{formatKey(subKey)}:</strong> {formatValue(subValue, subKey)}\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n\n        // Check if the value is a valid date string\n        if (isDateString(value)) {\n            const dateOnly = new Date(value).toISOString().split(\"T\")[0];\n            return dateOnly;\n        }\n\n        return value;\n    };\n    const excludedKeys = [\"_id\", \"createdAt\", \"updatedAt\", \"image\", \"categoryId\", \"subCategoryId\", \"soldStatus\", \"status\", \"userId\", \"publish\", \"negotiable\", \"productGenerateId\", \"endBidDateTime\", \"startBidDateTime\", \"buyerId\"];\n\n\n    const formatDate = (dateString) => {\n        if (!dateString) return \"\";\n\n        const date = new Date(dateString);\n        return date.toLocaleString(\"en-US\", {\n            weekday: \"short\",   // \"Thu\"\n            month: \"short\",     // \"Feb\"\n            day: \"2-digit\",     // \"27\"\n            year: \"numeric\",    // \"2025\"\n            hour: \"2-digit\",    // \"12\"\n            minute: \"2-digit\",  // \"00\"\n            hour12: true,       // \"AM/PM\"\n        });\n    };\n    const isValidISODate = (value) => {\n        if (typeof value !== \"string\") return false; // Ensure it's a string before calling includes()\n\n        const date = new Date(value);\n        return !isNaN(date.getTime()) && value.includes(\"T\");\n    };\n    const types = ['Auction', 'Sale'];\n    // const types = ['Auction', 'Sale', 'Draft'];\n    const productTypes = ['ongoing', 'upcoming', 'sold', 'unsold'];\n\n    useEffect(() => {\n        if (type === 'Auction') {\n            setProductType('ongoing')\n        } else if (type === 'Sale') {\n            setProductType('sold')\n        }\n    }, [type]);\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    {\n                        label: 'Item',\n                        path: '/bmg/items',\n                        active: true,\n                    },\n                ]}\n                title={'Item'}\n            />\n            <Row className=\"mb-2 ms-1 border-bottom pb-1\">\n                {types?.map((item) => {\n                    let count = '';\n                    if (item === 'Auction') count = AuctionCounts ?? '';\n                    if (item === 'Sale') count = SaleCounts ?? '';\n                    if (item === 'Draft') count = DraftCount ?? '';\n\n                    return (\n                        <Col\n                            sm=\"auto\"\n                            key={item}\n                            className={`text-center me-3 px-3 py-1 rounded`}\n                            style={{\n                                cursor: 'pointer',\n                                color: type === item ? '#fff' : '#333',\n                                backgroundColor: type === item ? '#008003' : '#f1f1f1',\n                                fontSize: '1rem',\n                                fontWeight: '600',\n                            }}\n                            onClick={() => setType(item)}\n                        >\n                            {item.charAt(0).toUpperCase() + item.slice(1)}{' '}\n                            {count !== '' && (\n                                <span className=\"badge bg-secondary text-light ms-1\">{count}</span>\n                            )}\n                        </Col>\n                    );\n                })}\n            </Row>\n\n            {type !== 'Draft' && (\n                <Row className=\"mb-3 ms-1 py-1 px-2 rounded\" style={{ backgroundColor: '#f8f9fa' }}>\n                    {productTypes.map((item) => {\n                        if (type === 'Sale' && item !== 'sold' && item !== 'unsold') return null;\n\n                        let count = '';\n                        if (type === 'Auction') {\n                            if (item === 'ongoing') count = ongoingCounts ?? '';\n                            if (item === 'upcoming') count = upcomingCounts ?? '';\n                            if (item === 'sold') count = soldCounts ?? '';\n                            if (item === 'unsold') count = unSoldCounts ?? '';\n                        } else if (type === 'Sale') {\n                            if (item === 'sold') count = soldSaleCounts ?? '';\n                            if (item === 'unsold') count = unsoldSaleCounts ?? '';\n                        }\n\n                        return (\n                            <Col\n                                sm=\"auto\"\n                                key={item}\n                                className={`text-center me-2 px-3 py-1`}\n                                style={{\n                                    cursor: 'pointer',\n                                    color: productType === item ? '#fff' : '#333',\n                                    backgroundColor: productType === item ? '#008003' : '#e9ecef',\n                                    fontSize: '0.9rem',\n                                    fontWeight: '500',\n                                    borderRadius: '20px',\n                                }}\n                                onClick={() => setProductType(item)}\n                            >\n                                {item.charAt(0).toUpperCase() + item.slice(1)}{' '}\n                                {count !== '' && (\n                                    <span className=\"badge bg-secondary ms-1\">{count}</span>\n                                )}\n                            </Col>\n                        );\n                    })}\n                </Row>\n            )}\n\n\n            <Row>\n                <Col xs={12}>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center\">\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                <span className=\"px-3 py-1 bg-dark text-light rounded\">\n                                    Total Products: {TotalRecords}\n                                </span>\n                                <div className=\"d-flex\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control w-auto me-1\"\n                                        placeholder=\"Search...\"\n                                        value={search}\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                    {search && (\n                                        <i\n                                            className=\"mdi mdi-backspace-outline text-danger fs-3\"\n                                            onClick={() => setSearch(\"\")}\n                                            style={{ cursor: \"pointer\" }}\n                                        ></i>\n                                    )}\n                                </div>\n                            </div>\n                            {ProductsLoading ? (\n                                <>\n                                    <Loading />\n                                </>\n                            ) : (\n                                <>\n                                    {ProductsData && ProductsData.length > 0 ? (\n\n                                        <>\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table table-striped bg-white \">\n                                                    <thead>\n                                                        <tr className=\"text-nowrap\" style={{ color: '#703133' }}>\n                                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                                            <th scope=\"col\">Product Id</th>\n                                                            <th scope=\"col\">Serial No</th>\n                                                            <th scope=\"col\">Product Name</th>\n                                                            <th scope=\"col\">Brand</th>\n                                                            <th scope=\"col\">Ask Price</th>\n                                                            {type === 'Auction' && <th scope=\"col\">Bidding Amount</th>}\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {ProductsData?.map((data, index) => (\n                                                            <tr\n                                                                key={index}\n                                                                className=\"text-dark fw-bold text-nowrap\">\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                {console.log({ data })}\n                                                                <td className='text-uppercase fw-bold'>\n                                                                    {data?.productGenerateId ? (\n                                                                        <span>{data?.productGenerateId} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n                                                                <td className='text-uppercase fw-bold text-info'>\n                                                                    {data?.Serial_No ? (\n                                                                        <span>{data?.Serial_No} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n\n                                                                <td\n                                                                    className=\"text-uppercase fw-bold\"\n                                                                    style={{ cursor: 'pointer', color: 'crimson', transition: 'color 0.3s ease-in-out' }}\n                                                                    onMouseOver={(e) => e.target.style.color = 'rgb(10 207 151)'}\n                                                                    onMouseOut={(e) => e.target.style.color = 'crimson'}\n                                                                >\n                                                                    <OverlayTrigger\n                                                                        placement=\"left\"\n                                                                        overlay={\n                                                                            <Tooltip id=\"overlay-example\">\n                                                                                View Detail's\n                                                                            </Tooltip>\n                                                                        }>\n                                                                        <b>\n                                                                            {data?.Product_Name ? (\n                                                                                <span onClick={() => handleProductClick(data)}\n                                                                                >{data?.Product_Name?.slice(0, 30) + '...'} </span>\n                                                                            ) : (\n                                                                                <span className=\"d-flex text-danger justify-content-center\">\n                                                                                    N/A\n                                                                                </span>\n                                                                            )}\n                                                                        </b>\n                                                                    </OverlayTrigger>\n                                                                </td>\n                                                                <td className='text-uppercase fw-bold text-primary'>\n                                                                    {data?.Brand ? (\n                                                                        <span>{data?.Brand} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n                                                                <td className='text-uppercase fw-bold text-success'>\n                                                                    {data?.Ask_Price ? (\n                                                                        <span>$ {data?.Ask_Price} </span>\n                                                                    ) : (\n                                                                        <span className=\"d-flex text-danger justify-content-center\">\n                                                                            N/A\n                                                                        </span>\n                                                                    )}\n                                                                </td>\n\n                                                                {type === 'Auction' &&\n                                                                    <td className='text-uppercase fw-bold text-success'>\n                                                                        {data?.Start_Bid_Price ? (\n                                                                            <span>$ {data?.Start_Bid_Price} </span>\n                                                                        ) : (\n                                                                            <span className=\"d-flex text-danger justify-content-center\">\n                                                                                N/A\n                                                                            </span>\n                                                                        )}\n                                                                    </td>}\n                                                            </tr>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </>\n                                    ) : (\n                                        <div\n                                            className=\"text-center d-flex align-items-center justify-content-center\"\n                                            style={{ height: '30vh' }}>\n                                            <code className=\"fs-4\">\n                                                No Product's found.\n                                            </code>\n                                        </div>\n                                    )}\n                                </>\n                            )}\n                            <Pagination\n                                pageIndex={pageIndex}\n                                pageSize={pageSize}\n                                totalPages={totalPages}\n                                setPageIndex={setPageIndex}\n                                onChangePageSize={setPageSize}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row >\n\n            <Modal show={showModal} onHide={() => setShowModal(false)} centered size=\"lg\">\n                <Modal.Header className='px-2 py-1 text-light' style={{ backgroundColor: '#008003' }}>\n                    <Modal.Title className=\"fw-semibold\">Product Details</Modal.Title>\n                    <i className=\"mdi mdi-close fs-3\" onClick={() => setShowModal(false)} style={{ cursor: 'pointer' }}></i>\n                </Modal.Header>\n                <Modal.Body>\n                    {selectedProduct && (\n                        <Container>\n                            {/* Image Section */}\n                            {selectedProduct.image?.length > 0 && (\n                                <Carousel interval={5000} className=\"mb-3 shadow-sm rounded\">\n                                    {selectedProduct.image.map((img, index) => (\n                                        <Carousel.Item key={index}>\n                                            <img\n                                                src={img}\n                                                alt={`Slide ${index}`}\n                                                className=\"d-block w-100 rounded\"\n                                                style={{\n                                                    maxHeight: \"400px\",\n                                                    objectFit: \"contain\",\n                                                    boxShadow: \"0px 4px 10px rgba(0,0,0,0.2)\",\n                                                }}\n                                            />\n                                        </Carousel.Item>\n                                    ))}\n                                </Carousel>\n                            )}\n\n                            <Row className=\"border rounded p-3 bg-light\">\n                                {Object.entries(selectedProduct)\n                                    .filter(([key, value]) => !excludedKeys.includes(key) && value) // Exclude unnecessary fields\n                                    .map(([key, value]) => (\n                                        <Col md={6} key={key} className=\"mb-3\">\n                                            <div className=\"d-flex flex-column\">\n                                                <strong className=\"text-muted mb-1\">{formatKey(key)}</strong>\n                                                <div className=\"fw-bold\" style={{ wordBreak: 'break-word' }}>\n                                                    {formatValue(value, key)}\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    ))}\n                            </Row>\n\n\n                        </Container>\n                    )}\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n}\n\nexport default Products\n","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null || onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null || onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null || onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null || onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null || onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null || onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null || onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null || onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null || onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null || onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","Products","_store$productDataRed","_store$productDataRed2","_store$productDataRed3","_store$productDataRed4","_store$productDataRed5","_store$productDataRed6","_store$productDataRed7","_store$productDataRed8","_store$productDataRed9","_store$productDataRed10","_store$productDataRed11","_selectedProduct$imag","store","useSelector","state","dispatch","useDispatch","search","setSearch","useState","setType","productType","setProductType","ProductsData","productDataReducer","productData","result","console","log","ProductsLoading","loading","TotalRecords","totalRecords","auctionCounts","saleCounts","DraftCount","totalDraftCount","total","AuctionCounts","ongoing","ongoingCounts","upcoming","upcomingCounts","sold","soldCounts","unsold","unSoldCounts","SaleCounts","soldSaleCounts","unsoldSaleCounts","setPageSize","setTotalPages","ceil","getProductActions","limit","publish","showModal","setShowModal","selectedProduct","setSelectedProduct","formatKey","key","replace","c","toUpperCase","formatValue","name","subCategoryName","paddingLeft","borderLeft","Object","entries","subKey","subValue","test","isDateString","Date","toISOString","split","excludedKeys","types","_Fragment","PageTitle","count","sm","cursor","backgroundColor","fontSize","fontWeight","charAt","slice","borderRadius","xs","Card","boxShadow","Body","scope","data","_data$Product_Name","productGenerateId","Serial_No","transition","onMouseOver","onMouseOut","OverlayTrigger","placement","overlay","Tooltip","id","Product_Name","product","Brand","Ask_Price","Start_Bid_Price","Pagination","Modal","show","onHide","centered","Header","Title","Container","image","Carousel","interval","img","src","alt","maxHeight","objectFit","filter","_ref2","includes","_ref3","md","wordBreak","fn","deps","isFirst","useRef","current","CarouselCaption","React","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CarouselItem","finalClassName","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","keyboard","onKeyDown","pause","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","tagName","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","Anchor","assign","Caption"],"sourceRoot":""}